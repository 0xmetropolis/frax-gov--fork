6,8c6,8
< import "./IGovernorTimelock.sol";
< import "../Governor.sol";
< import "../TimelockController.sol";
---
> import "@openzeppelin/contracts/governance/extensions/IGovernorTimelock.sol";
> import "@openzeppelin/contracts/governance/TimelockController.sol";
> import { Governor } from "./Governor.sol";
27,28c27,28
<     TimelockController private _timelock;
<     mapping(uint256 => bytes32) private _timelockIds;
---
>     TimelockController public $timelock;
>     mapping(uint256 => bytes32) public $timelockIds;
60c60
<         bytes32 queueid = _timelockIds[proposalId];
---
>         bytes32 queueid = $timelockIds[proposalId];
63c63
<         } else if (_timelock.isOperationDone(queueid)) {
---
>         } else if ($timelock.isOperationDone(queueid)) {
65c65
<         } else if (_timelock.isOperationPending(queueid)) {
---
>         } else if ($timelock.isOperationPending(queueid)) {
76c76
<         return address(_timelock);
---
>         return address($timelock);
83c83
<         uint256 eta = _timelock.getTimestamp(_timelockIds[proposalId]);
---
>         uint256 eta = $timelock.getTimestamp($timelockIds[proposalId]);
100,102c100,102
<         uint256 delay = _timelock.getMinDelay();
<         _timelockIds[proposalId] = _timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);
<         _timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);
---
>         uint256 delay = $timelock.getMinDelay();
>         $timelockIds[proposalId] = $timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);
>         $timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);
113c113,114
<         uint256 /* proposalId */,
---
>         uint256,
>         /* proposalId */
119c120
<         _timelock.executeBatch{value: msg.value}(targets, values, calldatas, 0, descriptionHash);
---
>         $timelock.executeBatch{ value: msg.value }(targets, values, calldatas, 0, descriptionHash);
137,139c138,140
<         if (_timelockIds[proposalId] != 0) {
<             _timelock.cancel(_timelockIds[proposalId]);
<             delete _timelockIds[proposalId];
---
>         if ($timelockIds[proposalId] != 0) {
>             $timelock.cancel($timelockIds[proposalId]);
>             delete $timelockIds[proposalId];
149c150
<         return address(_timelock);
---
>         return address($timelock);
163,164c164,165
<         emit TimelockChange(address(_timelock), address(newTimelock));
<         _timelock = newTimelock;
---
>         emit TimelockChange(address($timelock), address(newTimelock));
>         $timelock = newTimelock;