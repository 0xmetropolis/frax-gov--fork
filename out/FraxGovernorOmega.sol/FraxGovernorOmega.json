{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "veFxs",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "veFxsVotingDelegation",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "safeAllowlist",
              "type": "address[]"
            },
            {
              "internalType": "address payable",
              "name": "timelockController",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialVotingDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialVotingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialProposalThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumNumeratorValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialVotingDelayBlocks",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialShortCircuitNumerator",
              "type": "uint256"
            }
          ],
          "internalType": "struct ConstructorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadBatchArgs",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotCancelOptimisticTransaction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotPropose",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotRelay",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "DisallowedTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTimepoint",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonceReserved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotTimelockController",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ParamLengthsNotEqual",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposalAlreadyCanceled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "SafeAlreadyOnAllowlist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "SafeNotOnAllowlist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameSafeVotingPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SenderVotingWeightBelowProposalThreshold",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ShortCircuitNumeratorGreaterThanQuorumDenominator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "TransactionAlreadyApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongProposalState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongSafeSignatureType",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "AddSafeToAllowlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voteStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voteEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumNumerator",
          "type": "uint256"
        }
      ],
      "name": "QuorumNumeratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "RemoveSafeFromAllowlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldSafeVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSafeVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "SafeVotingPeriodSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldShortCircuitNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newShortCircuitNumerator",
          "type": "uint256"
        }
      ],
      "name": "ShortCircuitNumeratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "TransactionProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldVotingDelegation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newVotingDelegation",
          "type": "address"
        }
      ],
      "name": "VeFxsVotingDelegationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "VoteCastWithParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelayBlocks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelayBlocks",
          "type": "uint256"
        }
      ],
      "name": "VotingDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "safeNonce",
          "type": "uint256"
        }
      ],
      "name": "$gnosisSafeToNonceToTxHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "$safeAllowlist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "$safeVotingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "votingPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "snapshot",
          "type": "uint256"
        }
      ],
      "name": "$snapshotTimestampToSnapshotBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "$votingDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXTENDED_BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIMELOCK_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VE_FXS",
      "outputs": [
        {
          "internalType": "contract IVeFxs",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "teamSafe",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "abortTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "safes",
          "type": "address[]"
        }
      ],
      "name": "addSafesToAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "teamSafe",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct IFraxGovernorOmega.TxHashArgs",
          "name": "args",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "addTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "optimisticProposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "teamSafes",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct IFraxGovernorOmega.TxHashArgs[]",
          "name": "args",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchAddTransaction",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "optimisticProposalIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "support",
          "type": "uint8[]"
        }
      ],
      "name": "bulkCastVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "castVoteWithReasonAndParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteWithReasonAndParamsBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fractionalVoteNonce",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "getVotesWithParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalProposer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint40",
          "name": "voteStart",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "voteEnd",
          "type": "uint40"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quorumAtTimepoint",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "quorumNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "teamSafe",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "rejectTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "safes",
          "type": "address[]"
        }
      ],
      "name": "removeSafesFromAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newSafeVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "setSafeVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "veFxsVotingDelegation",
          "type": "address"
        }
      ],
      "name": "setVeFxsVotingDelegation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelayBlocks",
          "type": "uint256"
        }
      ],
      "name": "setVotingDelayBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortCircuitNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "latestShortCircuitNumerator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "shortCircuitNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shortCircuitNumeratorAtTimepoint",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "shortCircuitThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shortCircuitThresholdAtTimepoint",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ProposalState",
          "name": "proposalState",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC5805",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newQuorumNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateQuorumNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newShortCircuitNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateShortCircuitNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "voteWeightCast",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2196:26161:86:-:0;;;4419:911;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4516:608;;;;;;;;4564:6;:12;;;4516:608;;;;;;4617:6;:28;;;4516:608;;;;;;4670:6;:11;;;4516:608;;;;4719:6;:25;;;4516:608;;;;4783:6;:26;;;4516:608;;;;4853:6;:31;;;4516:608;;;;4924:6;:27;;;4516:608;;;;4995:6;:31;;;4516:608;;;;5074:6;:35;;;4516:608;;;4560:6:85;:27;;;4493:6;:28;;;4376:6;:25;;;4403:6;:26;;;4431:6;:31;;;4337:6;:12;;;3664:5:89;3671:9;:7;;;:9;;:::i;:::-;3251:45:70;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;3700:5:89::1;3692;:13;;;;;;:::i;:::-;;3624:88:::0;894:35:92;910:18;894:15;;;:35;;:::i;:::-;939:37;956:19;939:16;;;:37;;:::i;:::-;986:47;1008:24;986:21;;;:47;;:::i;:::-;781:259;;;663:12:94;638:5;;:39;;;;;;;;;;;;;;;;;;595:89;1265:44:95;1288:20;1265:22;;;:44;;:::i;:::-;1213:103;4619:6:85::4;:12;;;4603:29;;;;;;;;::::0;::::4;4642:65;4671:6;:35;;;4642:28;;;:65;;:::i;:::-;4717:54;4739:6;:31;;;4717:21;;;:54;;:::i;:::-;4880:144;4948:1;4985:6;:28;;;4880:144;;;;;;;:::i;:::-;;;;;;;;4261:770:::0;5171:6:86::1;:25;;;5149:47;;;;;;;;::::0;::::1;5281:42;5302:6;:20;;;5281;;;:42;;:::i;:::-;4419:911:::0;2196:26161;;5258:99:89;5315:13;5340:10;;;;;;;;;;;;;;;;;;;5258:99;:::o;2895:341:66:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:70:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;2624:171:92:-;2705:44;2720:12;;2734:14;2705:44;;;;;;;:::i;:::-;;;;;;;;2774:14;2759:12;:29;;;;2624:171;:::o;2915:316::-;3076:1;3058:15;:19;3050:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3136:47;3152:13;;3167:15;3136:47;;;;;;;:::i;:::-;;;;;;;;3209:15;3193:13;:31;;;;2915:316;:::o;3361:213::-;3454:62;3475:18;;3495:20;3454:62;;;;;;;:::i;:::-;;;;;;;;3547:20;3526:18;:41;;;;3361:213;:::o;3413:538:95:-;3543:19;:17;;;:19;;:::i;:::-;3521:18;:41;;3500:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;3666:26;3695:17;:15;;;:17;;:::i;:::-;3666:46;;3770:96;3799:26;3817:7;:5;;;:7;;:::i;:::-;3799:26;;:17;;;:26;;:::i;:::-;3827:38;3846:18;3827;;;:38;;:::i;:::-;3770:23;:28;;;;:96;;;;;:::i;:::-;;;3882:62;3905:18;3925;3882:62;;;;;;;:::i;:::-;;;;;;;;3490:461;3413:538;:::o;8807:715:85:-;8992:19;:17;;;:19;;:::i;:::-;8965:24;:46;8961:135;;;9034:51;;;;;;;;;;;;;;8961:135;9106:32;9141:23;:21;;;:23;;:::i;:::-;9106:58;;9222:109;9258:26;9276:7;:5;;;:7;;:::i;:::-;9258:26;;:17;;;:26;;:::i;:::-;9286:44;9305:24;9286:18;;;:44;;:::i;:::-;9222:30;:35;;;;:109;;;;;:::i;:::-;;;9347:168;9416:24;9480;9347:168;;;;;;;:::i;:::-;;;;;;;;8888:634;8807:715;:::o;5677:337::-;5754:28;5785:18;;5754:49;;5834:17;5813:18;:38;;;;5866:141;5923:20;5979:17;5866:141;;;;;;;:::i;:::-;;;;;;;;5744:270;5677:337;:::o;21140:329:86:-;21218:9;21213:250;21237:5;:12;21233:1;:16;21213:250;;;21302:1;21274:14;:24;21289:5;21295:1;21289:8;;;;;;;;:::i;:::-;;;;;;;;21274:24;;;;;;;;;;;;;;;;:29;21270:93;;21354:5;21360:1;21354:8;;;;;;;;:::i;:::-;;;;;;;;21312:51;;;;;;;;;;;:::i;:::-;;;;;;;;21270:93;21404:1;21377:14;:24;21392:5;21398:1;21392:8;;;;;;;;:::i;:::-;;;;;;;;21377:24;;;;;;;;;;;;;;;:28;;;;21443:5;21449:1;21443:8;;;;;;;;:::i;:::-;;;;;;;;21424:28;;;;;;;;;;;;21251:3;;;;:::i;:::-;;;21213:250;;;;21140:329;:::o;1689:286:66:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:67:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;2343:94:95:-;2401:7;2427:3;2420:10;;2343:94;:::o;1413:121::-;1469:7;1495:32;:23;:30;;;:32;;:::i;:::-;1488:39;;;;1413:121;:::o;861:235:94:-;916:6;938:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;934:156;;1048:31;1066:12;1048:17;;;:31;;:::i;:::-;1041:38;;;;934:156;1000:9;993:16;;;861:235;;:::o;15264:187:74:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;2836:192::-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;8063:162:64:-;8145:7;8154;8180:38;8188:4;:17;;8207:3;8212:5;8180:7;;;:38;;:::i;:::-;8173:45;;;;8063:162;;;;;;:::o;9988:177:85:-;10042:35;10119:39;:30;:37;;;:39;;:::i;:::-;10089:69;;;;9988:177;:::o;10152:206:64:-;10214:7;10233:11;10247:4;:17;;:24;;;;10233:38;;10295:1;10288:3;:8;:63;;10303:41;10317:4;:17;;10342:1;10336:3;:7;;;;:::i;:::-;10303:13;;;:41;;:::i;:::-;:48;;;;;;;;;;;;10288:63;;;10299:1;10288:63;10281:70;;;10152:206;;;:::o;14240:187:74:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;11288:836:64:-;11379:7;11388;11407:11;11421:4;:11;;;;11407:25;;11453:1;11447:3;:7;11443:675;;;11522:25;11550:28;11564:4;11576:1;11570:3;:7;;;;:::i;:::-;11550:13;;;:28;;:::i;:::-;11522:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11669:3;11656:16;;:4;:9;;;:16;;;;11648:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;11781:3;11768:16;;:4;:9;;;:16;;;11764:189;;11842:5;11804:28;11818:4;11830:1;11824:3;:7;;;;:::i;:::-;11804:13;;;:28;;:::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;11764:189;;;11886:4;11896:41;;;;;;;;11917:3;11896:41;;;;;;11930:5;11896:41;;;;;11886:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11764:189;11974:4;:11;;;11987:5;11966:27;;;;;;;;11443:675;12024:4;12034:41;;;;;;;;12055:3;12034:41;;;;;;12068:5;12034:41;;;;;12024:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12098:1;12101:5;12090:17;;;;;11288:836;;;;;;;:::o;13826:265::-;13936:28;14009:9;14006:1;13999:20;14071:3;14064:4;14061:1;14051:18;14047:28;14032:43;;13826:265;;;;:::o;7:75:111:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:117::-;1282:1;1279;1272:12;1296:117;1405:1;1402;1395:12;1419:117;1528:1;1525;1518:12;1542:308;1604:4;1694:18;1686:6;1683:30;1680:56;;;1716:18;;:::i;:::-;1680:56;1754:29;1776:6;1754:29;:::i;:::-;1746:37;;1838:4;1832;1828:15;1820:23;;1542:308;;;:::o;1856:246::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2094:1;2085:6;2080:3;2076:16;2069:27;1918:184;1856:246;;;:::o;2108:434::-;2197:5;2222:66;2238:49;2280:6;2238:49;:::i;:::-;2222:66;:::i;:::-;2213:75;;2311:6;2304:5;2297:21;2349:4;2342:5;2338:16;2387:3;2378:6;2373:3;2369:16;2366:25;2363:112;;;2394:79;;:::i;:::-;2363:112;2484:52;2529:6;2524:3;2519;2484:52;:::i;:::-;2203:339;2108:434;;;;;:::o;2562:355::-;2629:5;2678:3;2671:4;2663:6;2659:17;2655:27;2645:122;;2686:79;;:::i;:::-;2645:122;2796:6;2790:13;2821:90;2907:3;2899:6;2892:4;2884:6;2880:17;2821:90;:::i;:::-;2812:99;;2635:282;2562:355;;;;:::o;2923:126::-;2960:7;3000:42;2993:5;2989:54;2978:65;;2923:126;;;:::o;3055:96::-;3092:7;3121:24;3139:5;3121:24;:::i;:::-;3110:35;;3055:96;;;:::o;3157:122::-;3230:24;3248:5;3230:24;:::i;:::-;3223:5;3220:35;3210:63;;3269:1;3266;3259:12;3210:63;3157:122;:::o;3285:143::-;3342:5;3373:6;3367:13;3358:22;;3389:33;3416:5;3389:33;:::i;:::-;3285:143;;;;:::o;3434:311::-;3511:4;3601:18;3593:6;3590:30;3587:56;;;3623:18;;:::i;:::-;3587:56;3673:4;3665:6;3661:17;3653:25;;3733:4;3727;3723:15;3715:23;;3434:311;;;:::o;3751:117::-;3860:1;3857;3850:12;3891:732;3998:5;4023:81;4039:64;4096:6;4039:64;:::i;:::-;4023:81;:::i;:::-;4014:90;;4124:5;4153:6;4146:5;4139:21;4187:4;4180:5;4176:16;4169:23;;4240:4;4232:6;4228:17;4220:6;4216:30;4269:3;4261:6;4258:15;4255:122;;;4288:79;;:::i;:::-;4255:122;4403:6;4386:231;4420:6;4415:3;4412:15;4386:231;;;4495:3;4524:48;4568:3;4556:10;4524:48;:::i;:::-;4519:3;4512:61;4602:4;4597:3;4593:14;4586:21;;4462:155;4446:4;4441:3;4437:14;4430:21;;4386:231;;;4390:21;4004:619;;3891:732;;;;;:::o;4646:385::-;4728:5;4777:3;4770:4;4762:6;4758:17;4754:27;4744:122;;4785:79;;:::i;:::-;4744:122;4895:6;4889:13;4920:105;5021:3;5013:6;5006:4;4998:6;4994:17;4920:105;:::i;:::-;4911:114;;4734:297;4646:385;;;;:::o;5037:104::-;5082:7;5111:24;5129:5;5111:24;:::i;:::-;5100:35;;5037:104;;;:::o;5147:138::-;5228:32;5254:5;5228:32;:::i;:::-;5221:5;5218:43;5208:71;;5275:1;5272;5265:12;5208:71;5147:138;:::o;5291:159::-;5356:5;5387:6;5381:13;5372:22;;5403:41;5438:5;5403:41;:::i;:::-;5291:159;;;;:::o;5456:77::-;5493:7;5522:5;5511:16;;5456:77;;;:::o;5539:122::-;5612:24;5630:5;5612:24;:::i;:::-;5605:5;5602:35;5592:63;;5651:1;5648;5641:12;5592:63;5539:122;:::o;5667:143::-;5724:5;5755:6;5749:13;5740:22;;5771:33;5798:5;5771:33;:::i;:::-;5667:143;;;;:::o;5848:2682::-;5944:5;5988:6;5976:9;5971:3;5967:19;5963:32;5960:119;;;5998:79;;:::i;:::-;5960:119;6097:23;6113:6;6097:23;:::i;:::-;6088:32;;6200:1;6189:9;6185:17;6179:24;6230:18;6222:6;6219:30;6216:117;;;6252:79;;:::i;:::-;6216:117;6372:70;6438:3;6429:6;6418:9;6414:22;6372:70;:::i;:::-;6365:4;6358:5;6354:16;6347:96;6130:324;6514:2;6555:60;6611:3;6602:6;6591:9;6587:22;6555:60;:::i;:::-;6548:4;6541:5;6537:16;6530:86;6464:163;6703:2;6744:60;6800:3;6791:6;6780:9;6776:22;6744:60;:::i;:::-;6737:4;6730:5;6726:16;6719:86;6637:179;6905:2;6894:9;6890:18;6884:25;6936:18;6928:6;6925:30;6922:117;;;6958:79;;:::i;:::-;6922:117;7078:85;7159:3;7150:6;7139:9;7135:22;7078:85;:::i;:::-;7071:4;7064:5;7060:16;7053:111;6826:349;7248:3;7290:68;7354:3;7345:6;7334:9;7330:22;7290:68;:::i;:::-;7283:4;7276:5;7272:16;7265:94;7185:185;7443:3;7485:60;7541:3;7532:6;7521:9;7517:22;7485:60;:::i;:::-;7478:4;7471:5;7467:16;7460:86;7380:177;7631:3;7673:60;7729:3;7720:6;7709:9;7705:22;7673:60;:::i;:::-;7666:4;7659:5;7655:16;7648:86;7567:178;7824:3;7866:60;7922:3;7913:6;7902:9;7898:22;7866:60;:::i;:::-;7859:4;7852:5;7848:16;7841:86;7755:183;8013:3;8057:60;8113:3;8104:6;8093:9;8089:22;8057:60;:::i;:::-;8048:6;8041:5;8037:18;8030:88;7948:181;8208:3;8252:60;8308:3;8299:6;8288:9;8284:22;8252:60;:::i;:::-;8243:6;8236:5;8232:18;8225:88;8139:185;8407:3;8451:60;8507:3;8498:6;8487:9;8483:22;8451:60;:::i;:::-;8442:6;8435:5;8431:18;8424:88;8334:189;5848:2682;;;;:::o;8536:576::-;8642:6;8691:2;8679:9;8670:7;8666:23;8662:32;8659:119;;;8697:79;;:::i;:::-;8659:119;8838:1;8827:9;8823:17;8817:24;8868:18;8860:6;8857:30;8854:117;;;8890:79;;:::i;:::-;8854:117;8995:100;9087:7;9078:6;9067:9;9063:22;8995:100;:::i;:::-;8985:110;;8788:317;8536:576;;;;:::o;9118:99::-;9170:6;9204:5;9198:12;9188:22;;9118:99;;;:::o;9223:180::-;9271:77;9268:1;9261:88;9368:4;9365:1;9358:15;9392:4;9389:1;9382:15;9409:320;9453:6;9490:1;9484:4;9480:12;9470:22;;9537:1;9531:4;9527:12;9558:18;9548:81;;9614:4;9606:6;9602:17;9592:27;;9548:81;9676:2;9668:6;9665:14;9645:18;9642:38;9639:84;;9695:18;;:::i;:::-;9639:84;9460:269;9409:320;;;:::o;9735:141::-;9784:4;9807:3;9799:11;;9830:3;9827:1;9820:14;9864:4;9861:1;9851:18;9843:26;;9735:141;;;:::o;9882:93::-;9919:6;9966:2;9961;9954:5;9950:14;9946:23;9936:33;;9882:93;;;:::o;9981:107::-;10025:8;10075:5;10069:4;10065:16;10044:37;;9981:107;;;;:::o;10094:393::-;10163:6;10213:1;10201:10;10197:18;10236:97;10266:66;10255:9;10236:97;:::i;:::-;10354:39;10384:8;10373:9;10354:39;:::i;:::-;10342:51;;10426:4;10422:9;10415:5;10411:21;10402:30;;10475:4;10465:8;10461:19;10454:5;10451:30;10441:40;;10170:317;;10094:393;;;;;:::o;10493:60::-;10521:3;10542:5;10535:12;;10493:60;;;:::o;10559:142::-;10609:9;10642:53;10660:34;10669:24;10687:5;10669:24;:::i;:::-;10660:34;:::i;:::-;10642:53;:::i;:::-;10629:66;;10559:142;;;:::o;10707:75::-;10750:3;10771:5;10764:12;;10707:75;;;:::o;10788:269::-;10898:39;10929:7;10898:39;:::i;:::-;10959:91;11008:41;11032:16;11008:41;:::i;:::-;11000:6;10993:4;10987:11;10959:91;:::i;:::-;10953:4;10946:105;10864:193;10788:269;;;:::o;11063:73::-;11108:3;11063:73;:::o;11142:189::-;11219:32;;:::i;:::-;11260:65;11318:6;11310;11304:4;11260:65;:::i;:::-;11195:136;11142:189;;:::o;11337:186::-;11397:120;11414:3;11407:5;11404:14;11397:120;;;11468:39;11505:1;11498:5;11468:39;:::i;:::-;11441:1;11434:5;11430:13;11421:22;;11397:120;;;11337:186;;:::o;11529:543::-;11630:2;11625:3;11622:11;11619:446;;;11664:38;11696:5;11664:38;:::i;:::-;11748:29;11766:10;11748:29;:::i;:::-;11738:8;11734:44;11931:2;11919:10;11916:18;11913:49;;;11952:8;11937:23;;11913:49;11975:80;12031:22;12049:3;12031:22;:::i;:::-;12021:8;12017:37;12004:11;11975:80;:::i;:::-;11634:431;;11619:446;11529:543;;;:::o;12078:117::-;12132:8;12182:5;12176:4;12172:16;12151:37;;12078:117;;;;:::o;12201:169::-;12245:6;12278:51;12326:1;12322:6;12314:5;12311:1;12307:13;12278:51;:::i;:::-;12274:56;12359:4;12353;12349:15;12339:25;;12252:118;12201:169;;;;:::o;12375:295::-;12451:4;12597:29;12622:3;12616:4;12597:29;:::i;:::-;12589:37;;12659:3;12656:1;12652:11;12646:4;12643:21;12635:29;;12375:295;;;;:::o;12675:1395::-;12792:37;12825:3;12792:37;:::i;:::-;12894:18;12886:6;12883:30;12880:56;;;12916:18;;:::i;:::-;12880:56;12960:38;12992:4;12986:11;12960:38;:::i;:::-;13045:67;13105:6;13097;13091:4;13045:67;:::i;:::-;13139:1;13163:4;13150:17;;13195:2;13187:6;13184:14;13212:1;13207:618;;;;13869:1;13886:6;13883:77;;;13935:9;13930:3;13926:19;13920:26;13911:35;;13883:77;13986:67;14046:6;14039:5;13986:67;:::i;:::-;13980:4;13973:81;13842:222;13177:887;;13207:618;13259:4;13255:9;13247:6;13243:22;13293:37;13325:4;13293:37;:::i;:::-;13352:1;13366:208;13380:7;13377:1;13374:14;13366:208;;;13459:9;13454:3;13450:19;13444:26;13436:6;13429:42;13510:1;13502:6;13498:14;13488:24;;13557:2;13546:9;13542:18;13529:31;;13403:4;13400:1;13396:12;13391:17;;13366:208;;;13602:6;13593:7;13590:19;13587:179;;;13660:9;13655:3;13651:19;13645:26;13703:48;13745:4;13737:6;13733:17;13722:9;13703:48;:::i;:::-;13695:6;13688:64;13610:156;13587:179;13812:1;13808;13800:6;13796:14;13792:22;13786:4;13779:36;13214:611;;;13177:887;;12767:1303;;;12675:1395;;:::o;14076:118::-;14163:24;14181:5;14163:24;:::i;:::-;14158:3;14151:37;14076:118;;:::o;14200:332::-;14321:4;14359:2;14348:9;14344:18;14336:26;;14372:71;14440:1;14429:9;14425:17;14416:6;14372:71;:::i;:::-;14453:72;14521:2;14510:9;14506:18;14497:6;14453:72;:::i;:::-;14200:332;;;;;:::o;14538:77::-;14575:7;14604:5;14593:16;;14538:77;;;:::o;14621:118::-;14708:24;14726:5;14708:24;:::i;:::-;14703:3;14696:37;14621:118;;:::o;14745:::-;14832:24;14850:5;14832:24;:::i;:::-;14827:3;14820:37;14745:118;;:::o;14869:664::-;15074:4;15112:3;15101:9;15097:19;15089:27;;15126:71;15194:1;15183:9;15179:17;15170:6;15126:71;:::i;:::-;15207:72;15275:2;15264:9;15260:18;15251:6;15207:72;:::i;:::-;15289;15357:2;15346:9;15342:18;15333:6;15289:72;:::i;:::-;15371;15439:2;15428:9;15424:18;15415:6;15371:72;:::i;:::-;15453:73;15521:3;15510:9;15506:19;15497:6;15453:73;:::i;:::-;14869:664;;;;;;;;:::o;15539:332::-;15660:4;15698:2;15687:9;15683:18;15675:26;;15711:71;15779:1;15768:9;15764:17;15755:6;15711:71;:::i;:::-;15792:72;15860:2;15849:9;15845:18;15836:6;15792:72;:::i;:::-;15539:332;;;;;:::o;15877:169::-;15961:11;15995:6;15990:3;15983:19;16035:4;16030:3;16026:14;16011:29;;15877:169;;;;:::o;16052:226::-;16192:34;16188:1;16180:6;16176:14;16169:58;16261:9;16256:2;16248:6;16244:15;16237:34;16052:226;:::o;16284:366::-;16426:3;16447:67;16511:2;16506:3;16447:67;:::i;:::-;16440:74;;16523:93;16612:3;16523:93;:::i;:::-;16641:2;16636:3;16632:12;16625:19;;16284:366;;;:::o;16656:419::-;16822:4;16860:2;16849:9;16845:18;16837:26;;16909:9;16903:4;16899:20;16895:1;16884:9;16880:17;16873:47;16937:131;17063:4;16937:131;:::i;:::-;16929:139;;16656:419;;;:::o;17081:291::-;17221:34;17217:1;17209:6;17205:14;17198:58;17290:34;17285:2;17277:6;17273:15;17266:59;17359:5;17354:2;17346:6;17342:15;17335:30;17081:291;:::o;17378:366::-;17520:3;17541:67;17605:2;17600:3;17541:67;:::i;:::-;17534:74;;17617:93;17706:3;17617:93;:::i;:::-;17735:2;17730:3;17726:12;17719:19;;17378:366;;;:::o;17750:419::-;17916:4;17954:2;17943:9;17939:18;17931:26;;18003:9;17997:4;17993:20;17989:1;17978:9;17974:17;17967:47;18031:131;18157:4;18031:131;:::i;:::-;18023:139;;17750:419;;;:::o;18175:180::-;18223:77;18220:1;18213:88;18320:4;18317:1;18310:15;18344:4;18341:1;18334:15;18361:222;18454:4;18492:2;18481:9;18477:18;18469:26;;18505:71;18573:1;18562:9;18558:17;18549:6;18505:71;:::i;:::-;18361:222;;;;:::o;18589:180::-;18637:77;18634:1;18627:88;18734:4;18731:1;18724:15;18758:4;18755:1;18748:15;18775:233;18814:3;18837:24;18855:5;18837:24;:::i;:::-;18828:33;;18883:66;18876:5;18873:77;18870:103;;18953:18;;:::i;:::-;18870:103;19000:1;18993:5;18989:13;18982:20;;18775:233;;;:::o;19014:377::-;19102:3;19130:39;19163:5;19130:39;:::i;:::-;19185:71;19249:6;19244:3;19185:71;:::i;:::-;19178:78;;19265:65;19323:6;19318:3;19311:4;19304:5;19300:16;19265:65;:::i;:::-;19355:29;19377:6;19355:29;:::i;:::-;19350:3;19346:39;19339:46;;19106:285;19014:377;;;;:::o;19397:313::-;19510:4;19548:2;19537:9;19533:18;19525:26;;19597:9;19591:4;19587:20;19583:1;19572:9;19568:17;19561:47;19625:78;19698:4;19689:6;19625:78;:::i;:::-;19617:86;;19397:313;;;;:::o;19716:98::-;19767:6;19801:5;19795:12;19785:22;;19716:98;;;:::o;19820:116::-;19871:4;19894:3;19886:11;;19924:4;19919:3;19915:14;19907:22;;19820:116;;;:::o;19942:154::-;19985:11;20021:29;20045:3;20039:10;20021:29;:::i;:::-;20084:5;20060:29;;19997:99;19942:154;;;:::o;20102:594::-;20186:5;20217:38;20249:5;20217:38;:::i;:::-;20280:5;20307:40;20341:5;20307:40;:::i;:::-;20295:52;;20366:35;20392:8;20366:35;:::i;:::-;20357:44;;20425:2;20417:6;20414:14;20411:278;;;20496:169;20581:66;20551:6;20547:2;20543:15;20540:1;20536:23;20496:169;:::i;:::-;20473:5;20452:227;20443:236;;20411:278;20192:504;;20102:594;;;:::o;20702:97::-;20738:7;20778:14;20771:5;20767:26;20756:37;;20702:97;;;:::o;20805:120::-;20877:23;20894:5;20877:23;:::i;:::-;20870:5;20867:34;20857:62;;20915:1;20912;20905:12;20857:62;20805:120;:::o;20931:141::-;20987:5;21018:6;21012:13;21003:22;;21034:32;21060:5;21034:32;:::i;:::-;20931:141;;;;:::o;21078:349::-;21147:6;21196:2;21184:9;21175:7;21171:23;21167:32;21164:119;;;21202:79;;:::i;:::-;21164:119;21322:1;21347:63;21402:7;21393:6;21382:9;21378:22;21347:63;:::i;:::-;21337:73;;21293:127;21078:349;;;;:::o;21433:225::-;21573:34;21569:1;21561:6;21557:14;21550:58;21642:8;21637:2;21629:6;21625:15;21618:33;21433:225;:::o;21664:366::-;21806:3;21827:67;21891:2;21886:3;21827:67;:::i;:::-;21820:74;;21903:93;21992:3;21903:93;:::i;:::-;22021:2;22016:3;22012:12;22005:19;;21664:366;;;:::o;22036:419::-;22202:4;22240:2;22229:9;22225:18;22217:26;;22289:9;22283:4;22279:20;22275:1;22264:9;22260:17;22253:47;22317:131;22443:4;22317:131;:::i;:::-;22309:139;;22036:419;;;:::o;22461:226::-;22601:34;22597:1;22589:6;22585:14;22578:58;22670:9;22665:2;22657:6;22653:15;22646:34;22461:226;:::o;22693:366::-;22835:3;22856:67;22920:2;22915:3;22856:67;:::i;:::-;22849:74;;22932:93;23021:3;22932:93;:::i;:::-;23050:2;23045:3;23041:12;23034:19;;22693:366;;;:::o;23065:419::-;23231:4;23269:2;23258:9;23254:18;23246:26;;23318:9;23312:4;23308:20;23304:1;23293:9;23289:17;23282:47;23346:131;23472:4;23346:131;:::i;:::-;23338:139;;23065:419;;;:::o;23490:194::-;23530:4;23550:20;23568:1;23550:20;:::i;:::-;23545:25;;23584:20;23602:1;23584:20;:::i;:::-;23579:25;;23628:1;23625;23621:9;23613:17;;23652:1;23646:4;23643:11;23640:37;;;23657:18;;:::i;:::-;23640:37;23490:194;;;;:::o;23690:225::-;23830:34;23826:1;23818:6;23814:14;23807:58;23899:8;23894:2;23886:6;23882:15;23875:33;23690:225;:::o;23921:366::-;24063:3;24084:67;24148:2;24143:3;24084:67;:::i;:::-;24077:74;;24160:93;24249:3;24160:93;:::i;:::-;24278:2;24273:3;24269:12;24262:19;;23921:366;;;:::o;24293:419::-;24459:4;24497:2;24486:9;24482:18;24474:26;;24546:9;24540:4;24536:20;24532:1;24521:9;24517:17;24510:47;24574:131;24700:4;24574:131;:::i;:::-;24566:139;;24293:419;;;:::o;24718:177::-;24858:29;24854:1;24846:6;24842:14;24835:53;24718:177;:::o;24901:366::-;25043:3;25064:67;25128:2;25123:3;25064:67;:::i;:::-;25057:74;;25140:93;25229:3;25140:93;:::i;:::-;25258:2;25253:3;25249:12;25242:19;;24901:366;;;:::o;25273:419::-;25439:4;25477:2;25466:9;25462:18;25454:26;;25526:9;25520:4;25516:20;25512:1;25501:9;25497:17;25490:47;25554:131;25680:4;25554:131;:::i;:::-;25546:139;;25273:419;;;:::o;2196:26161:86:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;:28;;;3901:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2196:26161:86;;;;;1859:49:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4047:998;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1273:108:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14266:610:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20017:178:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5101:98:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12400:701:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8352:147:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20049:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2643:70:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11263:812:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7905:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1457:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2866:161:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1103:106:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16563:323:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26992:1363:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2483:173:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20941:193:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8892:285;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2464:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1251:259:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2658:30:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3099:321:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5258:99:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15641:198;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13434:1519:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2312:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16224:274:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1647:590:95;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18612:171:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18192:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13180:397:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15909:236:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8461:268:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21903:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5021:633:70;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;22312:382:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;861:235:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2343:94:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15388:193:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1413:121:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2572:33:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20491:181:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9919:2102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15696:2243;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14944:164:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20541:201:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8121:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:103:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9291:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6302:270:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9988:177:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2991:95;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9528:208;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1356:95:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2096:54:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10490:773:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19039:158:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15146:172:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11659:484:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19572:178:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20287:173:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23049:524:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12486:496:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:21:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19877:98:89;19929:7;19963:4;19948:20;;19877:98;:::o;1859:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4047:998::-;4149:4;4165:23;4214:30;;;4191:20;;;:53;4165:79;;4255:23;4374:32;;;4325:46;;;4281:41;;;:90;:125;4255:151;;4463:19;4563:16;4544;4515:26;4485:27;:56;:75;:94;4463:116;;4653:19;4734:16;4705:26;4675:27;:56;:75;4653:97;;4867:12;4852:27;;;:11;:27;;;;:58;;;;4898:12;4883:27;;;:11;:27;;;;4852:58;:93;;;;4929:16;4914:31;;;:11;:31;;;;4852:93;:146;;;;4964:34;4949:49;;;:11;:49;;;;4852:146;:186;;;;5002:36;5026:11;5002:23;:36::i;:::-;4852:186;4845:193;;;;;;4047:998;;;:::o;1273:108:92:-;1335:7;1361:13;;1354:20;;1273:108;:::o;14266:610:85:-;14552:7;14590:279;14680:10;14717:7;14750:6;;14782;14809:1;14831;14853;14590:59;:279::i;:::-;14571:298;;14266:610;;;;;;;;;;:::o;20017:178:86:-;20104:32;:30;:32::i;:::-;20146:42;20169:18;20146:22;:42::i;:::-;20017:178;:::o;5101:98:89:-;5155:13;5187:5;5180:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5101:98;:::o;12400:701:86:-;12583:38;12657:4;;:11;;12637:9;;:16;;:31;;:72;;;;12692:10;;:17;;12672:9;;:16;;:37;;12637:72;12633:143;;;12732:33;;;;;;;;;;;;;;12633:143;12824:9;;:16;;12810:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12786:55;;12857:9;12852:243;12876:9;;:16;;12872:1;:20;12852:243;;;12940:144;12983:9;;12993:1;12983:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;13019:4;;13024:1;13019:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;13056:10;;13067:1;13056:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;12940:14;:144::i;:::-;12913:21;12935:1;12913:24;;;;;;;;:::i;:::-;;;;;;;:171;;;;;12894:3;;;;:::i;:::-;;;12852:243;;;;12400:701;;;;;;;;:::o;8352:147:89:-;8436:7;8462:9;:21;8472:10;8462:21;;;;;;;;;;;:30;;;;;;;;;;;;8455:37;;8352:147;;;:::o;20049:162::-;20149:6;20174:30;;;20167:37;;20049:162;;;;;;:::o;2643:70:86:-;;;;;;;;;;;;;;;;;:::o;11263:812:89:-;11423:7;11442:18;11463:57;11476:7;11485:6;11493:9;11504:15;11463:12;:57::i;:::-;11442:78;;11531:26;11560:17;11566:10;11560:5;:17::i;:::-;11531:46;;11611:23;11595:39;;;;;;;;:::i;:::-;;:12;:39;;;;;;;;:::i;:::-;;;:79;;;;11654:20;11638:36;;;;;;;;:::i;:::-;;:12;:36;;;;;;;;:::i;:::-;;;11595:79;11587:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;11755:4;11722:9;:21;11732:10;11722:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;11775:28;11792:10;11775:28;;;;;;:::i;:::-;;;;;;;;11814:71;11829:10;11841:7;11850:6;11858:9;11869:15;11814:14;:71::i;:::-;11895:65;11904:10;11916:7;11925:6;11933:9;11944:15;11895:8;:65::i;:::-;11970:70;11984:10;11996:7;12005:6;12013:9;12024:15;11970:13;:70::i;:::-;12058:10;12051:17;;;;11263:812;;;;;;:::o;7905:148::-;7989:7;8015:9;:21;8025:10;8015:21;;;;;;;;;;;:31;;;;;;;;;;;;8008:38;;;;7905:148;;;:::o;1457:139::-;1508:88;1457:139;:::o;2866:161:90:-;2948:7;2974:25;:37;3000:10;2974:37;;;;;;;;;;;:46;3012:7;2974:46;;;;;;;;;;;;;;;;;;;;;;;;;2967:53;;2866:161;;;;:::o;1103:106:92:-;1164:7;1190:12;;1183:19;;1103:106;:::o;16563:323:89:-;16685:7;16704:13;16720:101;16734:77;1398:53;16789:10;16801:7;16761:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16751:59;;;;;;16734:16;:77::i;:::-;16813:1;16816;16819;16720:13;:101::i;:::-;16704:117;;16838:41;16848:10;16860:5;16867:7;16838:41;;;;;;;;;;;;:9;:41::i;:::-;16831:48;;;16563:323;;;;;;;:::o;26992:1363:86:-;27057:27;27096:30;27129:9;:21;27139:10;27129:21;;;;;;;;;;;27096:54;;27165:9;:18;;;;;;;;;;;;27161:78;;;27206:22;27199:29;;;;;27161:78;27253:9;:18;;;;;;;;;;;;27249:78;;;27294:22;27287:29;;;;;27249:78;27337:16;27356:28;27373:10;27356:16;:28::i;:::-;27337:47;;27411:1;27399:8;:13;27395:83;;27428:39;;;;;;;;;;:::i;:::-;;;;;;;;27395:83;27488:24;27515:7;:5;:7::i;:::-;27488:34;;;;27549:16;27537:8;:28;;:97;;;;27622:12;27569:39;:49;27609:8;27569:49;;;;;;;;;;;;:65;;27537:97;27533:156;;;27657:21;27650:28;;;;;;;27533:156;27763:28;27780:10;27763:16;:28::i;:::-;27759:187;;;27814:23;27807:30;;;;;;;27759:187;27858:32;27879:10;27858:20;:32::i;:::-;27854:92;;;27913:22;27906:29;;;;;;;27854:92;27956:16;27975:28;27992:10;27975:16;:28::i;:::-;27956:47;;28030:16;28018:8;:28;28014:86;;28069:20;28062:27;;;;;;;;28014:86;28167:26;28182:10;28167:14;:26::i;:::-;:65;;;;;28197:35;28221:10;28197:23;:35::i;:::-;28167:65;28163:186;;;28255:22;28248:29;;;;;;;;28163:186;28315:23;28308:30;;;;;;26992:1363;;;;:::o;2483:173:90:-;2576:4;2648:1;2599:25;:37;2625:10;2599:37;;;;;;;;;;;:46;2637:7;2599:46;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;2592:57;;2483:173;;;;:::o;20941:193:86:-;21031:32;:30;:32::i;:::-;21073:54;21102:24;21073:28;:54::i;:::-;20941:193;:::o;8892:285::-;9090:7;9116:54;;;;;;;;;;;;;;2464:61;;;;;;;;;;;;;;;;;:::o;1251:259:94:-;1311:13;1340:5;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1336:168;;1455:38;;;;;;;;;;;;;;;;;;;;;1336:168;1414:9;1407:16;;;1251:259;;:::o;2658:30:85:-;;;:::o;3099:321:90:-;3185:20;3207:16;3225:20;3257:33;3293:14;:26;3308:10;3293:26;;;;;;;;;;;3257:62;;3337:12;:25;;;;;;;;;;;;3364:12;:21;;;;;;;;;;;;3387:12;:25;;;;;;;;;;;;3329:84;;;;;;;;;;;;;;;;;;;;;;3099:321;;;;;:::o;5258:99:89:-;5315:13;5340:10;;;;;;;;;;;;;;;;;;;5258:99;:::o;15641:198::-;15727:7;15746:13;15762:12;:10;:12::i;:::-;15746:28;;15791:41;15801:10;15813:5;15820:7;15791:41;;;;;;;;;;;;:9;:41::i;:::-;15784:48;;;15641:198;;;;:::o;13434:1519:86:-;13513:22;13538:26;:36;13565:8;13538:36;;;;;;;;;;;;;;;:43;13575:5;13538:43;;;;;;;;;;;;13513:68;;13593:24;13619:23;13644:24;13672:99;13716:8;13746:14;13672:23;:99::i;:::-;13592:179;;;;;;14046:22;13798:270;;;;;;;;:::i;:::-;;:244;13821:207;13865:7;13902:6;13941:9;13999;;;;;;;;;;;;13989:20;;;;;;13821:12;:207::i;:::-;13798:5;:244::i;:::-;:270;;;;;;;;:::i;:::-;;;13781:369;;14100:39;;;;;;;;;;;;;;13781:369;14160:10;14179:8;14160:28;;14198:20;14221:463;14265:4;14289:384;;;;;;;;14341:8;14289:384;;;;;;14374:1;14289:384;;;;;;;;;;;;;;;;;;;;14430:19;14289:384;;;;;;;;:::i;:::-;;;;;;14478:1;14289:384;;;;14506:1;14289:384;;;;14535:1;14289:384;;;;14572:1;14289:384;;;;;;14624:1;14289:384;;;;;;14653:5;14289:384;;;14221:23;:463::i;:::-;14198:486;;14771:1;14699:4;:19;;;14737:4;14752:12;14699:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;14695:170;;14841:12;14795:59;;;;;;;;;;;:::i;:::-;;;;;;;;14695:170;14916:4;:16;;;14933:12;14916:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13503:1450;;;;;;13434:1519;;:::o;2312:44::-;;;:::o;16224:274:89:-;16374:7;16393:13;16409:12;:10;:12::i;:::-;16393:28;;16438:53;16448:10;16460:5;16467:7;16476:6;;16438:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16484:6;16438:9;:53::i;:::-;16431:60;;;16224:274;;;;;;;:::o;1647:590:95:-;1720:7;1795:14;1812:23;:36;;:43;;;;1795:60;;1924:39;1966:23;:36;;2012:1;2003:6;:10;;;;:::i;:::-;1966:48;;;;;;;;:::i;:::-;;;;;;;;;1924:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:9;2028:6;:11;;;:24;;;2024:75;;2075:6;:13;;;2068:20;;;;;;;;2024:75;2159:71;2201:28;2219:9;2201:17;:28::i;:::-;2159:23;:41;;:71;;;;:::i;:::-;2152:78;;;;;;1647:590;;;;:::o;18612:171:86:-;18691:32;:30;:32::i;:::-;18733:43;18755:20;18733:21;:43::i;:::-;18612:171;:::o;18192:154::-;18266:32;:30;:32::i;:::-;18308:31;18324:14;18308:15;:31::i;:::-;18192:154;:::o;13180:397:85:-;13278:25;13306:10;;:17;;13278:45;;13358:7;;:14;;13337:17;:35;13333:95;;13395:22;;;;;;;;;;;;;;13333:95;13443:9;13438:133;13462:17;13458:1;:21;13438:133;;;13500:60;13523:10;;13534:1;13523:13;;;;;;;:::i;:::-;;;;;;;;13547:7;;13555:1;13547:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;13500:8;:60::i;:::-;;13481:3;;;;:::i;:::-;;;13438:133;;;;13268:309;13180:397;;;;:::o;15909:236:89:-;16029:7;16048:13;16064:12;:10;:12::i;:::-;16048:28;;16093:45;16103:10;16115:5;16122:7;16131:6;;16093:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:45::i;:::-;16086:52;;;15909:236;;;;;;:::o;8461:268:86:-;8662:7;8688:34;;;;;;;;;;;;;;21903:150;21977:32;:30;:32::i;:::-;22019:27;22040:5;;22019:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:27::i;:::-;21903:150;;:::o;5021:633:70:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;22312:382:86:-;22391:32;:30;:32::i;:::-;22439:9;22434:254;22458:5;;:12;;22454:1;:16;22434:254;;;22523:1;22495:14;:24;22510:5;;22516:1;22510:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;22495:24;;;;;;;;;;;;;;;;:29;22491:89;;22571:5;;22577:1;22571:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;22533:47;;;;;;;;;;;:::i;:::-;;;;;;;;22491:89;22601:14;:24;22616:5;;22622:1;22616:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;22601:24;;;;;;;;;;;;;;;22594:31;;;22668:5;;22674:1;22668:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;22644:33;;;;;;;;;;;;22472:3;;;;:::i;:::-;;;22434:254;;;;22312:382;;:::o;861:235:94:-;916:6;938:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;934:156;;1048:31;1066:12;1048:17;:31::i;:::-;1041:38;;;;934:156;1000:9;993:16;;;861:235;;:::o;2343:94:95:-;2401:7;2427:3;2420:10;;2343:94;:::o;15388:193:89:-;15511:7;15537:37;15547:7;15556:9;15567:6;15537:9;:37::i;:::-;15530:44;;15388:193;;;;;:::o;1413:121:95:-;1469:7;1495:32;:23;:30;:32::i;:::-;1488:39;;;;1413:121;:::o;2572:33:85:-;;;;:::o;20491:181:86:-;20575:32;:30;:32::i;:::-;20617:48;20643:21;20617:25;:48::i;:::-;20491:181;:::o;9919:2102::-;10079:28;10119:27;10137:8;10119:17;:27::i;:::-;10444:8;10433:19;;:4;:7;;;;;;;;;;:::i;:::-;:19;;;10429:101;;10511:4;:7;;;;;;;;;;:::i;:::-;10475:44;;;;;;;;;;;:::i;:::-;;;;;;;;10429:101;10540:10;10559:8;10540:28;;10761:26;10812:1;10790:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:23;;;;:::i;:::-;10761:52;;10824:89;10860:10;;10824:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10892:18;10824:21;:89::i;:::-;10981:1;10928:54;;:26;:36;10955:8;10928:36;;;;;;;;;;;;;;;:49;10965:4;:11;;;10928:49;;;;;;;;;;;;:54;10924:101;;10991:34;;;;;;;;;;;;;;10924:101;11053:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11039:4;:11;;;:26;11035:70;;;11074:31;;;;;;;;;;;;;;11035:70;11116:14;11133:51;11165:4;11177;11133:51;;;:::i;:::-;:23;:51::i;:::-;11116:68;;11195:4;:21;;;11241:6;11267:4;:9;;;;;;;;:::i;:::-;11302:10;;11346:18;11195:180;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11387:24;11413:23;11438:24;11466:91;11510:8;11540:6;11466:23;:91::i;:::-;11386:171;;;;;;11591:173;11623:7;11652:6;11683:9;11591:173;;;;;;;;;;;;11745:8;11591;:173::i;:::-;11568:196;;11827:6;11775:26;:36;11802:8;11775:36;;;;;;;;;;;;;;;:49;11812:4;:11;;;11775:49;;;;;;;;;;;:58;;;;11983:20;11951:6;11889:8;11849:165;;;11918:4;:11;;;11849:165;;;;;;:::i;:::-;;;;;;;;10109:1912;;;;;;9919:2102;;;;;;:::o;15696:2243::-;15786:27;15804:8;15786:17;:27::i;:::-;15823:10;15842:8;15823:28;;16044:26;16095:1;16073:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:23;;;;:::i;:::-;16044:52;;16107:89;16143:10;;16107:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16175:18;16107:21;:89::i;:::-;16207:13;16223:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16207:28;;16246:20;16269:4;:23;;;16311:8;16340:1;16388:19;16432:1;16456;16481;16514;16562;16587:5;16269:334;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16246:357;;16686:4;:21;;;16732:12;16792:10;;16836:18;16686:179;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16876:22;16901:26;:36;16928:8;16901:36;;;;;;;;;;;;;;;:43;16938:5;16901:43;;;;;;;;;;;;16876:68;;16954:25;17086:1;17068:19;;:14;:19;17064:787;;17104:24;17130:23;17155:24;17183:111;17231:8;17265:14;17183:23;:111::i;:::-;17103:191;;;;;;17329:187;17369:7;17402:6;17437:9;17491;;;;;;;;;;;;17481:20;;;;;;17329:12;:187::i;:::-;17309:207;;17530:27;17560:24;17566:17;17560:5;:24::i;:::-;17530:54;;17620:22;17603:39;;;;;;;;:::i;:::-;;:13;:39;;;;;;;;:::i;:::-;;;17599:129;;17669:44;;;;;;;;;;;;;;17599:129;17782:4;17742:9;:28;17752:17;17742:28;;;;;;;;;;;:37;;;:44;;;;;;;;;;;;;;;;;;17805:35;17822:17;17805:35;;;;;;:::i;:::-;;;;;;;;17089:762;;;;17064:787;17902:4;:16;;;17919:12;17902:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15776:2163;;;;;;15696:2243;;;:::o;14944:164:85:-;15039:7;15065:36;:34;:36::i;:::-;15058:43;;14944:164;:::o;20541:201:89:-;20674:6;20699:36;;;20692:43;;20541:201;;;;;;;:::o;8121:146::-;8205:7;8231:9;:21;8241:10;8231:21;;;;;;;;;;;:29;;;;;;;;;;;;8224:36;;;;8121:146;;;:::o;2803:103:86:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9291:188::-;9440:32;;;;;;;;;;;;;;6302:270:89;6464:7;6519;6528:6;6536:9;6547:15;6508:55;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6498:66;;;;;;6490:75;;6483:82;;6302:270;;;;;;:::o;9988:177:85:-;10042:35;10119:39;:30;:37;:39::i;:::-;10089:69;;;;9988:177;:::o;2991:95::-;;;;;;;;;;;;;;;;;:::o;9528:208::-;9622:13;9647:82;;;;;;;;;;;;;;;;;;;9528:208;:::o;1356:95:89:-;1398:53;1356:95;:::o;2096:54:90:-;;;;;;;;;;;;;;;;;;;;;;:::o;10490:773:85:-;10561:40;10669:14;10686:30;:43;;:50;;;;10669:67;;10805:39;10847:30;:43;;10900:1;10891:6;:10;;;;:::i;:::-;10847:55;;;;;;;;:::i;:::-;;;;;;;;;10805:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10931:9;10916:6;:11;;;:24;;;10912:156;;10991:6;:13;;;10956:48;;;;11018:39;;;;10912:156;11156:100;11218:28;11236:9;11218:17;:28::i;:::-;11156:30;:48;;:100;;;;:::i;:::-;11121:135;;;;10603:660;;10490:773;;;;:::o;19039:158:86:-;19115:32;:30;:32::i;:::-;19157:33;19174:15;19157:16;:33::i;:::-;19039:158;:::o;15146:172:89:-;15238:7;15264:47;15274:7;15283:9;15294:16;:14;:16::i;:::-;15264:9;:47::i;:::-;15257:54;;15146:172;;;;:::o;11659:484:85:-;11730:40;11782:27;11812:39;:50;11852:9;11812:50;;;;;;;;;;;;11782:80;;11899:1;11876:19;:24;:63;;;;11927:12;11904:19;:35;;11876:63;11872:94;;;11948:18;;;;;;;;;;;;;;11872:94;12117:19;:17;:19::i;:::-;12069:32;12091:9;12069:21;:32::i;:::-;12025:6;:20;;;12046:19;12025:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:76;;;;:::i;:::-;12024:112;;;;:::i;:::-;11977:159;;11772:371;11659:484;;;:::o;19572:178:86:-;19658:32;:30;:32::i;:::-;19700:43;19722:20;19700:21;:43::i;:::-;19572:178;:::o;20287:173:89:-;20397:6;20422:31;;;20415:38;;20287:173;;;;;;;:::o;23049:524:86:-;23140:32;:30;:32::i;:::-;23183:24;23210:17;:23;23228:4;23210:23;;;;;;;;;;;;;;;;23183:50;;23267:19;23247:16;:39;23243:93;;23295:41;;;;;;;;;;;;;;23243:93;23372:19;23346:17;:23;23364:4;23346:23;;;;;;;;;;;;;;;:45;;;;23406:160;23446:4;23485:16;23536:19;23406:160;;;;;;;;:::i;:::-;;;;;;;;23130:443;23049:524;;:::o;12486:496:85:-;12605:25;12642:27;12672:39;:50;12712:9;12672:50;;;;;;;;;;;;12642:80;;12759:1;12736:19;:24;:63;;;;12787:12;12764:19;:35;;12736:63;12732:94;;;12808:18;;;;;;;;;;;;;;12732:94;12956:19;:17;:19::i;:::-;12914:26;12930:9;12914:15;:26::i;:::-;12870:6;:20;;;12891:19;12870:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;;:::i;:::-;12869:106;;;;:::i;:::-;12837:138;;12632:350;12486:496;;;:::o;567:21:94:-;;;;;;;;;;;;;:::o;829:155:71:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;10667:2765:90:-;10915:7;11310:2;11293:6;:13;:19;:41;;;;11333:1;11316:6;:13;:18;11293:41;11272:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;11438:13;11454:423;11481:341;1508:88:89;11632:10:90;11668:7;11717:6;;11701:24;;;;;;;:::i;:::-;;;;;;;;11761:6;11751:17;;;;;;11546:244;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11515:293;;;;;;11481:16;:341::i;:::-;11836:1;11851;11866;11454:13;:423::i;:::-;11438:439;;12059:2;12042:6;:13;:19;12038:1317;;12151:13;12919:4;12911:6;12907:17;12586:360;12469:21;12214:750;12205:759;;13030:5;13000:35;;:19;:26;13020:5;13000:26;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;12992:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;13114:19;:26;13134:5;13114:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;13326:4;13318:6;13311:20;13293:52;12038:1317;13372:53;13382:10;13394:5;13401:7;13410:6;;13372:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13418:6;13372:9;:53::i;:::-;13365:60;;;10667:2765;;;;;;;;;;:::o;5439:161:86:-;5523:19;5509:33;;:10;:33;;;5505:88;;5551:42;;;;;;;;;;;;;;5505:88;5439:161::o;3413:538:95:-;3543:19;:17;:19::i;:::-;3521:18;:41;;3500:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;3666:26;3695:17;:15;:17::i;:::-;3666:46;;3770:96;3799:26;3817:7;:5;:7::i;:::-;3799:26;;:17;:26::i;:::-;3827:38;3846:18;3827;:38::i;:::-;3770:23;:28;;:96;;;;;:::i;:::-;;;3882:62;3905:18;3925;3882:62;;;;;;;:::i;:::-;;;;;;;;3490:461;3413:538;:::o;13346:454:89:-;13563:4;13540:28;;:11;:9;:11::i;:::-;:28;;;13536:258;;13589:9;13584:200;13608:7;:14;13604:1;:18;13584:200;;;13673:4;13651:27;;:7;13659:1;13651:10;;;;;;;;:::i;:::-;;;;;;;;:27;;;13647:123;;13702:49;13737:9;13747:1;13737:12;;;;;;;;:::i;:::-;;;;;;;;13727:23;;;;;;13702:15;:24;;:49;;;;:::i;:::-;13647:123;13624:3;;;;:::i;:::-;;;13584:200;;;;13536:258;13346:454;;;;;:::o;12778:498::-;12956:26;:70;;;;;;;;;;;;;;;;;;;13041:9;13036:234;13060:7;:14;13056:1;:18;13036:234;;;13096:12;13110:23;13137:7;13145:1;13137:10;;;;;;;;:::i;:::-;;;;;;;;:15;;13161:6;13168:1;13161:9;;;;;;;;:::i;:::-;;;;;;;;13173;13183:1;13173:12;;;;;;;;:::i;:::-;;;;;;;;13137:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13095:91;;;;13200:59;13225:7;13234:10;13246:12;13200:24;:59::i;:::-;;13081:189;;13076:3;;;;:::i;:::-;;;13036:234;;;;12946:330;12778:498;;;;;:::o;13869:351::-;14097:4;14074:28;;:11;:9;:11::i;:::-;:28;;;14070:144;;14123:23;:15;:21;:23::i;:::-;14118:86;;14166:23;:15;:21;:23::i;:::-;14118:86;14070:144;13869:351;;;;;:::o;4768:165:70:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:69:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;17733:217:89:-;17852:7;17878:65;17888:10;17900:7;17909;17918:6;17926:16;:14;:16::i;:::-;17878:9;:65::i;:::-;17871:72;;17733:217;;;;;;:::o;7571:318:85:-;7640:22;7677:21;7704:25;7718:10;7704:13;:25::i;:::-;7674:55;;;;7740:25;7768:28;7785:10;7768:16;:28::i;:::-;7740:56;;7842:40;7864:17;7842:21;:40::i;:::-;7826:13;:56;7806:76;;7664:225;;7571:318;;;:::o;8156:338::-;8229:26;8268:25;8301;8315:10;8301:13;:25::i;:::-;8267:59;;;;8337:25;8365:28;8382:10;8365:16;:28::i;:::-;8337:56;;8447:40;8469:17;8447:21;:40::i;:::-;8427:17;:60;8403:84;;8257:237;;8156:338;;;:::o;6812:504::-;6940:13;6966:25;6993:21;7016:25;7045;7059:10;7045:13;:25::i;:::-;6965:105;;;;;;7080:14;7117:13;7097:17;:33;:69;;7153:13;7097:69;;;7133:17;7097:69;7080:86;;7177:25;7205:28;7222:10;7205:16;:28::i;:::-;7177:56;;7292:17;7283:6;:26;;;;:::i;:::-;7254:25;7261:17;7254:6;:25::i;:::-;:55;;7243:66;;6955:361;;;;;6812:504;;;:::o;23813:347:86:-;23889:4;23906:25;23933:21;23960:25;23974:10;23960:13;:25::i;:::-;23905:80;;;;;24020:1;23999:17;:22;:44;;;;;24042:1;24025:13;:18;23999:44;23995:159;;;24066:5;24059:12;;;;;;23995:159;24126:17;24109:13;:34;;24102:41;;;;23813:347;;;;:::o;8807:715:85:-;8992:19;:17;:19::i;:::-;8965:24;:46;8961:135;;;9034:51;;;;;;;;;;;;;;8961:135;9106:32;9141:23;:21;:23::i;:::-;9106:58;;9222:109;9258:26;9276:7;:5;:7::i;:::-;9258:26;;:17;:26::i;:::-;9286:44;9305:24;9286:18;:44::i;:::-;9222:30;:35;;:109;;;;;:::i;:::-;;;9347:168;9416:24;9480;9347:168;;;;;;;:::i;:::-;;;;;;;;8888:634;8807:715;:::o;640:96:65:-;693:7;719:10;712:17;;640:96;:::o;7061:433:86:-;7169:24;7195:23;7220:24;7280:1;7266:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7256:26;;7315:1;7301:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7292:25;;7351:1;7339:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7327:26;;7377:4;7364:7;7372:1;7364:10;;;;;;;;:::i;:::-;;;;;;;:17;;;;;;;;;;;7403:1;7391:6;7398:1;7391:9;;;;;;;;:::i;:::-;;;;;;;:13;;;;;7452:26;;;7480:6;7429:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7414:9;7424:1;7414:12;;;;;;;;:::i;:::-;;;;;;;:73;;;;7061:433;;;;;:::o;7636:564::-;7769:14;7804:4;:23;;;7846:4;:7;;;7874:4;:10;;;7904:4;:9;;;7938:4;:14;;;7977:4;:14;;;8014:4;:12;;;8050:4;:13;;;8087:4;:13;;;8130:4;:19;;;8171:4;:11;;;7804:389;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7795:398;;7636:564;;;;:::o;18232:708:89:-;18372:7;18391:29;18423:9;:21;18433:10;18423:21;;;;;;;;;;;18391:53;;18483:20;18462:41;;;;;;;;:::i;:::-;;:17;18468:10;18462:5;:17::i;:::-;:41;;;;;;;;:::i;:::-;;;18454:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;18554:14;18571:46;18581:7;18590:8;:18;;;;;;;;;;;;18571:46;;18610:6;18571:9;:46::i;:::-;18554:63;;18627:56;18638:10;18650:7;18659;18668:6;18676;18627:10;:56::i;:::-;18715:1;18698:6;:13;:18;18694:216;;18746:7;18737:54;;;18755:10;18767:7;18776:6;18784;18737:54;;;;;;;;;:::i;:::-;;;;;;;;18694:216;;;18846:7;18827:72;;;18855:10;18867:7;18876:6;18884;18892;18827:72;;;;;;;;;;:::i;:::-;;;;;;;;18694:216;18927:6;18920:13;;;;18232:708;;;;;;;:::o;15264:187:74:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;9426:606:64:-;9511:7;9530:11;9544:4;:17;;:24;;;;9530:38;;9579:11;9604:12;9619:3;9604:18;;9643:1;9637:3;:7;9633:234;;;9660:11;9680:14;9690:3;9680:9;:14::i;:::-;9674:3;:20;;;;:::i;:::-;9660:34;;9718:37;9732:4;:17;;9751:3;9718:13;:37::i;:::-;:42;;;;;;;;;;;;9712:48;;:3;:48;;;9708:149;;;9787:3;9780:10;;9708:149;;;9841:1;9835:3;:7;;;;:::i;:::-;9829:13;;9708:149;9646:221;9633:234;9877:11;9891:53;9910:4;:17;;9929:3;9934;9939:4;9891:18;:53::i;:::-;9877:67;;9969:1;9962:3;:8;:63;;9977:41;9991:4;:17;;10016:1;10010:3;:7;;;;:::i;:::-;9977:13;:41::i;:::-;:48;;;;;;;;;;;;9962:63;;;9973:1;9962:63;9955:70;;;;;;9426:606;;;;:::o;5677:337:85:-;5754:28;5785:18;;5754:49;;5834:17;5813:18;:38;;;;5866:141;5923:20;5979:17;5866:141;;;;;;;:::i;:::-;;;;;;;;5744:270;5677:337;:::o;2624:171:92:-;2705:44;2720:12;;2734:14;2705:44;;;;;;;:::i;:::-;;;;;;;;2774:14;2759:12;:29;;;;2624:171;:::o;21140:329:86:-;21218:9;21213:250;21237:5;:12;21233:1;:16;21213:250;;;21302:1;21274:14;:24;21289:5;21295:1;21289:8;;;;;;;;:::i;:::-;;;;;;;;21274:24;;;;;;;;;;;;;;;;:29;21270:93;;21354:5;21360:1;21354:8;;;;;;;;:::i;:::-;;;;;;;;21312:51;;;;;;;;;;;:::i;:::-;;;;;;;;21270:93;21404:1;21377:14;:24;21392:5;21398:1;21392:8;;;;;;;;:::i;:::-;;;;;;;;21377:24;;;;;;;;;;;;;;;:28;;;;21443:5;21449:1;21443:8;;;;;;;;:::i;:::-;;;;;;;;21424:28;;;;;;;;;;;;21251:3;;;;:::i;:::-;;;21213:250;;;;21140:329;:::o;3367:268:66:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;14240:187:74:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;1635:221:94:-;1785:7;1811:5;;;;;;;;;;;:18;;;1830:7;1839:9;1811:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1804:45;;1635:221;;;;;:::o;10152:206:64:-;10214:7;10233:11;10247:4;:17;;:24;;;;10233:38;;10295:1;10288:3;:8;:63;;10303:41;10317:4;:17;;10342:1;10336:3;:7;;;;:::i;:::-;10303:13;:41::i;:::-;:48;;;;;;;;;;;;10288:63;;;10299:1;10288:63;10281:70;;;10152:206;;;:::o;6240:356:85:-;6325:32;6368:5;;;;;;;;;;;6325:49;;6401:21;6384:5;;:39;;;;;;;;;;;;;;;;;;6438:151;6498:24;6557:21;6438:151;;;;;;;:::i;:::-;;;;;;;;6315:281;6240:356;:::o;5749:124:86:-;5842:1;5818:14;:20;5833:4;5818:20;;;;;;;;;;;;;;;;:25;5814:52;;5852:14;;;;;;;;;;;;;;5814:52;5749:124;:::o;6414:578::-;6522:7;6539:9;6568:1;6564:5;;6559:427;6575:18;6571:1;:22;6559:427;;;6773:1;6767:4;6763:12;6850:4;6841;6827:12;6823:23;6811:10;6807:40;6801:47;6797:58;6792:63;;6725:144;6890:1;6886;:5;;;6882:94;;;6918:43;;;;;;;;;;;;;;6882:94;6595:3;;;;:::i;:::-;;;6559:427;;;6512:480;;6414:578;;:::o;24482:2206::-;24686:18;24729:176;24765:7;24794:6;24825:9;24881:11;24865:29;;;;;;24729:12;:176::i;:::-;24716:189;;24942:6;:13;24924:7;:14;:31;24916:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;25029:9;:16;25011:7;:14;:34;25003:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;25118:1;25101:7;:14;:18;25093:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;25201:1;25166:9;:21;25176:10;25166:21;;;;;;;;;;;:31;;;;;;;;;;;;:36;;;25158:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;25251:16;25270:10;25251:29;;25290:16;25319:13;:11;:13::i;:::-;25309:7;:5;:7::i;:::-;:23;;;;;;:::i;:::-;25290:42;;25342:16;25383:24;25410:17;:27;25428:8;25410:27;;;;;;;;;;;;;;;;25383:54;;25542:20;25585:1;25565:16;:21;:57;;25608:14;:12;:14::i;:::-;25565:57;;;25589:16;25565:57;25542:80;;25658:12;25647:8;:23;;;;:::i;:::-;25636:34;;25369:312;;25715:194;;;;;;;;25752:8;25715:194;;;;;;25792:8;25715:194;;;;;;25831:8;25715:194;;;;;;25864:5;25715:194;;;;;;25893:5;25715:194;;;;;25691:9;:21;25701:10;25691:21;;;;;;;;;;;:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26401:18;;26386:12;:33;;;;:::i;:::-;26334:39;:49;26374:8;26334:49;;;;;;;;;;;:85;;;;26435:246;26464:10;26488:8;26510:7;26531:6;26564:7;:14;26551:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26593:9;26616:8;26638;26660:11;26435:246;;;;;;;;;;;;;;:::i;:::-;;;;;;;;24706:1982;;;24482:2206;;;;;;;:::o;1449:118:92:-;1516:7;1542:18;;1535:25;;1449:118;:::o;2915:316::-;3076:1;3058:15;:19;3050:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3136:47;3152:13;;3167:15;3136:47;;;;;;;:::i;:::-;;;;;;;;3209:15;3193:13;:31;;;;2915:316;:::o;9748:97:89:-;9805:12;9829:9;;;;;;;;;;;;;;9748:97;:::o;3361:213:92:-;3454:62;3475:18;;3495:20;3454:62;;;;;;;:::i;:::-;;;;;;;;3547:20;3526:18;:41;;;;3361:213;:::o;2836:192:74:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;8063:162:64:-;8145:7;8154;8180:38;8188:4;:17;;8207:3;8212:5;8180:7;:38::i;:::-;8173:45;;;;8063:162;;;;;;:::o;2096:226:76:-;2176:16;2195:5;:10;;;;;;;;;;;;2176:29;;2240:5;2215;:11;;:22;2227:9;2215:22;;;;;;;;;;;;;;;:30;;;;2304:1;2292:9;:13;2279:5;:10;;;:26;;;;;;;;;;;;;;;;;;;;2166:156;2096:226;;:::o;8520:295:63:-;8666:12;8694:7;8690:119;;;8724:10;8717:17;;;;8690:119;8765:33;8773:10;8785:12;8765:7;:33::i;:::-;8520:295;;;;;;:::o;5785:122:76:-;5851:4;5888:5;:12;;;;;;;;;;;;5874:26;;:5;:10;;;;;;;;;;;;:26;;;;5867:33;;5785:122;;;:::o;5167:109::-;5244:1;5229:5;:12;;;:16;;;;;;;;;;;;;;;;;;;;5268:1;5255:5;:10;;;:14;;;;;;;;;;;;;;;;;;;;5167:109;:::o;3695:262:70:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;8336:397:69:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;5112:716:90:-;5332:1;5318:11;:15;5310:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5439:11;5389:25;:37;5415:10;5389:37;;;;;;;;;;;:46;5427:7;5389:46;;;;;;;;;;;;;;;;;;;;;;;;;:61;;;5385:145;;5466:53;;;;;;;;;;:::i;:::-;;;;;;;;5385:145;5540:23;5566:31;5585:11;5566:18;:31::i;:::-;5540:57;;5631:1;5612:8;:15;:20;5608:214;;5648:64;5666:10;5678:7;5687:15;5704:7;5648:17;:64::i;:::-;5608:214;;;5743:68;5764:10;5776:7;5785:15;5802:8;5743:20;:68::i;:::-;5608:214;5300:528;5112:716;;;;;:::o;6530:1642:73:-;6578:7;6606:1;6601;:6;6597:45;;6630:1;6623:8;;;;6597:45;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;;8132:3;:23::i;:::-;8125:30;;;6530:1642;;;;:::o;13826:265:64:-;13936:28;14009:9;14006:1;13999:20;14071:3;14064:4;14061:1;14051:18;14047:28;14032:43;;13826:265;;;;:::o;12470:433::-;12627:7;12646:230;12659:4;12653:3;:10;12646:230;;;12679:11;12693:23;12706:3;12711:4;12693:12;:23::i;:::-;12679:37;;12766:3;12734:35;;:24;12748:4;12754:3;12734:13;:24::i;:::-;:29;;;;;;;;;;;;:35;;;12730:136;;;12796:3;12789:10;;12730:136;;;12850:1;12844:3;:7;;;;:::i;:::-;12838:13;;12730:136;12665:211;12646:230;;;12892:4;12885:11;;12470:433;;;;;;:::o;2059:405:66:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;11288:836:64:-;11379:7;11388;11407:11;11421:4;:11;;;;11407:25;;11453:1;11447:3;:7;11443:675;;;11522:25;11550:28;11564:4;11576:1;11570:3;:7;;;;:::i;:::-;11550:13;:28::i;:::-;11522:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11669:3;11656:16;;:4;:9;;;:16;;;;11648:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;11781:3;11768:16;;:4;:9;;;:16;;;11764:189;;11842:5;11804:28;11818:4;11830:1;11824:3;:7;;;;:::i;:::-;11804:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;11764:189;;;11886:4;11896:41;;;;;;;;11917:3;11896:41;;;;;;11930:5;11896:41;;;;;11886:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11764:189;11974:4;:11;;;11987:5;11966:27;;;;;;;;11443:675;12024:4;12034:41;;;;;;;;12055:3;12034:41;;;;;;12068:5;12034:41;;;;;12024:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12098:1;12101:5;12090:17;;;;;11288:836;;;;;;;:::o;8821:540:63:-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;3963:180:70;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;9088:192:74:-;9145:7;9181:17;9172:26;;:5;:26;;9164:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;9267:5;9252:21;;9088:192;;;:::o;6109:924:90:-;6299:1;6249:25;:37;6275:10;6249:37;;;;;;;;;;;:46;6287:7;6249:46;;;;;;;;;;;;;;;;;;;;;;;;;:51;;;6228:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;6438:11;6389:25;:37;6415:10;6389:37;;;;;;;;;;;:46;6427:7;6389:46;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;6481:43;6475:50;;;;;;;;:::i;:::-;;6464:61;;:7;:61;;;6460:567;;6584:11;6541:14;:26;6556:10;6541:26;;;;;;;;;;;:39;;;:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6460:567;;;6633:39;6627:46;;;;;;;;:::i;:::-;;6616:57;;:7;:57;;;6612:415;;6728:11;6689:14;:26;6704:10;6689:26;;;;;;;;;;;:35;;;:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6612:415;;;6777:43;6771:50;;;;;;;;:::i;:::-;;6760:61;;:7;:61;;;6756:271;;6880:11;6837:14;:26;6852:10;6837:26;;;;;;;;;;;:39;;;:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6756:271;;;6922:94;;;;;;;;;;:::i;:::-;;;;;;;;6756:271;6612:415;6460:567;6109:924;;;;:::o;8086:1196::-;8281:2;8262:8;:15;:21;8254:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;8344:21;8367:17;8386:21;8411:28;8430:8;8411:18;:28::i;:::-;8343:96;;;;;;8450:23;8476:25;:37;8502:10;8476:37;;;;;;;;;;;:46;8514:7;8476:46;;;;;;;;;;;;;;;;;;;;;;;;;8450:72;;8532:18;8606:15;8553:68;;8590:13;8553:50;;8578:9;8553:34;;8561:13;8553:22;;:34;;;;:::i;:::-;:50;;;;:::i;:::-;:68;;;;:::i;:::-;8532:89;;8654:11;8640:25;;:10;:25;;8632:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;8930:10;8873:25;:37;8899:10;8873:37;;;;;;;;;;;:46;8911:7;8873:46;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;8952:33;8988:14;:26;9003:10;8988:26;;;;;;;;;;;8952:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9040:182;;;;;;;;9095:13;9066;:26;;;:42;;;;:::i;:::-;9040:182;;;;;;9147:9;9122:13;:22;;;:34;;;;:::i;:::-;9040:182;;;;;;9199:13;9170;:26;;;:42;;;;:::i;:::-;9040:182;;;;;9024:198;;9262:13;9233:14;:26;9248:10;9233:26;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8244:1038;;;;;;8086:1196;;;;:::o;8633:983:73:-;8685:7;8704:14;8721:1;8704:18;;8775:1;8769:3;8760:5;:12;;:16;8756:99;;;8806:3;8796:13;;;;;8837:3;8827:13;;;;8756:99;8886:1;8881:2;8872:5;:11;;:15;8868:96;;;8917:2;8907:12;;;;;8947:2;8937:12;;;;8868:96;8995:1;8990:2;8981:5;:11;;:15;8977:96;;;9026:2;9016:12;;;;;9056:2;9046:12;;;;8977:96;9104:1;9099:2;9090:5;:11;;:15;9086:96;;;9135:2;9125:12;;;;;9165:2;9155:12;;;;9086:96;9212:1;9208;9199:5;:10;;:14;9195:93;;;9243:1;9233:11;;;;;9272:1;9262:11;;;;9195:93;9318:1;9314;9305:5;:10;;:14;9301:93;;;9349:1;9339:11;;;;;9378:1;9368:11;;;;9301:93;9424:1;9420;9411:5;:10;;:14;9407:93;;;9455:1;9445:11;;;;;9484:1;9474:11;;;;9407:93;9530:1;9526;9517:5;:10;;:14;9513:64;;;9561:1;9551:11;;;;9513:64;9603:6;9596:13;;;8633:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;805:153::-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;2536:245:66:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;9614:395:90:-;9702:20;9724:16;9742:20;9842:4;9832:8;9828:19;9822:26;9817:3;9813:36;9797:52;;9921:4;9911:8;9907:19;9901:26;9878:21;9874:54;9862:66;;9986:4;9976:8;9972:19;9966:26;9961:3;9957:36;9941:52;;9614:395;;;;;:::o;7:169:111:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:181::-;322:33;318:1;310:6;306:14;299:57;182:181;:::o;369:366::-;511:3;532:67;596:2;591:3;532:67;:::i;:::-;525:74;;608:93;697:3;608:93;:::i;:::-;726:2;721:3;717:12;710:19;;369:366;;;:::o;741:419::-;907:4;945:2;934:9;930:18;922:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1022:131;1148:4;1022:131;:::i;:::-;1014:139;;741:419;;;:::o;1166:75::-;1199:6;1232:2;1226:9;1216:19;;1166:75;:::o;1247:117::-;1356:1;1353;1346:12;1370:117;1479:1;1476;1469:12;1493:77;1530:7;1559:5;1548:16;;1493:77;;;:::o;1576:122::-;1649:24;1667:5;1649:24;:::i;:::-;1642:5;1639:35;1629:63;;1688:1;1685;1678:12;1629:63;1576:122;:::o;1704:139::-;1750:5;1788:6;1775:20;1766:29;;1804:33;1831:5;1804:33;:::i;:::-;1704:139;;;;:::o;1849:329::-;1908:6;1957:2;1945:9;1936:7;1932:23;1928:32;1925:119;;;1963:79;;:::i;:::-;1925:119;2083:1;2108:53;2153:7;2144:6;2133:9;2129:22;2108:53;:::i;:::-;2098:63;;2054:117;1849:329;;;;:::o;2184:126::-;2221:7;2261:42;2254:5;2250:54;2239:65;;2184:126;;;:::o;2316:96::-;2353:7;2382:24;2400:5;2382:24;:::i;:::-;2371:35;;2316:96;;;:::o;2418:118::-;2505:24;2523:5;2505:24;:::i;:::-;2500:3;2493:37;2418:118;;:::o;2542:95::-;2578:7;2618:12;2611:5;2607:24;2596:35;;2542:95;;;:::o;2643:115::-;2728:23;2745:5;2728:23;:::i;:::-;2723:3;2716:36;2643:115;;:::o;2764:90::-;2798:7;2841:5;2834:13;2827:21;2816:32;;2764:90;;;:::o;2860:109::-;2941:21;2956:5;2941:21;:::i;:::-;2936:3;2929:34;2860:109;;:::o;2975:632::-;3164:4;3202:3;3191:9;3187:19;3179:27;;3216:71;3284:1;3273:9;3269:17;3260:6;3216:71;:::i;:::-;3297:70;3363:2;3352:9;3348:18;3339:6;3297:70;:::i;:::-;3377;3443:2;3432:9;3428:18;3419:6;3377:70;:::i;:::-;3457:66;3519:2;3508:9;3504:18;3495:6;3457:66;:::i;:::-;3533:67;3595:3;3584:9;3580:19;3571:6;3533:67;:::i;:::-;2975:632;;;;;;;;:::o;3613:149::-;3649:7;3689:66;3682:5;3678:78;3667:89;;3613:149;;;:::o;3768:120::-;3840:23;3857:5;3840:23;:::i;:::-;3833:5;3830:34;3820:62;;3878:1;3875;3868:12;3820:62;3768:120;:::o;3894:137::-;3939:5;3977:6;3964:20;3955:29;;3993:32;4019:5;3993:32;:::i;:::-;3894:137;;;;:::o;4037:327::-;4095:6;4144:2;4132:9;4123:7;4119:23;4115:32;4112:119;;;4150:79;;:::i;:::-;4112:119;4270:1;4295:52;4339:7;4330:6;4319:9;4315:22;4295:52;:::i;:::-;4285:62;;4241:116;4037:327;;;;:::o;4370:210::-;4457:4;4495:2;4484:9;4480:18;4472:26;;4508:65;4570:1;4559:9;4555:17;4546:6;4508:65;:::i;:::-;4370:210;;;;:::o;4586:118::-;4673:24;4691:5;4673:24;:::i;:::-;4668:3;4661:37;4586:118;;:::o;4710:222::-;4803:4;4841:2;4830:9;4826:18;4818:26;;4854:71;4922:1;4911:9;4907:17;4898:6;4854:71;:::i;:::-;4710:222;;;;:::o;4938:86::-;4973:7;5013:4;5006:5;5002:16;4991:27;;4938:86;;;:::o;5030:118::-;5101:22;5117:5;5101:22;:::i;:::-;5094:5;5091:33;5081:61;;5138:1;5135;5128:12;5081:61;5030:118;:::o;5154:135::-;5198:5;5236:6;5223:20;5214:29;;5252:31;5277:5;5252:31;:::i;:::-;5154:135;;;;:::o;5295:117::-;5404:1;5401;5394:12;5418:117;5527:1;5524;5517:12;5541:117;5650:1;5647;5640:12;5678:553;5736:8;5746:6;5796:3;5789:4;5781:6;5777:17;5773:27;5763:122;;5804:79;;:::i;:::-;5763:122;5917:6;5904:20;5894:30;;5947:18;5939:6;5936:30;5933:117;;;5969:79;;:::i;:::-;5933:117;6083:4;6075:6;6071:17;6059:29;;6137:3;6129:4;6121:6;6117:17;6107:8;6103:32;6100:41;6097:128;;;6144:79;;:::i;:::-;6097:128;5678:553;;;;;:::o;6237:117::-;6346:1;6343;6336:12;6360:102;6401:6;6452:2;6448:7;6443:2;6436:5;6432:14;6428:28;6418:38;;6360:102;;;:::o;6468:180::-;6516:77;6513:1;6506:88;6613:4;6610:1;6603:15;6637:4;6634:1;6627:15;6654:281;6737:27;6759:4;6737:27;:::i;:::-;6729:6;6725:40;6867:6;6855:10;6852:22;6831:18;6819:10;6816:34;6813:62;6810:88;;;6878:18;;:::i;:::-;6810:88;6918:10;6914:2;6907:22;6697:238;6654:281;;:::o;6941:129::-;6975:6;7002:20;;:::i;:::-;6992:30;;7031:33;7059:4;7051:6;7031:33;:::i;:::-;6941:129;;;:::o;7076:307::-;7137:4;7227:18;7219:6;7216:30;7213:56;;;7249:18;;:::i;:::-;7213:56;7287:29;7309:6;7287:29;:::i;:::-;7279:37;;7371:4;7365;7361:15;7353:23;;7076:307;;;:::o;7389:146::-;7486:6;7481:3;7476;7463:30;7527:1;7518:6;7513:3;7509:16;7502:27;7389:146;;;:::o;7541:423::-;7618:5;7643:65;7659:48;7700:6;7659:48;:::i;:::-;7643:65;:::i;:::-;7634:74;;7731:6;7724:5;7717:21;7769:4;7762:5;7758:16;7807:3;7798:6;7793:3;7789:16;7786:25;7783:112;;;7814:79;;:::i;:::-;7783:112;7904:54;7951:6;7946:3;7941;7904:54;:::i;:::-;7624:340;7541:423;;;;;:::o;7983:338::-;8038:5;8087:3;8080:4;8072:6;8068:17;8064:27;8054:122;;8095:79;;:::i;:::-;8054:122;8212:6;8199:20;8237:78;8311:3;8303:6;8296:4;8288:6;8284:17;8237:78;:::i;:::-;8228:87;;8044:277;7983:338;;;;:::o;8327:77::-;8364:7;8393:5;8382:16;;8327:77;;;:::o;8410:122::-;8483:24;8501:5;8483:24;:::i;:::-;8476:5;8473:35;8463:63;;8522:1;8519;8512:12;8463:63;8410:122;:::o;8538:139::-;8584:5;8622:6;8609:20;8600:29;;8638:33;8665:5;8638:33;:::i;:::-;8538:139;;;;:::o;8683:1573::-;8813:6;8821;8829;8837;8845;8853;8861;8869;8918:3;8906:9;8897:7;8893:23;8889:33;8886:120;;;8925:79;;:::i;:::-;8886:120;9045:1;9070:53;9115:7;9106:6;9095:9;9091:22;9070:53;:::i;:::-;9060:63;;9016:117;9172:2;9198:51;9241:7;9232:6;9221:9;9217:22;9198:51;:::i;:::-;9188:61;;9143:116;9326:2;9315:9;9311:18;9298:32;9357:18;9349:6;9346:30;9343:117;;;9379:79;;:::i;:::-;9343:117;9492:65;9549:7;9540:6;9529:9;9525:22;9492:65;:::i;:::-;9474:83;;;;9269:298;9634:2;9623:9;9619:18;9606:32;9665:18;9657:6;9654:30;9651:117;;;9687:79;;:::i;:::-;9651:117;9792:62;9846:7;9837:6;9826:9;9822:22;9792:62;:::i;:::-;9782:72;;9577:287;9903:3;9930:51;9973:7;9964:6;9953:9;9949:22;9930:51;:::i;:::-;9920:61;;9874:117;10030:3;10057:53;10102:7;10093:6;10082:9;10078:22;10057:53;:::i;:::-;10047:63;;10001:119;10159:3;10186:53;10231:7;10222:6;10211:9;10207:22;10186:53;:::i;:::-;10176:63;;10130:119;8683:1573;;;;;;;;;;;:::o;10262:99::-;10314:6;10348:5;10342:12;10332:22;;10262:99;;;:::o;10367:246::-;10448:1;10458:113;10472:6;10469:1;10466:13;10458:113;;;10557:1;10552:3;10548:11;10542:18;10538:1;10533:3;10529:11;10522:39;10494:2;10491:1;10487:10;10482:15;;10458:113;;;10605:1;10596:6;10591:3;10587:16;10580:27;10429:184;10367:246;;;:::o;10619:377::-;10707:3;10735:39;10768:5;10735:39;:::i;:::-;10790:71;10854:6;10849:3;10790:71;:::i;:::-;10783:78;;10870:65;10928:6;10923:3;10916:4;10909:5;10905:16;10870:65;:::i;:::-;10960:29;10982:6;10960:29;:::i;:::-;10955:3;10951:39;10944:46;;10711:285;10619:377;;;;:::o;11002:313::-;11115:4;11153:2;11142:9;11138:18;11130:26;;11202:9;11196:4;11192:20;11188:1;11177:9;11173:17;11166:47;11230:78;11303:4;11294:6;11230:78;:::i;:::-;11222:86;;11002:313;;;;:::o;11338:568::-;11411:8;11421:6;11471:3;11464:4;11456:6;11452:17;11448:27;11438:122;;11479:79;;:::i;:::-;11438:122;11592:6;11579:20;11569:30;;11622:18;11614:6;11611:30;11608:117;;;11644:79;;:::i;:::-;11608:117;11758:4;11750:6;11746:17;11734:29;;11812:3;11804:4;11796:6;11792:17;11782:8;11778:32;11775:41;11772:128;;;11819:79;;:::i;:::-;11772:128;11338:568;;;;;:::o;11958:599::-;12062:8;12072:6;12122:3;12115:4;12107:6;12103:17;12099:27;12089:122;;12130:79;;:::i;:::-;12089:122;12243:6;12230:20;12220:30;;12273:18;12265:6;12262:30;12259:117;;;12295:79;;:::i;:::-;12259:117;12409:4;12401:6;12397:17;12385:29;;12463:3;12455:4;12447:6;12443:17;12433:8;12429:32;12426:41;12423:128;;;12470:79;;:::i;:::-;12423:128;11958:599;;;;;:::o;12578:579::-;12662:8;12672:6;12722:3;12715:4;12707:6;12703:17;12699:27;12689:122;;12730:79;;:::i;:::-;12689:122;12843:6;12830:20;12820:30;;12873:18;12865:6;12862:30;12859:117;;;12895:79;;:::i;:::-;12859:117;13009:4;13001:6;12997:17;12985:29;;13063:3;13055:4;13047:6;13043:17;13033:8;13029:32;13026:41;13023:128;;;13070:79;;:::i;:::-;13023:128;12578:579;;;;;:::o;13163:1393::-;13363:6;13371;13379;13387;13395;13403;13452:2;13440:9;13431:7;13427:23;13423:32;13420:119;;;13458:79;;:::i;:::-;13420:119;13606:1;13595:9;13591:17;13578:31;13636:18;13628:6;13625:30;13622:117;;;13658:79;;:::i;:::-;13622:117;13771:80;13843:7;13834:6;13823:9;13819:22;13771:80;:::i;:::-;13753:98;;;;13549:312;13928:2;13917:9;13913:18;13900:32;13959:18;13951:6;13948:30;13945:117;;;13981:79;;:::i;:::-;13945:117;14094:111;14197:7;14188:6;14177:9;14173:22;14094:111;:::i;:::-;14076:129;;;;13871:344;14282:2;14271:9;14267:18;14254:32;14313:18;14305:6;14302:30;14299:117;;;14335:79;;:::i;:::-;14299:117;14448:91;14531:7;14522:6;14511:9;14507:22;14448:91;:::i;:::-;14430:109;;;;14225:324;13163:1393;;;;;;;;:::o;14562:114::-;14629:6;14663:5;14657:12;14647:22;;14562:114;;;:::o;14682:184::-;14781:11;14815:6;14810:3;14803:19;14855:4;14850:3;14846:14;14831:29;;14682:184;;;;:::o;14872:132::-;14939:4;14962:3;14954:11;;14992:4;14987:3;14983:14;14975:22;;14872:132;;;:::o;15010:108::-;15087:24;15105:5;15087:24;:::i;:::-;15082:3;15075:37;15010:108;;:::o;15124:179::-;15193:10;15214:46;15256:3;15248:6;15214:46;:::i;:::-;15292:4;15287:3;15283:14;15269:28;;15124:179;;;;:::o;15309:113::-;15379:4;15411;15406:3;15402:14;15394:22;;15309:113;;;:::o;15458:732::-;15577:3;15606:54;15654:5;15606:54;:::i;:::-;15676:86;15755:6;15750:3;15676:86;:::i;:::-;15669:93;;15786:56;15836:5;15786:56;:::i;:::-;15865:7;15896:1;15881:284;15906:6;15903:1;15900:13;15881:284;;;15982:6;15976:13;16009:63;16068:3;16053:13;16009:63;:::i;:::-;16002:70;;16095:60;16148:6;16095:60;:::i;:::-;16085:70;;15941:224;15928:1;15925;15921:9;15916:14;;15881:284;;;15885:14;16181:3;16174:10;;15582:608;;;15458:732;;;;:::o;16196:373::-;16339:4;16377:2;16366:9;16362:18;16354:26;;16426:9;16420:4;16416:20;16412:1;16401:9;16397:17;16390:47;16454:108;16557:4;16548:6;16454:108;:::i;:::-;16446:116;;16196:373;;;;:::o;16575:222::-;16668:4;16706:2;16695:9;16691:18;16683:26;;16719:71;16787:1;16776:9;16772:17;16763:6;16719:71;:::i;:::-;16575:222;;;;:::o;16803:122::-;16876:24;16894:5;16876:24;:::i;:::-;16869:5;16866:35;16856:63;;16915:1;16912;16905:12;16856:63;16803:122;:::o;16931:139::-;16977:5;17015:6;17002:20;16993:29;;17031:33;17058:5;17031:33;:::i;:::-;16931:139;;;;:::o;17076:943::-;17171:6;17179;17187;17195;17244:3;17232:9;17223:7;17219:23;17215:33;17212:120;;;17251:79;;:::i;:::-;17212:120;17371:1;17396:53;17441:7;17432:6;17421:9;17417:22;17396:53;:::i;:::-;17386:63;;17342:117;17498:2;17524:53;17569:7;17560:6;17549:9;17545:22;17524:53;:::i;:::-;17514:63;;17469:118;17626:2;17652:53;17697:7;17688:6;17677:9;17673:22;17652:53;:::i;:::-;17642:63;;17597:118;17782:2;17771:9;17767:18;17754:32;17813:18;17805:6;17802:30;17799:117;;;17835:79;;:::i;:::-;17799:117;17940:62;17994:7;17985:6;17974:9;17970:22;17940:62;:::i;:::-;17930:72;;17725:287;17076:943;;;;;;;:::o;18025:115::-;18110:23;18127:5;18110:23;:::i;:::-;18105:3;18098:36;18025:115;;:::o;18146:218::-;18237:4;18275:2;18264:9;18260:18;18252:26;;18288:69;18354:1;18343:9;18339:17;18330:6;18288:69;:::i;:::-;18146:218;;;;:::o;18370:329::-;18429:6;18478:2;18466:9;18457:7;18453:23;18449:32;18446:119;;;18484:79;;:::i;:::-;18446:119;18604:1;18629:53;18674:7;18665:6;18654:9;18650:22;18629:53;:::i;:::-;18619:63;;18575:117;18370:329;;;;:::o;18705:311::-;18782:4;18872:18;18864:6;18861:30;18858:56;;;18894:18;;:::i;:::-;18858:56;18944:4;18936:6;18932:17;18924:25;;19004:4;18998;18994:15;18986:23;;18705:311;;;:::o;19039:710::-;19135:5;19160:81;19176:64;19233:6;19176:64;:::i;:::-;19160:81;:::i;:::-;19151:90;;19261:5;19290:6;19283:5;19276:21;19324:4;19317:5;19313:16;19306:23;;19377:4;19369:6;19365:17;19357:6;19353:30;19406:3;19398:6;19395:15;19392:122;;;19425:79;;:::i;:::-;19392:122;19540:6;19523:220;19557:6;19552:3;19549:15;19523:220;;;19632:3;19661:37;19694:3;19682:10;19661:37;:::i;:::-;19656:3;19649:50;19728:4;19723:3;19719:14;19712:21;;19599:144;19583:4;19578:3;19574:14;19567:21;;19523:220;;;19527:21;19141:608;;19039:710;;;;;:::o;19772:370::-;19843:5;19892:3;19885:4;19877:6;19873:17;19869:27;19859:122;;19900:79;;:::i;:::-;19859:122;20017:6;20004:20;20042:94;20132:3;20124:6;20117:4;20109:6;20105:17;20042:94;:::i;:::-;20033:103;;19849:293;19772:370;;;;:::o;20148:311::-;20225:4;20315:18;20307:6;20304:30;20301:56;;;20337:18;;:::i;:::-;20301:56;20387:4;20379:6;20375:17;20367:25;;20447:4;20441;20437:15;20429:23;;20148:311;;;:::o;20482:710::-;20578:5;20603:81;20619:64;20676:6;20619:64;:::i;:::-;20603:81;:::i;:::-;20594:90;;20704:5;20733:6;20726:5;20719:21;20767:4;20760:5;20756:16;20749:23;;20820:4;20812:6;20808:17;20800:6;20796:30;20849:3;20841:6;20838:15;20835:122;;;20868:79;;:::i;:::-;20835:122;20983:6;20966:220;21000:6;20995:3;20992:15;20966:220;;;21075:3;21104:37;21137:3;21125:10;21104:37;:::i;:::-;21099:3;21092:50;21171:4;21166:3;21162:14;21155:21;;21042:144;21026:4;21021:3;21017:14;21010:21;;20966:220;;;20970:21;20584:608;;20482:710;;;;;:::o;21215:370::-;21286:5;21335:3;21328:4;21320:6;21316:17;21312:27;21302:122;;21343:79;;:::i;:::-;21302:122;21460:6;21447:20;21485:94;21575:3;21567:6;21560:4;21552:6;21548:17;21485:94;:::i;:::-;21476:103;;21292:293;21215:370;;;;:::o;21591:320::-;21677:4;21767:18;21759:6;21756:30;21753:56;;;21789:18;;:::i;:::-;21753:56;21839:4;21831:6;21827:17;21819:25;;21899:4;21893;21889:15;21881:23;;21591:320;;;:::o;21932:942::-;22037:5;22062:90;22078:73;22144:6;22078:73;:::i;:::-;22062:90;:::i;:::-;22053:99;;22172:5;22201:6;22194:5;22187:21;22235:4;22228:5;22224:16;22217:23;;22288:4;22280:6;22276:17;22268:6;22264:30;22317:3;22309:6;22306:15;22303:122;;;22336:79;;:::i;:::-;22303:122;22451:6;22434:434;22468:6;22463:3;22460:15;22434:434;;;22557:3;22544:17;22593:18;22580:11;22577:35;22574:122;;;22615:79;;:::i;:::-;22574:122;22739:11;22731:6;22727:24;22777:46;22819:3;22807:10;22777:46;:::i;:::-;22772:3;22765:59;22853:4;22848:3;22844:14;22837:21;;22510:358;;22494:4;22489:3;22485:14;22478:21;;22434:434;;;22438:21;22043:831;;21932:942;;;;;:::o;22895:388::-;22975:5;23024:3;23017:4;23009:6;23005:17;23001:27;22991:122;;23032:79;;:::i;:::-;22991:122;23149:6;23136:20;23174:103;23273:3;23265:6;23258:4;23250:6;23246:17;23174:103;:::i;:::-;23165:112;;22981:302;22895:388;;;;:::o;23289:1413::-;23459:6;23467;23475;23483;23532:3;23520:9;23511:7;23507:23;23503:33;23500:120;;;23539:79;;:::i;:::-;23500:120;23687:1;23676:9;23672:17;23659:31;23717:18;23709:6;23706:30;23703:117;;;23739:79;;:::i;:::-;23703:117;23844:78;23914:7;23905:6;23894:9;23890:22;23844:78;:::i;:::-;23834:88;;23630:302;23999:2;23988:9;23984:18;23971:32;24030:18;24022:6;24019:30;24016:117;;;24052:79;;:::i;:::-;24016:117;24157:78;24227:7;24218:6;24207:9;24203:22;24157:78;:::i;:::-;24147:88;;23942:303;24312:2;24301:9;24297:18;24284:32;24343:18;24335:6;24332:30;24329:117;;;24365:79;;:::i;:::-;24329:117;24470:87;24549:7;24540:6;24529:9;24525:22;24470:87;:::i;:::-;24460:97;;24255:312;24606:2;24632:53;24677:7;24668:6;24657:9;24653:22;24632:53;:::i;:::-;24622:63;;24577:118;23289:1413;;;;;;;:::o;24708:118::-;24795:24;24813:5;24795:24;:::i;:::-;24790:3;24783:37;24708:118;;:::o;24832:222::-;24925:4;24963:2;24952:9;24948:18;24940:26;;24976:71;25044:1;25033:9;25029:17;25020:6;24976:71;:::i;:::-;24832:222;;;;:::o;25060:474::-;25128:6;25136;25185:2;25173:9;25164:7;25160:23;25156:32;25153:119;;;25191:79;;:::i;:::-;25153:119;25311:1;25336:53;25381:7;25372:6;25361:9;25357:22;25336:53;:::i;:::-;25326:63;;25282:117;25438:2;25464:53;25509:7;25500:6;25489:9;25485:22;25464:53;:::i;:::-;25454:63;;25409:118;25060:474;;;;;:::o;25540:118::-;25577:7;25617:34;25610:5;25606:46;25595:57;;25540:118;;;:::o;25664:::-;25751:24;25769:5;25751:24;:::i;:::-;25746:3;25739:37;25664:118;;:::o;25788:222::-;25881:4;25919:2;25908:9;25904:18;25896:26;;25932:71;26000:1;25989:9;25985:17;25976:6;25932:71;:::i;:::-;25788:222;;;;:::o;26016:903::-;26107:6;26115;26123;26131;26139;26188:3;26176:9;26167:7;26163:23;26159:33;26156:120;;;26195:79;;:::i;:::-;26156:120;26315:1;26340:53;26385:7;26376:6;26365:9;26361:22;26340:53;:::i;:::-;26330:63;;26286:117;26442:2;26468:51;26511:7;26502:6;26491:9;26487:22;26468:51;:::i;:::-;26458:61;;26413:116;26568:2;26594:51;26637:7;26628:6;26617:9;26613:22;26594:51;:::i;:::-;26584:61;;26539:116;26694:2;26720:53;26765:7;26756:6;26745:9;26741:22;26720:53;:::i;:::-;26710:63;;26665:118;26822:3;26849:53;26894:7;26885:6;26874:9;26870:22;26849:53;:::i;:::-;26839:63;;26793:119;26016:903;;;;;;;;:::o;26925:180::-;26973:77;26970:1;26963:88;27070:4;27067:1;27060:15;27094:4;27091:1;27084:15;27111:124;27203:1;27196:5;27193:12;27183:46;;27209:18;;:::i;:::-;27183:46;27111:124;:::o;27241:149::-;27297:7;27326:5;27315:16;;27332:52;27378:5;27332:52;:::i;:::-;27241:149;;;:::o;27396:::-;27463:9;27496:43;27533:5;27496:43;:::i;:::-;27483:56;;27396:149;;;:::o;27551:165::-;27655:54;27703:5;27655:54;:::i;:::-;27650:3;27643:67;27551:165;;:::o;27722:256::-;27832:4;27870:2;27859:9;27855:18;27847:26;;27883:88;27968:1;27957:9;27953:17;27944:6;27883:88;:::i;:::-;27722:256;;;;:::o;27984:60::-;28012:3;28033:5;28026:12;;27984:60;;;:::o;28050:142::-;28100:9;28133:53;28151:34;28160:24;28178:5;28160:24;:::i;:::-;28151:34;:::i;:::-;28133:53;:::i;:::-;28120:66;;28050:142;;;:::o;28198:126::-;28248:9;28281:37;28312:5;28281:37;:::i;:::-;28268:50;;28198:126;;;:::o;28330:142::-;28396:9;28429:37;28460:5;28429:37;:::i;:::-;28416:50;;28330:142;;;:::o;28478:163::-;28581:53;28628:5;28581:53;:::i;:::-;28576:3;28569:66;28478:163;;:::o;28647:254::-;28756:4;28794:2;28783:9;28779:18;28771:26;;28807:87;28891:1;28880:9;28876:17;28867:6;28807:87;:::i;:::-;28647:254;;;;:::o;28907:442::-;29056:4;29094:2;29083:9;29079:18;29071:26;;29107:71;29175:1;29164:9;29160:17;29151:6;29107:71;:::i;:::-;29188:72;29256:2;29245:9;29241:18;29232:6;29188:72;:::i;:::-;29270;29338:2;29327:9;29323:18;29314:6;29270:72;:::i;:::-;28907:442;;;;;;:::o;29355:470::-;29421:6;29429;29478:2;29466:9;29457:7;29453:23;29449:32;29446:119;;;29484:79;;:::i;:::-;29446:119;29604:1;29629:53;29674:7;29665:6;29654:9;29650:22;29629:53;:::i;:::-;29619:63;;29575:117;29731:2;29757:51;29800:7;29791:6;29780:9;29776:22;29757:51;:::i;:::-;29747:61;;29702:116;29355:470;;;;;:::o;29831:474::-;29899:6;29907;29956:2;29944:9;29935:7;29931:23;29927:32;29924:119;;;29962:79;;:::i;:::-;29924:119;30082:1;30107:53;30152:7;30143:6;30132:9;30128:22;30107:53;:::i;:::-;30097:63;;30053:117;30209:2;30235:53;30280:7;30271:6;30260:9;30256:22;30235:53;:::i;:::-;30225:63;;30180:118;29831:474;;;;;:::o;30311:1139::-;30416:6;30424;30432;30440;30448;30497:3;30485:9;30476:7;30472:23;30468:33;30465:120;;;30504:79;;:::i;:::-;30465:120;30624:1;30649:53;30694:7;30685:6;30674:9;30670:22;30649:53;:::i;:::-;30639:63;;30595:117;30751:2;30777:51;30820:7;30811:6;30800:9;30796:22;30777:51;:::i;:::-;30767:61;;30722:116;30905:2;30894:9;30890:18;30877:32;30936:18;30928:6;30925:30;30922:117;;;30958:79;;:::i;:::-;30922:117;31071:65;31128:7;31119:6;31108:9;31104:22;31071:65;:::i;:::-;31053:83;;;;30848:298;31213:2;31202:9;31198:18;31185:32;31244:18;31236:6;31233:30;31230:117;;;31266:79;;:::i;:::-;31230:117;31371:62;31425:7;31416:6;31405:9;31401:22;31371:62;:::i;:::-;31361:72;;31156:287;30311:1139;;;;;;;;:::o;31473:568::-;31546:8;31556:6;31606:3;31599:4;31591:6;31587:17;31583:27;31573:122;;31614:79;;:::i;:::-;31573:122;31727:6;31714:20;31704:30;;31757:18;31749:6;31746:30;31743:117;;;31779:79;;:::i;:::-;31743:117;31893:4;31885:6;31881:17;31869:29;;31947:3;31939:4;31931:6;31927:17;31917:8;31913:32;31910:41;31907:128;;;31954:79;;:::i;:::-;31907:128;31473:568;;;;;:::o;32062:566::-;32133:8;32143:6;32193:3;32186:4;32178:6;32174:17;32170:27;32160:122;;32201:79;;:::i;:::-;32160:122;32314:6;32301:20;32291:30;;32344:18;32336:6;32333:30;32330:117;;;32366:79;;:::i;:::-;32330:117;32480:4;32472:6;32468:17;32456:29;;32534:3;32526:4;32518:6;32514:17;32504:8;32500:32;32497:41;32494:128;;;32541:79;;:::i;:::-;32494:128;32062:566;;;;;:::o;32634:930::-;32754:6;32762;32770;32778;32827:2;32815:9;32806:7;32802:23;32798:32;32795:119;;;32833:79;;:::i;:::-;32795:119;32981:1;32970:9;32966:17;32953:31;33011:18;33003:6;33000:30;32997:117;;;33033:79;;:::i;:::-;32997:117;33146:80;33218:7;33209:6;33198:9;33194:22;33146:80;:::i;:::-;33128:98;;;;32924:312;33303:2;33292:9;33288:18;33275:32;33334:18;33326:6;33323:30;33320:117;;;33356:79;;:::i;:::-;33320:117;33469:78;33539:7;33530:6;33519:9;33515:22;33469:78;:::i;:::-;33451:96;;;;33246:311;32634:930;;;;;;;:::o;33570:815::-;33657:6;33665;33673;33681;33730:2;33718:9;33709:7;33705:23;33701:32;33698:119;;;33736:79;;:::i;:::-;33698:119;33856:1;33881:53;33926:7;33917:6;33906:9;33902:22;33881:53;:::i;:::-;33871:63;;33827:117;33983:2;34009:51;34052:7;34043:6;34032:9;34028:22;34009:51;:::i;:::-;33999:61;;33954:116;34137:2;34126:9;34122:18;34109:32;34168:18;34160:6;34157:30;34154:117;;;34190:79;;:::i;:::-;34154:117;34303:65;34360:7;34351:6;34340:9;34336:22;34303:65;:::i;:::-;34285:83;;;;34080:298;33570:815;;;;;;;:::o;34391:308::-;34453:4;34543:18;34535:6;34532:30;34529:56;;;34565:18;;:::i;:::-;34529:56;34603:29;34625:6;34603:29;:::i;:::-;34595:37;;34687:4;34681;34677:15;34669:23;;34391:308;;;:::o;34705:425::-;34783:5;34808:66;34824:49;34866:6;34824:49;:::i;:::-;34808:66;:::i;:::-;34799:75;;34897:6;34890:5;34883:21;34935:4;34928:5;34924:16;34973:3;34964:6;34959:3;34955:16;34952:25;34949:112;;;34980:79;;:::i;:::-;34949:112;35070:54;35117:6;35112:3;35107;35070:54;:::i;:::-;34789:341;34705:425;;;;;:::o;35150:340::-;35206:5;35255:3;35248:4;35240:6;35236:17;35232:27;35222:122;;35263:79;;:::i;:::-;35222:122;35380:6;35367:20;35405:79;35480:3;35472:6;35465:4;35457:6;35453:17;35405:79;:::i;:::-;35396:88;;35212:278;35150:340;;;;:::o;35496:1593::-;35676:6;35684;35692;35700;35749:3;35737:9;35728:7;35724:23;35720:33;35717:120;;;35756:79;;:::i;:::-;35717:120;35904:1;35893:9;35889:17;35876:31;35934:18;35926:6;35923:30;35920:117;;;35956:79;;:::i;:::-;35920:117;36061:78;36131:7;36122:6;36111:9;36107:22;36061:78;:::i;:::-;36051:88;;35847:302;36216:2;36205:9;36201:18;36188:32;36247:18;36239:6;36236:30;36233:117;;;36269:79;;:::i;:::-;36233:117;36374:78;36444:7;36435:6;36424:9;36420:22;36374:78;:::i;:::-;36364:88;;36159:303;36529:2;36518:9;36514:18;36501:32;36560:18;36552:6;36549:30;36546:117;;;36582:79;;:::i;:::-;36546:117;36687:87;36766:7;36757:6;36746:9;36742:22;36687:87;:::i;:::-;36677:97;;36472:312;36851:2;36840:9;36836:18;36823:32;36882:18;36874:6;36871:30;36868:117;;;36904:79;;:::i;:::-;36868:117;37009:63;37064:7;37055:6;37044:9;37040:22;37009:63;:::i;:::-;36999:73;;36794:288;35496:1593;;;;;;;:::o;37095:559::-;37181:6;37189;37238:2;37226:9;37217:7;37213:23;37209:32;37206:119;;;37244:79;;:::i;:::-;37206:119;37392:1;37381:9;37377:17;37364:31;37422:18;37414:6;37411:30;37408:117;;;37444:79;;:::i;:::-;37408:117;37557:80;37629:7;37620:6;37609:9;37605:22;37557:80;:::i;:::-;37539:98;;;;37335:312;37095:559;;;;;:::o;37660:149::-;37696:7;37736:66;37729:5;37725:78;37714:89;;37660:149;;;:::o;37815:115::-;37900:23;37917:5;37900:23;:::i;:::-;37895:3;37888:36;37815:115;;:::o;37936:1215::-;38285:4;38323:3;38312:9;38308:19;38300:27;;38337:69;38403:1;38392:9;38388:17;38379:6;38337:69;:::i;:::-;38453:9;38447:4;38443:20;38438:2;38427:9;38423:18;38416:48;38481:78;38554:4;38545:6;38481:78;:::i;:::-;38473:86;;38606:9;38600:4;38596:20;38591:2;38580:9;38576:18;38569:48;38634:78;38707:4;38698:6;38634:78;:::i;:::-;38626:86;;38722:72;38790:2;38779:9;38775:18;38766:6;38722:72;:::i;:::-;38804:73;38872:3;38861:9;38857:19;38848:6;38804:73;:::i;:::-;38887;38955:3;38944:9;38940:19;38931:6;38887:73;:::i;:::-;39008:9;39002:4;38998:20;38992:3;38981:9;38977:19;38970:49;39036:108;39139:4;39130:6;39036:108;:::i;:::-;39028:116;;37936:1215;;;;;;;;;;:::o;39157:97::-;39193:7;39233:14;39226:5;39222:26;39211:37;;39157:97;;;:::o;39260:115::-;39345:23;39362:5;39345:23;:::i;:::-;39340:3;39333:36;39260:115;;:::o;39381:218::-;39472:4;39510:2;39499:9;39495:18;39487:26;;39523:69;39589:1;39578:9;39574:17;39565:6;39523:69;:::i;:::-;39381:218;;;;:::o;39605:797::-;39691:6;39699;39707;39756:2;39744:9;39735:7;39731:23;39727:32;39724:119;;;39762:79;;:::i;:::-;39724:119;39882:1;39907:53;39952:7;39943:6;39932:9;39928:22;39907:53;:::i;:::-;39897:63;;39853:117;40009:2;40035:53;40080:7;40071:6;40060:9;40056:22;40035:53;:::i;:::-;40025:63;;39980:118;40165:2;40154:9;40150:18;40137:32;40196:18;40188:6;40185:30;40182:117;;;40218:79;;:::i;:::-;40182:117;40323:62;40377:7;40368:6;40357:9;40353:22;40323:62;:::i;:::-;40313:72;;40108:287;39605:797;;;;;:::o;40408:117::-;40517:1;40514;40507:12;40575:236;40652:5;40693:3;40684:6;40679:3;40675:16;40671:26;40668:113;;;40700:79;;:::i;:::-;40668:113;40799:6;40790:15;;40575:236;;;;:::o;40830:552::-;40887:8;40897:6;40947:3;40940:4;40932:6;40928:17;40924:27;40914:122;;40955:79;;:::i;:::-;40914:122;41068:6;41055:20;41045:30;;41098:18;41090:6;41087:30;41084:117;;;41120:79;;:::i;:::-;41084:117;41234:4;41226:6;41222:17;41210:29;;41288:3;41280:4;41272:6;41268:17;41258:8;41254:32;41251:41;41248:128;;;41295:79;;:::i;:::-;41248:128;40830:552;;;;;:::o;41388:1039::-;41507:6;41515;41523;41531;41580:2;41568:9;41559:7;41555:23;41551:32;41548:119;;;41586:79;;:::i;:::-;41548:119;41706:1;41731:53;41776:7;41767:6;41756:9;41752:22;41731:53;:::i;:::-;41721:63;;41677:117;41861:2;41850:9;41846:18;41833:32;41892:18;41884:6;41881:30;41878:117;;;41914:79;;:::i;:::-;41878:117;42019:84;42095:7;42086:6;42075:9;42071:22;42019:84;:::i;:::-;42009:94;;41804:309;42180:2;42169:9;42165:18;42152:32;42211:18;42203:6;42200:30;42197:117;;;42233:79;;:::i;:::-;42197:117;42346:64;42402:7;42393:6;42382:9;42378:22;42346:64;:::i;:::-;42328:82;;;;42123:297;41388:1039;;;;;;;:::o;42433:672::-;42512:6;42520;42528;42577:2;42565:9;42556:7;42552:23;42548:32;42545:119;;;42583:79;;:::i;:::-;42545:119;42703:1;42728:53;42773:7;42764:6;42753:9;42749:22;42728:53;:::i;:::-;42718:63;;42674:117;42858:2;42847:9;42843:18;42830:32;42889:18;42881:6;42878:30;42875:117;;;42911:79;;:::i;:::-;42875:117;43024:64;43080:7;43071:6;43060:9;43056:22;43024:64;:::i;:::-;43006:82;;;;42801:297;42433:672;;;;;:::o;43111:1509::-;43265:6;43273;43281;43289;43297;43346:3;43334:9;43325:7;43321:23;43317:33;43314:120;;;43353:79;;:::i;:::-;43314:120;43473:1;43498:53;43543:7;43534:6;43523:9;43519:22;43498:53;:::i;:::-;43488:63;;43444:117;43600:2;43626:53;43671:7;43662:6;43651:9;43647:22;43626:53;:::i;:::-;43616:63;;43571:118;43756:2;43745:9;43741:18;43728:32;43787:18;43779:6;43776:30;43773:117;;;43809:79;;:::i;:::-;43773:117;43914:78;43984:7;43975:6;43964:9;43960:22;43914:78;:::i;:::-;43904:88;;43699:303;44069:2;44058:9;44054:18;44041:32;44100:18;44092:6;44089:30;44086:117;;;44122:79;;:::i;:::-;44086:117;44227:78;44297:7;44288:6;44277:9;44273:22;44227:78;:::i;:::-;44217:88;;44012:303;44382:3;44371:9;44367:19;44354:33;44414:18;44406:6;44403:30;44400:117;;;44436:79;;:::i;:::-;44400:117;44541:62;44595:7;44586:6;44575:9;44571:22;44541:62;:::i;:::-;44531:72;;44325:288;43111:1509;;;;;;;;:::o;44626:817::-;44714:6;44722;44730;44738;44787:2;44775:9;44766:7;44762:23;44758:32;44755:119;;;44793:79;;:::i;:::-;44755:119;44913:1;44938:53;44983:7;44974:6;44963:9;44959:22;44938:53;:::i;:::-;44928:63;;44884:117;45040:2;45066:53;45111:7;45102:6;45091:9;45087:22;45066:53;:::i;:::-;45056:63;;45011:118;45196:2;45185:9;45181:18;45168:32;45227:18;45219:6;45216:30;45213:117;;;45249:79;;:::i;:::-;45213:117;45362:64;45418:7;45409:6;45398:9;45394:22;45362:64;:::i;:::-;45344:82;;;;45139:297;44626:817;;;;;;;:::o;45449:1089::-;45553:6;45561;45569;45577;45585;45634:3;45622:9;45613:7;45609:23;45605:33;45602:120;;;45641:79;;:::i;:::-;45602:120;45761:1;45786:53;45831:7;45822:6;45811:9;45807:22;45786:53;:::i;:::-;45776:63;;45732:117;45888:2;45914:53;45959:7;45950:6;45939:9;45935:22;45914:53;:::i;:::-;45904:63;;45859:118;46016:2;46042:53;46087:7;46078:6;46067:9;46063:22;46042:53;:::i;:::-;46032:63;;45987:118;46144:2;46170:53;46215:7;46206:6;46195:9;46191:22;46170:53;:::i;:::-;46160:63;;46115:118;46300:3;46289:9;46285:19;46272:33;46332:18;46324:6;46321:30;46318:117;;;46354:79;;:::i;:::-;46318:117;46459:62;46513:7;46504:6;46493:9;46489:22;46459:62;:::i;:::-;46449:72;;46243:288;45449:1089;;;;;;;;:::o;46544:144::-;46612:9;46645:37;46676:5;46645:37;:::i;:::-;46632:50;;46544:144;;;:::o;46694:167::-;46799:55;46848:5;46799:55;:::i;:::-;46794:3;46787:68;46694:167;;:::o;46867:258::-;46978:4;47016:2;47005:9;47001:18;46993:26;;47029:89;47115:1;47104:9;47100:17;47091:6;47029:89;:::i;:::-;46867:258;;;;:::o;47131:180::-;47179:77;47176:1;47169:88;47276:4;47273:1;47266:15;47300:4;47297:1;47290:15;47317:320;47361:6;47398:1;47392:4;47388:12;47378:22;;47445:1;47439:4;47435:12;47466:18;47456:81;;47522:4;47514:6;47510:17;47500:27;;47456:81;47584:2;47576:6;47573:14;47553:18;47550:38;47547:84;;47603:18;;:::i;:::-;47547:84;47368:269;47317:320;;;:::o;47643:180::-;47691:77;47688:1;47681:88;47788:4;47785:1;47778:15;47812:4;47809:1;47802:15;47829:117;47938:1;47935;47928:12;47952:117;48061:1;48058;48051:12;48075:117;48184:1;48181;48174:12;48198:399;48295:4;48349:11;48336:25;48451:1;48443:6;48439:14;48428:8;48412:14;48408:29;48404:50;48384:18;48380:75;48370:170;;48459:79;;:::i;:::-;48370:170;48571:18;48561:8;48557:33;48549:41;;48300:297;48198:399;;;;:::o;48603:724::-;48680:4;48686:6;48742:11;48729:25;48842:1;48836:4;48832:12;48821:8;48805:14;48801:29;48797:48;48777:18;48773:73;48763:168;;48850:79;;:::i;:::-;48763:168;48962:18;48952:8;48948:33;48940:41;;49014:4;49001:18;48991:28;;49042:18;49034:6;49031:30;49028:117;;;49064:79;;:::i;:::-;49028:117;49172:2;49166:4;49162:13;49154:21;;49229:4;49221:6;49217:17;49201:14;49197:38;49191:4;49187:49;49184:136;;;49239:79;;:::i;:::-;49184:136;48693:634;48603:724;;;;;:::o;49333:180::-;49381:77;49378:1;49371:88;49478:4;49475:1;49468:15;49502:4;49499:1;49492:15;49519:233;49558:3;49581:24;49599:5;49581:24;:::i;:::-;49572:33;;49627:66;49620:5;49617:77;49614:103;;49697:18;;:::i;:::-;49614:103;49744:1;49737:5;49733:13;49726:20;;49519:233;;;:::o;49758:220::-;49898:34;49894:1;49886:6;49882:14;49875:58;49967:3;49962:2;49954:6;49950:15;49943:28;49758:220;:::o;49984:366::-;50126:3;50147:67;50211:2;50206:3;50147:67;:::i;:::-;50140:74;;50223:93;50312:3;50223:93;:::i;:::-;50341:2;50336:3;50332:12;50325:19;;49984:366;;;:::o;50356:419::-;50522:4;50560:2;50549:9;50545:18;50537:26;;50609:9;50603:4;50599:20;50595:1;50584:9;50580:17;50573:47;50637:131;50763:4;50637:131;:::i;:::-;50629:139;;50356:419;;;:::o;50781:112::-;50864:22;50880:5;50864:22;:::i;:::-;50859:3;50852:35;50781:112;;:::o;50899:434::-;51044:4;51082:2;51071:9;51067:18;51059:26;;51095:71;51163:1;51152:9;51148:17;51139:6;51095:71;:::i;:::-;51176:72;51244:2;51233:9;51229:18;51220:6;51176:72;:::i;:::-;51258:68;51322:2;51311:9;51307:18;51298:6;51258:68;:::i;:::-;50899:434;;;;;;:::o;51339:179::-;51479:31;51475:1;51467:6;51463:14;51456:55;51339:179;:::o;51524:366::-;51666:3;51687:67;51751:2;51746:3;51687:67;:::i;:::-;51680:74;;51763:93;51852:3;51763:93;:::i;:::-;51881:2;51876:3;51872:12;51865:19;;51524:366;;;:::o;51896:419::-;52062:4;52100:2;52089:9;52085:18;52077:26;;52149:9;52143:4;52139:20;52135:1;52124:9;52120:17;52113:47;52177:131;52303:4;52177:131;:::i;:::-;52169:139;;51896:419;;;:::o;52321:434::-;52410:5;52435:66;52451:49;52493:6;52451:49;:::i;:::-;52435:66;:::i;:::-;52426:75;;52524:6;52517:5;52510:21;52562:4;52555:5;52551:16;52600:3;52591:6;52586:3;52582:16;52579:25;52576:112;;;52607:79;;:::i;:::-;52576:112;52697:52;52742:6;52737:3;52732;52697:52;:::i;:::-;52416:339;52321:434;;;;;:::o;52775:355::-;52842:5;52891:3;52884:4;52876:6;52872:17;52868:27;52858:122;;52899:79;;:::i;:::-;52858:122;53009:6;53003:13;53034:90;53120:3;53112:6;53105:4;53097:6;53093:17;53034:90;:::i;:::-;53025:99;;52848:282;52775:355;;;;:::o;53136:524::-;53216:6;53265:2;53253:9;53244:7;53240:23;53236:32;53233:119;;;53271:79;;:::i;:::-;53233:119;53412:1;53401:9;53397:17;53391:24;53442:18;53434:6;53431:30;53428:117;;;53464:79;;:::i;:::-;53428:117;53569:74;53635:7;53626:6;53615:9;53611:22;53569:74;:::i;:::-;53559:84;;53362:291;53136:524;;;;:::o;53666:332::-;53787:4;53825:2;53814:9;53810:18;53802:26;;53838:71;53906:1;53895:9;53891:17;53882:6;53838:71;:::i;:::-;53919:72;53987:2;53976:9;53972:18;53963:6;53919:72;:::i;:::-;53666:332;;;;;:::o;54004:143::-;54061:5;54092:6;54086:13;54077:22;;54108:33;54135:5;54108:33;:::i;:::-;54004:143;;;;:::o;54153:351::-;54223:6;54272:2;54260:9;54251:7;54247:23;54243:32;54240:119;;;54278:79;;:::i;:::-;54240:119;54398:1;54423:64;54479:7;54470:6;54459:9;54455:22;54423:64;:::i;:::-;54413:74;;54369:128;54153:351;;;;:::o;54510:194::-;54550:4;54570:20;54588:1;54570:20;:::i;:::-;54565:25;;54604:20;54622:1;54604:20;:::i;:::-;54599:25;;54648:1;54645;54641:9;54633:17;;54672:1;54666:4;54663:11;54660:37;;;54677:18;;:::i;:::-;54660:37;54510:194;;;;:::o;54710:325::-;54767:6;54816:2;54804:9;54795:7;54791:23;54787:32;54784:119;;;54822:79;;:::i;:::-;54784:119;54942:1;54967:51;55010:7;55001:6;54990:9;54986:22;54967:51;:::i;:::-;54957:61;;54913:115;54710:325;;;;:::o;55041:120::-;55113:23;55130:5;55113:23;:::i;:::-;55106:5;55103:34;55093:62;;55151:1;55148;55141:12;55093:62;55041:120;:::o;55167:141::-;55223:5;55254:6;55248:13;55239:22;;55270:32;55296:5;55270:32;:::i;:::-;55167:141;;;;:::o;55314:349::-;55383:6;55432:2;55420:9;55411:7;55407:23;55403:32;55400:119;;;55438:79;;:::i;:::-;55400:119;55558:1;55583:63;55638:7;55629:6;55618:9;55614:22;55583:63;:::i;:::-;55573:73;;55529:127;55314:349;;;;:::o;55669:117::-;55778:1;55775;55768:12;55792:117;55901:1;55898;55891:12;55915:113;56002:1;55995:5;55992:12;55982:40;;56018:1;56015;56008:12;55982:40;55915:113;:::o;56034:167::-;56094:5;56132:6;56119:20;56110:29;;56148:47;56189:5;56148:47;:::i;:::-;56034:167;;;;:::o;56251:2095::-;56329:5;56373:6;56361:9;56356:3;56352:19;56348:32;56345:119;;;56383:79;;:::i;:::-;56345:119;56482:23;56498:6;56482:23;:::i;:::-;56473:32;;56562:1;56602:49;56647:3;56638:6;56627:9;56623:22;56602:49;:::i;:::-;56595:4;56588:5;56584:16;56577:75;56515:148;56723:2;56764:49;56809:3;56800:6;56789:9;56785:22;56764:49;:::i;:::-;56757:4;56750:5;56746:16;56739:75;56673:152;56912:2;56901:9;56897:18;56884:32;56943:18;56935:6;56932:30;56929:117;;;56965:79;;:::i;:::-;56929:117;57085:58;57139:3;57130:6;57119:9;57115:22;57085:58;:::i;:::-;57078:4;57071:5;57067:16;57060:84;56835:320;57219:2;57260:63;57319:3;57310:6;57299:9;57295:22;57260:63;:::i;:::-;57253:4;57246:5;57242:16;57235:89;57165:170;57399:3;57441:49;57486:3;57477:6;57466:9;57462:22;57441:49;:::i;:::-;57434:4;57427:5;57423:16;57416:75;57345:157;57564:3;57606:49;57651:3;57642:6;57631:9;57627:22;57606:49;:::i;:::-;57599:4;57592:5;57588:16;57581:75;57512:155;57730:3;57772:49;57817:3;57808:6;57797:9;57793:22;57772:49;:::i;:::-;57765:4;57758:5;57754:16;57747:75;57677:156;57896:3;57938:49;57983:3;57974:6;57963:9;57959:22;57938:49;:::i;:::-;57931:4;57924:5;57920:16;57913:75;57843:156;58068:3;58112:49;58157:3;58148:6;58137:9;58133:22;58112:49;:::i;:::-;58103:6;58096:5;58092:18;58085:77;58009:164;58234:3;58278:49;58323:3;58314:6;58303:9;58299:22;58278:49;:::i;:::-;58269:6;58262:5;58258:18;58251:77;58183:156;56251:2095;;;;:::o;58352:223::-;58462:9;58496:72;58553:14;58546:5;58496:72;:::i;:::-;58483:85;;58352:223;;;:::o;58581:168::-;58664:11;58698:6;58693:3;58686:19;58738:4;58733:3;58729:14;58714:29;;58581:168;;;;:::o;58777:314::-;58873:3;58894:70;58957:6;58952:3;58894:70;:::i;:::-;58887:77;;58974:56;59023:6;59018:3;59011:5;58974:56;:::i;:::-;59055:29;59077:6;59055:29;:::i;:::-;59050:3;59046:39;59039:46;;58777:314;;;;;:::o;59097:767::-;59330:4;59368:3;59357:9;59353:19;59345:27;;59382:71;59450:1;59439:9;59435:17;59426:6;59382:71;:::i;:::-;59500:9;59494:4;59490:20;59485:2;59474:9;59470:18;59463:48;59528:86;59609:4;59600:6;59592;59528:86;:::i;:::-;59520:94;;59661:9;59655:4;59651:20;59646:2;59635:9;59631:18;59624:48;59689:86;59770:4;59761:6;59753;59689:86;:::i;:::-;59681:94;;59785:72;59853:2;59842:9;59838:18;59829:6;59785:72;:::i;:::-;59097:767;;;;;;;;;:::o;59870:85::-;59915:7;59944:5;59933:16;;59870:85;;;:::o;59961:158::-;60019:9;60052:61;60070:42;60079:32;60105:5;60079:32;:::i;:::-;60070:42;:::i;:::-;60052:61;:::i;:::-;60039:74;;59961:158;;;:::o;60125:147::-;60220:45;60259:5;60220:45;:::i;:::-;60215:3;60208:58;60125:147;;:::o;60278:114::-;;:::o;60398:362::-;60539:3;60560:65;60623:1;60618:3;60560:65;:::i;:::-;60553:72;;60634:93;60723:3;60634:93;:::i;:::-;60752:1;60747:3;60743:11;60736:18;;60398:362;;;:::o;60766:119::-;60853:1;60846:5;60843:12;60833:46;;60859:18;;:::i;:::-;60833:46;60766:119;:::o;60891:139::-;60942:7;60971:5;60960:16;;60977:47;61018:5;60977:47;:::i;:::-;60891:139;;;:::o;61036:::-;61098:9;61131:38;61163:5;61131:38;:::i;:::-;61118:51;;61036:139;;;:::o;61181:155::-;61280:49;61323:5;61280:49;:::i;:::-;61275:3;61268:62;61181:155;;:::o;61342:134::-;61400:9;61433:37;61464:5;61433:37;:::i;:::-;61420:50;;61342:134;;;:::o;61482:147::-;61577:45;61616:5;61577:45;:::i;:::-;61572:3;61565:58;61482:147;;:::o;61635:1518::-;62104:4;62142:3;62131:9;62127:19;62119:27;;62156:71;62224:1;62213:9;62209:17;62200:6;62156:71;:::i;:::-;62237:80;62313:2;62302:9;62298:18;62289:6;62237:80;:::i;:::-;62364:9;62358:4;62354:20;62349:2;62338:9;62334:18;62327:48;62392:130;62517:4;62392:130;:::i;:::-;62384:138;;62532:84;62612:2;62601:9;62597:18;62588:6;62532:84;:::i;:::-;62626:81;62702:3;62691:9;62687:19;62678:6;62626:81;:::i;:::-;62717;62793:3;62782:9;62778:19;62769:6;62717:81;:::i;:::-;62808;62884:3;62873:9;62869:19;62860:6;62808:81;:::i;:::-;62899:73;62967:3;62956:9;62952:19;62943:6;62899:73;:::i;:::-;62982:81;63058:3;63047:9;63043:19;63034:6;62982:81;:::i;:::-;63073:73;63141:3;63130:9;63126:19;63117:6;63073:73;:::i;:::-;61635:1518;;;;;;;;;;;;:::o;63159:143::-;63216:5;63247:6;63241:13;63232:22;;63263:33;63290:5;63263:33;:::i;:::-;63159:143;;;;:::o;63308:351::-;63378:6;63427:2;63415:9;63406:7;63402:23;63398:32;63395:119;;;63433:79;;:::i;:::-;63395:119;63553:1;63578:64;63634:7;63625:6;63614:9;63610:22;63578:64;:::i;:::-;63568:74;;63524:128;63308:351;;;;:::o;63665:855::-;63942:4;63980:3;63969:9;63965:19;63957:27;;63994:71;64062:1;64051:9;64047:17;64038:6;63994:71;:::i;:::-;64112:9;64106:4;64102:20;64097:2;64086:9;64082:18;64075:48;64140:130;64265:4;64140:130;:::i;:::-;64132:138;;64317:9;64311:4;64307:20;64302:2;64291:9;64287:18;64280:48;64345:86;64426:4;64417:6;64409;64345:86;:::i;:::-;64337:94;;64441:72;64509:2;64498:9;64494:18;64485:6;64441:72;:::i;:::-;63665:855;;;;;;;:::o;64526:114::-;64593:6;64627:5;64621:12;64611:22;;64526:114;;;:::o;64646:184::-;64745:11;64779:6;64774:3;64767:19;64819:4;64814:3;64810:14;64795:29;;64646:184;;;;:::o;64836:132::-;64903:4;64926:3;64918:11;;64956:4;64951:3;64947:14;64939:22;;64836:132;;;:::o;64974:108::-;65051:24;65069:5;65051:24;:::i;:::-;65046:3;65039:37;64974:108;;:::o;65088:179::-;65157:10;65178:46;65220:3;65212:6;65178:46;:::i;:::-;65256:4;65251:3;65247:14;65233:28;;65088:179;;;;:::o;65273:113::-;65343:4;65375;65370:3;65366:14;65358:22;;65273:113;;;:::o;65422:732::-;65541:3;65570:54;65618:5;65570:54;:::i;:::-;65640:86;65719:6;65714:3;65640:86;:::i;:::-;65633:93;;65750:56;65800:5;65750:56;:::i;:::-;65829:7;65860:1;65845:284;65870:6;65867:1;65864:13;65845:284;;;65946:6;65940:13;65973:63;66032:3;66017:13;65973:63;:::i;:::-;65966:70;;66059:60;66112:6;66059:60;:::i;:::-;66049:70;;65905:224;65892:1;65889;65885:9;65880:14;;65845:284;;;65849:14;66145:3;66138:10;;65546:608;;;65422:732;;;;:::o;66160:123::-;66236:6;66270:5;66264:12;66254:22;;66160:123;;;:::o;66289:193::-;66397:11;66431:6;66426:3;66419:19;66471:4;66466:3;66462:14;66447:29;;66289:193;;;;:::o;66488:141::-;66564:4;66587:3;66579:11;;66617:4;66612:3;66608:14;66600:22;;66488:141;;;:::o;66635:98::-;66686:6;66720:5;66714:12;66704:22;;66635:98;;;:::o;66739:158::-;66812:11;66846:6;66841:3;66834:19;66886:4;66881:3;66877:14;66862:29;;66739:158;;;;:::o;66903:353::-;66979:3;67007:38;67039:5;67007:38;:::i;:::-;67061:60;67114:6;67109:3;67061:60;:::i;:::-;67054:67;;67130:65;67188:6;67183:3;67176:4;67169:5;67165:16;67130:65;:::i;:::-;67220:29;67242:6;67220:29;:::i;:::-;67215:3;67211:39;67204:46;;66983:273;66903:353;;;;:::o;67262:192::-;67349:10;67384:64;67444:3;67436:6;67384:64;:::i;:::-;67370:78;;67262:192;;;;:::o;67460:122::-;67539:4;67571;67566:3;67562:14;67554:22;;67460:122;;;:::o;67614:983::-;67751:3;67780:63;67837:5;67780:63;:::i;:::-;67859:95;67947:6;67942:3;67859:95;:::i;:::-;67852:102;;67980:3;68025:4;68017:6;68013:17;68008:3;68004:27;68055:65;68114:5;68055:65;:::i;:::-;68143:7;68174:1;68159:393;68184:6;68181:1;68178:13;68159:393;;;68255:9;68249:4;68245:20;68240:3;68233:33;68306:6;68300:13;68334:82;68411:4;68396:13;68334:82;:::i;:::-;68326:90;;68439:69;68501:6;68439:69;:::i;:::-;68429:79;;68537:4;68532:3;68528:14;68521:21;;68219:333;68206:1;68203;68199:9;68194:14;;68159:393;;;68163:14;68568:4;68561:11;;68588:3;68581:10;;67756:841;;;;;67614:983;;;;:::o;68603:1042::-;68948:4;68986:3;68975:9;68971:19;68963:27;;69036:9;69030:4;69026:20;69022:1;69011:9;69007:17;69000:47;69064:108;69167:4;69158:6;69064:108;:::i;:::-;69056:116;;69219:9;69213:4;69209:20;69204:2;69193:9;69189:18;69182:48;69247:108;69350:4;69341:6;69247:108;:::i;:::-;69239:116;;69402:9;69396:4;69392:20;69387:2;69376:9;69372:18;69365:48;69430:126;69551:4;69542:6;69430:126;:::i;:::-;69422:134;;69566:72;69634:2;69623:9;69619:18;69610:6;69566:72;:::i;:::-;68603:1042;;;;;;;:::o;69651:410::-;69691:7;69714:20;69732:1;69714:20;:::i;:::-;69709:25;;69748:20;69766:1;69748:20;:::i;:::-;69743:25;;69803:1;69800;69796:9;69825:30;69843:11;69825:30;:::i;:::-;69814:41;;70004:1;69995:7;69991:15;69988:1;69985:22;69965:1;69958:9;69938:83;69915:139;;70034:18;;:::i;:::-;69915:139;69699:362;69651:410;;;;:::o;70067:180::-;70115:77;70112:1;70105:88;70212:4;70209:1;70202:15;70236:4;70233:1;70226:15;70253:185;70293:1;70310:20;70328:1;70310:20;:::i;:::-;70305:25;;70344:20;70362:1;70344:20;:::i;:::-;70339:25;;70383:1;70373:35;;70388:18;;:::i;:::-;70373:35;70430:1;70427;70423:9;70418:14;;70253:185;;;;:::o;70444:442::-;70593:4;70631:2;70620:9;70616:18;70608:26;;70644:71;70712:1;70701:9;70697:17;70688:6;70644:71;:::i;:::-;70725:72;70793:2;70782:9;70778:18;70769:6;70725:72;:::i;:::-;70807;70875:2;70864:9;70860:18;70851:6;70807:72;:::i;:::-;70444:442;;;;;;:::o;70892:291::-;71032:34;71028:1;71020:6;71016:14;71009:58;71101:34;71096:2;71088:6;71084:15;71077:59;71170:5;71165:2;71157:6;71153:15;71146:30;70892:291;:::o;71189:366::-;71331:3;71352:67;71416:2;71411:3;71352:67;:::i;:::-;71345:74;;71428:93;71517:3;71428:93;:::i;:::-;71546:2;71541:3;71537:12;71530:19;;71189:366;;;:::o;71561:419::-;71727:4;71765:2;71754:9;71750:18;71742:26;;71814:9;71808:4;71804:20;71800:1;71789:9;71785:17;71778:47;71842:131;71968:4;71842:131;:::i;:::-;71834:139;;71561:419;;;:::o;71986:147::-;72087:11;72124:3;72109:18;;71986:147;;;;:::o;72161:327::-;72275:3;72296:88;72377:6;72372:3;72296:88;:::i;:::-;72289:95;;72394:56;72443:6;72438:3;72431:5;72394:56;:::i;:::-;72475:6;72470:3;72466:16;72459:23;;72161:327;;;;;:::o;72494:291::-;72634:3;72656:103;72755:3;72746:6;72738;72656:103;:::i;:::-;72649:110;;72776:3;72769:10;;72494:291;;;;;:::o;72791:656::-;72992:4;73030:3;73019:9;73015:19;73007:27;;73044:71;73112:1;73101:9;73097:17;73088:6;73044:71;:::i;:::-;73125:72;73193:2;73182:9;73178:18;73169:6;73125:72;:::i;:::-;73207:68;73271:2;73260:9;73256:18;73247:6;73207:68;:::i;:::-;73285:72;73353:2;73342:9;73338:18;73329:6;73285:72;:::i;:::-;73367:73;73435:3;73424:9;73420:19;73411:6;73367:73;:::i;:::-;72791:656;;;;;;;;:::o;73453:246::-;73593:34;73589:1;73581:6;73577:14;73570:58;73662:29;73657:2;73649:6;73645:15;73638:54;73453:246;:::o;73705:366::-;73847:3;73868:67;73932:2;73927:3;73868:67;:::i;:::-;73861:74;;73944:93;74033:3;73944:93;:::i;:::-;74062:2;74057:3;74053:12;74046:19;;73705:366;;;:::o;74077:419::-;74243:4;74281:2;74270:9;74266:18;74258:26;;74330:9;74324:4;74320:20;74316:1;74305:9;74301:17;74294:47;74358:131;74484:4;74358:131;:::i;:::-;74350:139;;74077:419;;;:::o;74502:201::-;74541:3;74564:24;74582:5;74564:24;:::i;:::-;74555:33;;74610:34;74603:5;74600:45;74597:71;;74648:18;;:::i;:::-;74597:71;74695:1;74688:5;74684:13;74677:20;;74502:201;;;:::o;74709:291::-;74849:34;74845:1;74837:6;74833:14;74826:58;74918:34;74913:2;74905:6;74901:15;74894:59;74987:5;74982:2;74974:6;74970:15;74963:30;74709:291;:::o;75006:366::-;75148:3;75169:67;75233:2;75228:3;75169:67;:::i;:::-;75162:74;;75245:93;75334:3;75245:93;:::i;:::-;75363:2;75358:3;75354:12;75347:19;;75006:366;;;:::o;75378:419::-;75544:4;75582:2;75571:9;75567:18;75559:26;;75631:9;75625:4;75621:20;75617:1;75606:9;75602:17;75595:47;75659:131;75785:4;75659:131;:::i;:::-;75651:139;;75378:419;;;:::o;75803:332::-;75924:4;75962:2;75951:9;75947:18;75939:26;;75975:71;76043:1;76032:9;76028:17;76019:6;75975:71;:::i;:::-;76056:72;76124:2;76113:9;76109:18;76100:6;76056:72;:::i;:::-;75803:332;;;;;:::o;76141:386::-;76245:3;76273:38;76305:5;76273:38;:::i;:::-;76327:88;76408:6;76403:3;76327:88;:::i;:::-;76320:95;;76424:65;76482:6;76477:3;76470:4;76463:5;76459:16;76424:65;:::i;:::-;76514:6;76509:3;76505:16;76498:23;;76249:278;76141:386;;;;:::o;76533:271::-;76663:3;76685:93;76774:3;76765:6;76685:93;:::i;:::-;76678:100;;76795:3;76788:10;;76533:271;;;;:::o;76810:191::-;76850:3;76869:20;76887:1;76869:20;:::i;:::-;76864:25;;76903:20;76921:1;76903:20;:::i;:::-;76898:25;;76946:1;76943;76939:9;76932:16;;76967:3;76964:1;76961:10;76958:36;;;76974:18;;:::i;:::-;76958:36;76810:191;;;;:::o;77007:373::-;77093:3;77121:38;77153:5;77121:38;:::i;:::-;77175:70;77238:6;77233:3;77175:70;:::i;:::-;77168:77;;77254:65;77312:6;77307:3;77300:4;77293:5;77289:16;77254:65;:::i;:::-;77344:29;77366:6;77344:29;:::i;:::-;77339:3;77335:39;77328:46;;77097:283;77007:373;;;;:::o;77386:1330::-;77761:4;77799:3;77788:9;77784:19;77776:27;;77813:71;77881:1;77870:9;77866:17;77857:6;77813:71;:::i;:::-;77894:72;77962:2;77951:9;77947:18;77938:6;77894:72;:::i;:::-;78013:9;78007:4;78003:20;77998:2;77987:9;77983:18;77976:48;78041:76;78112:4;78103:6;78041:76;:::i;:::-;78033:84;;78127;78207:2;78196:9;78192:18;78183:6;78127:84;:::i;:::-;78221:73;78289:3;78278:9;78274:19;78265:6;78221:73;:::i;:::-;78304;78372:3;78361:9;78357:19;78348:6;78304:73;:::i;:::-;78387;78455:3;78444:9;78440:19;78431:6;78387:73;:::i;:::-;78470;78538:3;78527:9;78523:19;78514:6;78470:73;:::i;:::-;78553;78621:3;78610:9;78606:19;78597:6;78553:73;:::i;:::-;78636;78704:3;78693:9;78689:19;78680:6;78636:73;:::i;:::-;77386:1330;;;;;;;;;;;;;:::o;78722:222::-;78862:34;78858:1;78850:6;78846:14;78839:58;78931:5;78926:2;78918:6;78914:15;78907:30;78722:222;:::o;78950:366::-;79092:3;79113:67;79177:2;79172:3;79113:67;:::i;:::-;79106:74;;79189:93;79278:3;79189:93;:::i;:::-;79307:2;79302:3;79298:12;79291:19;;78950:366;;;:::o;79322:419::-;79488:4;79526:2;79515:9;79511:18;79503:26;;79575:9;79569:4;79565:20;79561:1;79550:9;79546:17;79539:47;79603:131;79729:4;79603:131;:::i;:::-;79595:139;;79322:419;;;:::o;79747:636::-;79940:4;79978:3;79967:9;79963:19;79955:27;;79992:71;80060:1;80049:9;80045:17;80036:6;79992:71;:::i;:::-;80073:68;80137:2;80126:9;80122:18;80113:6;80073:68;:::i;:::-;80151:72;80219:2;80208:9;80204:18;80195:6;80151:72;:::i;:::-;80270:9;80264:4;80260:20;80255:2;80244:9;80240:18;80233:48;80298:78;80371:4;80362:6;80298:78;:::i;:::-;80290:86;;79747:636;;;;;;;:::o;80389:834::-;80628:4;80666:3;80655:9;80651:19;80643:27;;80680:71;80748:1;80737:9;80733:17;80724:6;80680:71;:::i;:::-;80761:68;80825:2;80814:9;80810:18;80801:6;80761:68;:::i;:::-;80839:72;80907:2;80896:9;80892:18;80883:6;80839:72;:::i;:::-;80958:9;80952:4;80948:20;80943:2;80932:9;80928:18;80921:48;80986:78;81059:4;81050:6;80986:78;:::i;:::-;80978:86;;81112:9;81106:4;81102:20;81096:3;81085:9;81081:19;81074:49;81140:76;81211:4;81202:6;81140:76;:::i;:::-;81132:84;;80389:834;;;;;;;;:::o;81229:225::-;81369:34;81365:1;81357:6;81353:14;81346:58;81438:8;81433:2;81425:6;81421:15;81414:33;81229:225;:::o;81460:366::-;81602:3;81623:67;81687:2;81682:3;81623:67;:::i;:::-;81616:74;;81699:93;81788:3;81699:93;:::i;:::-;81817:2;81812:3;81808:12;81801:19;;81460:366;;;:::o;81832:419::-;81998:4;82036:2;82025:9;82021:18;82013:26;;82085:9;82079:4;82075:20;82071:1;82060:9;82056:17;82049:47;82113:131;82239:4;82113:131;:::i;:::-;82105:139;;81832:419;;;:::o;82257:225::-;82397:34;82393:1;82385:6;82381:14;82374:58;82466:8;82461:2;82453:6;82449:15;82442:33;82257:225;:::o;82488:366::-;82630:3;82651:67;82715:2;82710:3;82651:67;:::i;:::-;82644:74;;82727:93;82816:3;82727:93;:::i;:::-;82845:2;82840:3;82836:12;82829:19;;82488:366;;;:::o;82860:419::-;83026:4;83064:2;83053:9;83049:18;83041:26;;83113:9;83107:4;83103:20;83099:1;83088:9;83084:17;83077:47;83141:131;83267:4;83141:131;:::i;:::-;83133:139;;82860:419;;;:::o;83285:332::-;83406:4;83444:2;83433:9;83429:18;83421:26;;83457:71;83525:1;83514:9;83510:17;83501:6;83457:71;:::i;:::-;83538:72;83606:2;83595:9;83591:18;83582:6;83538:72;:::i;:::-;83285:332;;;;;:::o;83623:::-;83744:4;83782:2;83771:9;83767:18;83759:26;;83795:71;83863:1;83852:9;83848:17;83839:6;83795:71;:::i;:::-;83876:72;83944:2;83933:9;83929:18;83920:6;83876:72;:::i;:::-;83623:332;;;;;:::o;83961:220::-;84101:34;84097:1;84089:6;84085:14;84078:58;84170:3;84165:2;84157:6;84153:15;84146:28;83961:220;:::o;84187:366::-;84329:3;84350:67;84414:2;84409:3;84350:67;:::i;:::-;84343:74;;84426:93;84515:3;84426:93;:::i;:::-;84544:2;84539:3;84535:12;84528:19;;84187:366;;;:::o;84559:419::-;84725:4;84763:2;84752:9;84748:18;84740:26;;84812:9;84806:4;84802:20;84798:1;84787:9;84783:17;84776:47;84840:131;84966:4;84840:131;:::i;:::-;84832:139;;84559:419;;;:::o;84984:174::-;85124:26;85120:1;85112:6;85108:14;85101:50;84984:174;:::o;85164:366::-;85306:3;85327:67;85391:2;85386:3;85327:67;:::i;:::-;85320:74;;85403:93;85492:3;85403:93;:::i;:::-;85521:2;85516:3;85512:12;85505:19;;85164:366;;;:::o;85536:419::-;85702:4;85740:2;85729:9;85725:18;85717:26;;85789:9;85783:4;85779:20;85775:1;85764:9;85760:17;85753:47;85817:131;85943:4;85817:131;:::i;:::-;85809:139;;85536:419;;;:::o;85961:220::-;86101:34;86097:1;86089:6;86085:14;86078:58;86170:3;86165:2;86157:6;86153:15;86146:28;85961:220;:::o;86187:366::-;86329:3;86350:67;86414:2;86409:3;86350:67;:::i;:::-;86343:74;;86426:93;86515:3;86426:93;:::i;:::-;86544:2;86539:3;86535:12;86528:19;;86187:366;;;:::o;86559:419::-;86725:4;86763:2;86752:9;86748:18;86740:26;;86812:9;86806:4;86802:20;86798:1;86787:9;86783:17;86776:47;86840:131;86966:4;86840:131;:::i;:::-;86832:139;;86559:419;;;:::o;86984:124::-;87061:6;87095:5;87089:12;87079:22;;86984:124;;;:::o;87114:194::-;87223:11;87257:6;87252:3;87245:19;87297:4;87292:3;87288:14;87273:29;;87114:194;;;;:::o;87314:142::-;87391:4;87414:3;87406:11;;87444:4;87439:3;87435:14;87427:22;;87314:142;;;:::o;87462:159::-;87536:11;87570:6;87565:3;87558:19;87610:4;87605:3;87601:14;87586:29;;87462:159;;;;:::o;87627:357::-;87705:3;87733:39;87766:5;87733:39;:::i;:::-;87788:61;87842:6;87837:3;87788:61;:::i;:::-;87781:68;;87858:65;87916:6;87911:3;87904:4;87897:5;87893:16;87858:65;:::i;:::-;87948:29;87970:6;87948:29;:::i;:::-;87943:3;87939:39;87932:46;;87709:275;87627:357;;;;:::o;87990:196::-;88079:10;88114:66;88176:3;88168:6;88114:66;:::i;:::-;88100:80;;87990:196;;;;:::o;88192:123::-;88272:4;88304;88299:3;88295:14;88287:22;;88192:123;;;:::o;88349:991::-;88488:3;88517:64;88575:5;88517:64;:::i;:::-;88597:96;88686:6;88681:3;88597:96;:::i;:::-;88590:103;;88719:3;88764:4;88756:6;88752:17;88747:3;88743:27;88794:66;88854:5;88794:66;:::i;:::-;88883:7;88914:1;88899:396;88924:6;88921:1;88918:13;88899:396;;;88995:9;88989:4;88985:20;88980:3;88973:33;89046:6;89040:13;89074:84;89153:4;89138:13;89074:84;:::i;:::-;89066:92;;89181:70;89244:6;89181:70;:::i;:::-;89171:80;;89280:4;89275:3;89271:14;89264:21;;88959:336;88946:1;88943;88939:9;88934:14;;88899:396;;;88903:14;89311:4;89304:11;;89331:3;89324:10;;88493:847;;;;;88349:991;;;;:::o;89346:1879::-;89921:4;89959:3;89948:9;89944:19;89936:27;;89973:71;90041:1;90030:9;90026:17;90017:6;89973:71;:::i;:::-;90054:72;90122:2;90111:9;90107:18;90098:6;90054:72;:::i;:::-;90173:9;90167:4;90163:20;90158:2;90147:9;90143:18;90136:48;90201:108;90304:4;90295:6;90201:108;:::i;:::-;90193:116;;90356:9;90350:4;90346:20;90341:2;90330:9;90326:18;90319:48;90384:108;90487:4;90478:6;90384:108;:::i;:::-;90376:116;;90540:9;90534:4;90530:20;90524:3;90513:9;90509:19;90502:49;90568:128;90691:4;90682:6;90568:128;:::i;:::-;90560:136;;90744:9;90738:4;90734:20;90728:3;90717:9;90713:19;90706:49;90772:126;90893:4;90884:6;90772:126;:::i;:::-;90764:134;;90908:73;90976:3;90965:9;90961:19;90952:6;90908:73;:::i;:::-;90991;91059:3;91048:9;91044:19;91035:6;90991:73;:::i;:::-;91112:9;91106:4;91102:20;91096:3;91085:9;91081:19;91074:49;91140:78;91213:4;91204:6;91140:78;:::i;:::-;91132:86;;89346:1879;;;;;;;;;;;;:::o;91231:226::-;91371:34;91367:1;91359:6;91355:14;91348:58;91440:9;91435:2;91427:6;91423:15;91416:34;91231:226;:::o;91463:366::-;91605:3;91626:67;91690:2;91685:3;91626:67;:::i;:::-;91619:74;;91702:93;91791:3;91702:93;:::i;:::-;91820:2;91815:3;91811:12;91804:19;;91463:366;;;:::o;91835:419::-;92001:4;92039:2;92028:9;92024:18;92016:26;;92088:9;92082:4;92078:20;92074:1;92063:9;92059:17;92052:47;92116:131;92242:4;92116:131;:::i;:::-;92108:139;;91835:419;;;:::o;92260:226::-;92400:34;92396:1;92388:6;92384:14;92377:58;92469:9;92464:2;92456:6;92452:15;92445:34;92260:226;:::o;92492:366::-;92634:3;92655:67;92719:2;92714:3;92655:67;:::i;:::-;92648:74;;92731:93;92820:3;92731:93;:::i;:::-;92849:2;92844:3;92840:12;92833:19;;92492:366;;;:::o;92864:419::-;93030:4;93068:2;93057:9;93053:18;93045:26;;93117:9;93111:4;93107:20;93103:1;93092:9;93088:17;93081:47;93145:131;93271:4;93145:131;:::i;:::-;93137:139;;92864:419;;;:::o;93289:545::-;93462:4;93500:3;93489:9;93485:19;93477:27;;93514:71;93582:1;93571:9;93567:17;93558:6;93514:71;:::i;:::-;93595:68;93659:2;93648:9;93644:18;93635:6;93595:68;:::i;:::-;93673:72;93741:2;93730:9;93726:18;93717:6;93673:72;:::i;:::-;93755;93823:2;93812:9;93808:18;93799:6;93755:72;:::i;:::-;93289:545;;;;;;;:::o;93840:174::-;93980:26;93976:1;93968:6;93964:14;93957:50;93840:174;:::o;94020:366::-;94162:3;94183:67;94247:2;94242:3;94183:67;:::i;:::-;94176:74;;94259:93;94348:3;94259:93;:::i;:::-;94377:2;94372:3;94368:12;94361:19;;94020:366;;;:::o;94392:419::-;94558:4;94596:2;94585:9;94581:18;94573:26;;94645:9;94639:4;94635:20;94631:1;94620:9;94616:17;94609:47;94673:131;94799:4;94673:131;:::i;:::-;94665:139;;94392:419;;;:::o;94817:181::-;94957:33;94953:1;94945:6;94941:14;94934:57;94817:181;:::o;95004:366::-;95146:3;95167:67;95231:2;95226:3;95167:67;:::i;:::-;95160:74;;95243:93;95332:3;95243:93;:::i;:::-;95361:2;95356:3;95352:12;95345:19;;95004:366;;;:::o;95376:419::-;95542:4;95580:2;95569:9;95565:18;95557:26;;95629:9;95623:4;95619:20;95615:1;95604:9;95600:17;95593:47;95657:131;95783:4;95657:131;:::i;:::-;95649:139;;95376:419;;;:::o;95801:221::-;95941:34;95937:1;95929:6;95925:14;95918:58;96010:4;96005:2;95997:6;95993:15;95986:29;95801:221;:::o;96028:366::-;96170:3;96191:67;96255:2;96250:3;96191:67;:::i;:::-;96184:74;;96267:93;96356:3;96267:93;:::i;:::-;96385:2;96380:3;96376:12;96369:19;;96028:366;;;:::o;96400:419::-;96566:4;96604:2;96593:9;96589:18;96581:26;;96653:9;96647:4;96643:20;96639:1;96628:9;96624:17;96617:47;96681:131;96807:4;96681:131;:::i;:::-;96673:139;;96400:419;;;:::o;96825:224::-;96965:34;96961:1;96953:6;96949:14;96942:58;97034:7;97029:2;97021:6;97017:15;97010:32;96825:224;:::o;97055:366::-;97197:3;97218:67;97282:2;97277:3;97218:67;:::i;:::-;97211:74;;97294:93;97383:3;97294:93;:::i;:::-;97412:2;97407:3;97403:12;97396:19;;97055:366;;;:::o;97427:419::-;97593:4;97631:2;97620:9;97616:18;97608:26;;97680:9;97674:4;97670:20;97666:1;97655:9;97651:17;97644:47;97708:131;97834:4;97708:131;:::i;:::-;97700:139;;97427:419;;;:::o;97852:230::-;97992:34;97988:1;97980:6;97976:14;97969:58;98061:13;98056:2;98048:6;98044:15;98037:38;97852:230;:::o;98088:366::-;98230:3;98251:67;98315:2;98310:3;98251:67;:::i;:::-;98244:74;;98327:93;98416:3;98327:93;:::i;:::-;98445:2;98440:3;98436:12;98429:19;;98088:366;;;:::o;98460:419::-;98626:4;98664:2;98653:9;98649:18;98641:26;;98713:9;98707:4;98703:20;98699:1;98688:9;98684:17;98677:47;98741:131;98867:4;98741:131;:::i;:::-;98733:139;;98460:419;;;:::o;98885:177::-;99025:29;99021:1;99013:6;99009:14;99002:53;98885:177;:::o;99068:366::-;99210:3;99231:67;99295:2;99290:3;99231:67;:::i;:::-;99224:74;;99307:93;99396:3;99307:93;:::i;:::-;99425:2;99420:3;99416:12;99409:19;;99068:366;;;:::o;99440:419::-;99606:4;99644:2;99633:9;99629:18;99621:26;;99693:9;99687:4;99683:20;99679:1;99668:9;99664:17;99657:47;99721:131;99847:4;99721:131;:::i;:::-;99713:139;;99440:419;;;:::o;99865:664::-;100070:4;100108:3;100097:9;100093:19;100085:27;;100122:71;100190:1;100179:9;100175:17;100166:6;100122:71;:::i;:::-;100203:72;100271:2;100260:9;100256:18;100247:6;100203:72;:::i;:::-;100285;100353:2;100342:9;100338:18;100329:6;100285:72;:::i;:::-;100367;100435:2;100424:9;100420:18;100411:6;100367:72;:::i;:::-;100449:73;100517:3;100506:9;100502:19;100493:6;100449:73;:::i;:::-;99865:664;;;;;;;;:::o;100535:226::-;100675:34;100671:1;100663:6;100659:14;100652:58;100744:9;100739:2;100731:6;100727:15;100720:34;100535:226;:::o;100767:366::-;100909:3;100930:67;100994:2;100989:3;100930:67;:::i;:::-;100923:74;;101006:93;101095:3;101006:93;:::i;:::-;101124:2;101119:3;101115:12;101108:19;;100767:366;;;:::o;101139:419::-;101305:4;101343:2;101332:9;101328:18;101320:26;;101392:9;101386:4;101382:20;101378:1;101367:9;101363:17;101356:47;101420:131;101546:4;101420:131;:::i;:::-;101412:139;;101139:419;;;:::o;101564:239::-;101704:34;101700:1;101692:6;101688:14;101681:58;101773:22;101768:2;101760:6;101756:15;101749:47;101564:239;:::o;101809:366::-;101951:3;101972:67;102036:2;102031:3;101972:67;:::i;:::-;101965:74;;102048:93;102137:3;102048:93;:::i;:::-;102166:2;102161:3;102157:12;102150:19;;101809:366;;;:::o;102181:419::-;102347:4;102385:2;102374:9;102370:18;102362:26;;102434:9;102428:4;102424:20;102420:1;102409:9;102405:17;102398:47;102462:131;102588:4;102462:131;:::i;:::-;102454:139;;102181:419;;;:::o;102606:224::-;102646:3;102665:20;102683:1;102665:20;:::i;:::-;102660:25;;102699:20;102717:1;102699:20;:::i;:::-;102694:25;;102742:1;102739;102735:9;102728:16;;102765:34;102760:3;102757:43;102754:69;;;102803:18;;:::i;:::-;102754:69;102606:224;;;;:::o;102836:308::-;102976:34;102972:1;102964:6;102960:14;102953:58;103045:34;103040:2;103032:6;103028:15;103021:59;103114:22;103109:2;103101:6;103097:15;103090:47;102836:308;:::o;103150:366::-;103292:3;103313:67;103377:2;103372:3;103313:67;:::i;:::-;103306:74;;103389:93;103478:3;103389:93;:::i;:::-;103507:2;103502:3;103498:12;103491:19;;103150:366;;;:::o;103522:419::-;103688:4;103726:2;103715:9;103711:18;103703:26;;103775:9;103769:4;103765:20;103761:1;103750:9;103746:17;103739:47;103803:131;103929:4;103803:131;:::i;:::-;103795:139;;103522:419;;;:::o;103947:231::-;104087:34;104083:1;104075:6;104071:14;104064:58;104156:14;104151:2;104143:6;104139:15;104132:39;103947:231;:::o;104184:366::-;104326:3;104347:67;104411:2;104406:3;104347:67;:::i;:::-;104340:74;;104423:93;104512:3;104423:93;:::i;:::-;104541:2;104536:3;104532:12;104525:19;;104184:366;;;:::o;104556:419::-;104722:4;104760:2;104749:9;104745:18;104737:26;;104809:9;104803:4;104799:20;104795:1;104784:9;104780:17;104773:47;104837:131;104963:4;104837:131;:::i;:::-;104829:139;;104556:419;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "40252": [
        {
          "start": 21475,
          "length": 32
        }
      ],
      "40254": [
        {
          "start": 21434,
          "length": 32
        }
      ],
      "40256": [
        {
          "start": 21348,
          "length": 32
        }
      ],
      "40258": [
        {
          "start": 24015,
          "length": 32
        }
      ],
      "40260": [
        {
          "start": 24048,
          "length": 32
        }
      ],
      "40263": [
        {
          "start": 9523,
          "length": 32
        }
      ],
      "40266": [
        {
          "start": 9575,
          "length": 32
        }
      ],
      "47449": [
        {
          "start": 7457,
          "length": 32
        },
        {
          "start": 13598,
          "length": 32
        },
        {
          "start": 14198,
          "length": 32
        }
      ],
      "48054": [
        {
          "start": 8552,
          "length": 32
        },
        {
          "start": 15231,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "$gnosisSafeToNonceToTxHash(address,uint256)": "c1de4eed",
    "$safeAllowlist(address)": "4571969b",
    "$safeVotingPeriod(address)": "2214a33f",
    "$snapshotTimestampToSnapshotBlockNumber(uint256)": "d914e172",
    "$votingDelayBlocks()": "a89f2638",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "CLOCK_MODE()": "4bf5d7e9",
    "COUNTING_MODE()": "dd4e2ba5",
    "EXTENDED_BALLOT_TYPEHASH()": "2fe3e261",
    "TIMELOCK_CONTROLLER()": "5d049c0a",
    "VE_FXS()": "506d1f81",
    "abortTransaction(address,bytes)": "b12c3277",
    "addSafesToAllowlist(address[])": "82d304ab",
    "addTransaction(address,(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256),bytes)": "b021d2c3",
    "batchAddTransaction(address[],(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)[],bytes[])": "072c8e0d",
    "bulkCastVote(uint256[],uint8[])": "77d76602",
    "cancel(address[],uint256[],bytes[],bytes32)": "452115d6",
    "castVote(uint256,uint8)": "56781388",
    "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": "3bccf4fd",
    "castVoteWithReason(uint256,uint8,string)": "7b3c71d3",
    "castVoteWithReasonAndParams(uint256,uint8,string,bytes)": "5f398a14",
    "castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)": "03420181",
    "clock()": "91ddadf4",
    "eip712Domain()": "84b0196e",
    "execute(address[],uint256[],bytes[],bytes32)": "2656227d",
    "fractionalVoteNonce(address)": "df482caf",
    "getVotes(address,uint256)": "eb9019d4",
    "getVotesWithParams(address,uint256,bytes)": "9a802a6d",
    "hasVoted(uint256,address)": "43859632",
    "hashProposal(address[],uint256[],bytes[],bytes32)": "c59057e4",
    "name()": "06fdde03",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "proposalDeadline(uint256)": "c01f9e37",
    "proposalProposer(uint256)": "143489d0",
    "proposalSnapshot(uint256)": "2d63f693",
    "proposalThreshold()": "b58131b0",
    "proposalVotes(uint256)": "544ffc9c",
    "proposals(uint256)": "013cf08b",
    "propose(address[],uint256[],bytes[],string)": "7d5e81e2",
    "quorum(uint256)": "f8ce560a",
    "quorumDenominator()": "97c3d334",
    "quorumNumerator()": "a7713a70",
    "quorumNumerator(uint256)": "60c4247f",
    "rejectTransaction(address,uint256)": "5c085589",
    "relay(address,uint256,bytes)": "c28bc2fa",
    "removeSafesFromAllowlist(address[])": "8d124e47",
    "setProposalThreshold(uint256)": "ece40cc1",
    "setSafeVotingPeriod(address,uint256)": "f8cc2e3c",
    "setVeFxsVotingDelegation(address)": "aa75a3c2",
    "setVotingDelay(uint256)": "70b0f660",
    "setVotingDelayBlocks(uint256)": "64cda3d4",
    "setVotingPeriod(uint256)": "ea0217cf",
    "shortCircuitNumerator()": "ccb8370b",
    "shortCircuitNumerator(uint256)": "dfc3c9e7",
    "shortCircuitThreshold(uint256)": "ec2de58b",
    "state(uint256)": "3e4f49e6",
    "supportsInterface(bytes4)": "01ffc9a7",
    "token()": "fc0c546a",
    "updateQuorumNumerator(uint256)": "06f3f9e6",
    "updateShortCircuitNumerator(uint256)": "43ec3e09",
    "version()": "54fd4d50",
    "voteWeightCast(uint256,address)": "342cfab6",
    "votingDelay()": "3932abb1",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"veFxs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"veFxsVotingDelegation\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"safeAllowlist\",\"type\":\"address[]\"},{\"internalType\":\"address payable\",\"name\":\"timelockController\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialVotingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialVotingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialProposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumNumeratorValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialVotingDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialShortCircuitNumerator\",\"type\":\"uint256\"}],\"internalType\":\"struct ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadBatchArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelOptimisticTransaction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotPropose\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"DisallowedTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimepoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonceReserved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTimelockController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParamLengthsNotEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalAlreadyCanceled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"SafeAlreadyOnAllowlist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"SafeNotOnAllowlist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameSafeVotingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderVotingWeightBelowProposalThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ShortCircuitNumeratorGreaterThanQuorumDenominator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"TransactionAlreadyApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongProposalState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSafeSignatureType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"AddSafeToAllowlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"RemoveSafeFromAllowlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSafeVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSafeVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"SafeVotingPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldShortCircuitNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShortCircuitNumerator\",\"type\":\"uint256\"}],\"name\":\"ShortCircuitNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"TransactionProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldVotingDelegation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVotingDelegation\",\"type\":\"address\"}],\"name\":\"VeFxsVotingDelegationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelayBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"VotingDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"safeNonce\",\"type\":\"uint256\"}],\"name\":\"$gnosisSafeToNonceToTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"$safeAllowlist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"$safeVotingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"}],\"name\":\"$snapshotTimestampToSnapshotBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"$votingDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VE_FXS\",\"outputs\":[{\"internalType\":\"contract IVeFxs\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSafe\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"abortTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"safes\",\"type\":\"address[]\"}],\"name\":\"addSafesToAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSafe\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct IFraxGovernorOmega.TxHashArgs\",\"name\":\"args\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"addTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"optimisticProposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"teamSafes\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct IFraxGovernorOmega.TxHashArgs[]\",\"name\":\"args\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"batchAddTransaction\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"optimisticProposalIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"support\",\"type\":\"uint8[]\"}],\"name\":\"bulkCastVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fractionalVoteNonce\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"voteStart\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"voteEnd\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quorumAtTimepoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSafe\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"rejectTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"safes\",\"type\":\"address[]\"}],\"name\":\"removeSafesFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newSafeVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setSafeVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"veFxsVotingDelegation\",\"type\":\"address\"}],\"name\":\"setVeFxsVotingDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setVotingDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortCircuitNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"latestShortCircuitNumerator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"shortCircuitNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shortCircuitNumeratorAtTimepoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"shortCircuitThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shortCircuitThresholdAtTimepoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"proposalState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC5805\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newShortCircuitNumerator\",\"type\":\"uint256\"}],\"name\":\"updateShortCircuitNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"voteWeightCast\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jon Walch (Frax Finance) https://github.com/jonwalch\",\"events\":{\"AddSafeToAllowlist(address)\":{\"params\":{\"safe\":\"The address of the Gnosis Safe added\"}},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCanceled(uint256)\":{\"details\":\"Emitted when a proposal is canceled.\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"details\":\"Emitted when a proposal is executed.\"},\"RemoveSafeFromAllowlist(address)\":{\"params\":{\"safe\":\"The address of the Gnosis Safe removed\"}},\"SafeVotingPeriodSet(address,uint256,uint256)\":{\"params\":{\"newSafeVotingPeriod\":\"The new value for the safe's voting period\",\"oldSafeVotingPeriod\":\"The old value for the safe's voting period\",\"safe\":\"The address of the Gnosis Safe removed\"}},\"ShortCircuitNumeratorUpdated(uint256,uint256)\":{\"params\":{\"newShortCircuitNumerator\":\"The new contract address\",\"oldShortCircuitNumerator\":\"The old short circuit numerator\"}},\"TransactionProposed(address,uint256,bytes32,uint256)\":{\"params\":{\"nonce\":\"The nonce corresponding to the safe for this proposal\",\"proposalId\":\"The proposal id in FraxGovernorOmega\",\"safe\":\"The address of the Gnosis Safe\",\"txHash\":\"The hash of the Gnosis Safe transaction\"}},\"VeFxsVotingDelegationSet(address,address)\":{\"params\":{\"newVotingDelegation\":\"The new contract address\",\"oldVotingDelegation\":\"The old contract address\"}},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast without params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\"},\"VoteCastWithParams(address,uint256,uint8,uint256,string,bytes)\":{\"details\":\"Emitted when a vote is cast with params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used. `params` are additional encoded parameters. Their interpepretation also depends on the voting module used.\"},\"VotingDelayBlocksSet(uint256,uint256)\":{\"params\":{\"newVotingDelayBlocks\":\"The new contract address\",\"oldVotingDelayBlocks\":\"The old short circuit numerator\"}}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"abortTransaction(address,bytes)\":{\"details\":\"Only works when the transaction to abort is the first in the Gnosis Safe queue (current nonce)Only way to cancel an optimistic proposal\",\"params\":{\"signatures\":\"EOA signatures for a 0 ether transfer Gnosis Safe transaction with the current nonce\",\"teamSafe\":\"Address of allowlisted Gnosis Safe\"}},\"addSafesToAllowlist(address[])\":{\"params\":{\"safes\":\"Array of safe addresses to allowlist\"}},\"addTransaction(address,(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256),bytes)\":{\"params\":{\"args\":\"TxHashArgs of the Gnosis Safe transaction\",\"signatures\":\"EOA signatures for the Gnosis Safe transaction\",\"teamSafe\":\"Address of allowlisted Gnosis Safe\"},\"returns\":{\"optimisticProposalId\":\"Proposal ID of optimistic proposal created\"}},\"batchAddTransaction(address[],(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)[],bytes[])\":{\"params\":{\"args\":\"TxHashArgs of each Gnosis Safe transaction\",\"signatures\":\"EOA signatures for each Gnosis Safe transaction\",\"teamSafes\":\"Address of each allowlisted Gnosis Safe\"},\"returns\":{\"optimisticProposalIds\":\"Array of optimistic Proposal IDs\"}},\"bulkCastVote(uint256[],uint8[])\":{\"params\":{\"proposalId\":\"An array of proposalId\",\"support\":\"An array of support\"}},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Optimistic proposals can be cancelled by Frax Team using ```abortTransaction()```\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"If casting a fractional vote via `params`, the voter's current nonce must be appended to the `params` as the last 16 bytes and included in the signature. I.e., the params used when constructing the signature would be:   abi.encodePacked(againstVotes, forVotes, abstainVotes, nonce) See {fractionalVoteNonce} and {_castVote} for more information.\"},\"clock()\":{\"details\":\"Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token does not implement EIP-6372.\"},\"constructor\":{\"params\":{\"params\":\"ConstructorParams struct\"}},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"See {Governor-proposalThreshold}.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"Gnosis Safe owners should sign a Gnosis Transaction and then it can be proposed using ```addTransaction()```Cannot recover assets accidentally sent to this contract\"},\"quorum(uint256)\":{\"details\":\"Only supports historical quorum values for proposals that actually exist at ```timepoint```\",\"params\":{\"timepoint\":\"A block.timestamp corresponding to a proposal snapshot\"},\"returns\":{\"quorumAtTimepoint\":\"Quorum value at ```timepoint```\"}},\"quorumDenominator()\":{\"details\":\"Returns the quorum denominator. Defaults to 100, but may be overridden.\"},\"quorumNumerator()\":{\"details\":\"Returns the current quorum numerator. See {quorumDenominator}.\"},\"quorumNumerator(uint256)\":{\"details\":\"Returns the quorum numerator at a specific timepoint. See {quorumDenominator}.\"},\"rejectTransaction(address,uint256)\":{\"params\":{\"nonce\":\"Gnosis Safe nonce corresponding to an optimistic proposal\",\"teamSafe\":\"Address of allowlisted Gnosis Safe\"}},\"relay(address,uint256,bytes)\":{\"details\":\"This function has no use in Omega\"},\"removeSafesFromAllowlist(address[])\":{\"details\":\"See TestFraxGovernorUpgrade.t.sol for upgrade path\",\"params\":{\"safes\":\"Array of safe addresses to remove from allowlist\"}},\"setProposalThreshold(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newProposalThreshold\":\"New voting period in amount of veFXS\"}},\"setSafeVotingPeriod(address,uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newSafeVotingPeriod\":\"The voting period specific to safe, set to 0 to go back to Omega's default voting period\",\"safe\":\"The Gnosis safe to configure\"}},\"setVeFxsVotingDelegation(address)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"veFxsVotingDelegation\":\"New ```IERC5805``` veFxsVotingDelegation contract address\"}},\"setVotingDelay(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newVotingDelay\":\"New voting delay in seconds\"}},\"setVotingDelayBlocks(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newVotingDelayBlocks\":\"New voting delay in blocks\"}},\"setVotingPeriod(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newVotingPeriod\":\"New voting period in seconds\"}},\"shortCircuitNumerator()\":{\"details\":\"Mirrors ```GovernorVotesQuorumFraction::quorumNumerator()```\",\"returns\":{\"latestShortCircuitNumerator\":\"The short circuit numerator\"}},\"shortCircuitNumerator(uint256)\":{\"details\":\"Mirrors ```GovernorVotesQuorumFraction::quorumNumerator(uint256 timepoint)```\",\"params\":{\"timepoint\":\"A block.timestamp\"},\"returns\":{\"shortCircuitNumeratorAtTimepoint\":\"Short circuit numerator\"}},\"shortCircuitThreshold(uint256)\":{\"details\":\"Only supports historical quorum values for proposals that actually exist at ```timepoint```\",\"params\":{\"timepoint\":\"A block.timestamp corresponding to a proposal snapshot\"},\"returns\":{\"shortCircuitThresholdAtTimepoint\":\"Total voting weight needed for short circuit to succeed\"}},\"state(uint256)\":{\"details\":\"Changes include: support for early success or failure using short circuit and optimistic proposals\",\"params\":{\"proposalId\":\"Proposal ID\"},\"returns\":{\"proposalState\":\"ProposalState enum\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateQuorumNumerator(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newQuorumNumerator\":\"Number expressed as x/100 (percentage)\"}},\"updateShortCircuitNumerator(uint256)\":{\"details\":\"Only callable by FraxGovernorAlpha governance\",\"params\":{\"newShortCircuitNumerator\":\"Number expressed as x/100 (percentage)\"}},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteWeightCast(uint256,address)\":{\"details\":\"Get the number of votes cast thus far on proposal `proposalId` by account `account`. Useful for integrations that allow delegates to cast rolling, partial votes.\"},\"votingDelay()\":{\"details\":\"See {IGovernor-votingDelay}.\"},\"votingPeriod()\":{\"details\":\"See {IGovernor-votingPeriod}.\"}},\"title\":\"FraxGovernorOmega\",\"version\":1},\"userdoc\":{\"events\":{\"AddSafeToAllowlist(address)\":{\"notice\":\"The ```AddSafeToAllowlist``` event is emitted when governance adds a safe to the allowlist\"},\"RemoveSafeFromAllowlist(address)\":{\"notice\":\"The ```RemoveSafeFromAllowlist``` event is emitted when governance removes a safe from the allowlist\"},\"SafeVotingPeriodSet(address,uint256,uint256)\":{\"notice\":\"The ```SafeVotingPeriodSet``` event is emitted when governance changes the voting period for a specific safe\"},\"ShortCircuitNumeratorUpdated(uint256,uint256)\":{\"notice\":\"The ```ShortCircuitNumeratorUpdated``` event is emitted when governance changes the short circuit numerator\"},\"TransactionProposed(address,uint256,bytes32,uint256)\":{\"notice\":\"The ```TransactionProposed``` event is emitted when a Frax Team optimistic proposal is put up for voting\"},\"VeFxsVotingDelegationSet(address,address)\":{\"notice\":\"The ```VeFxsVotingDelegationSet``` event is emitted when governance changes the voting weight IERC5805 contract\"},\"VotingDelayBlocksSet(uint256,uint256)\":{\"notice\":\"The ```VotingDelayBlocksSet``` event is emitted when governance changes the voting delay in blocks\"}},\"kind\":\"user\",\"methods\":{\"$gnosisSafeToNonceToTxHash(address,uint256)\":{\"notice\":\"Lookup from Gnosis Safe to nonce to corresponding transaction hash\"},\"$safeAllowlist(address)\":{\"notice\":\"Configuration and allowlist for Gnosis Safes approved for use with FraxGovernorOmega\"},\"$safeVotingPeriod(address)\":{\"notice\":\"Configuration for voting periods configured per safe. If 0, uses Omega default votingPeriod().\"},\"$snapshotTimestampToSnapshotBlockNumber(uint256)\":{\"notice\":\"Lookup from snapshot timestamp to corresponding snapshot block number, used for quorum\"},\"$votingDelayBlocks()\":{\"notice\":\"Voting delay in number of blocks\"},\"TIMELOCK_CONTROLLER()\":{\"notice\":\"The address of the TimelockController contract\"},\"VE_FXS()\":{\"notice\":\"Address of the veFXS contract\"},\"abortTransaction(address,bytes)\":{\"notice\":\"The ```abortTransaction``` function is called when the Frax Team no longer wants to execute a transaction they created in the Gnosis Safe UIThis can be before or after the transaction is added using ```addTransaction()```. It signs a 0 eth transfer for the current nonceas long as the 0 eth transfer has the configured required amount of EOA signatures.\"},\"addSafesToAllowlist(address[])\":{\"notice\":\"The ```addSafesToAllowlist``` function is called by governance to allowlist safes for addTransaction()Safes are expected to be properly configured before calling this functionProper configuration entails having: the FraxGuard set, FraxGovernorOmega set as a signer and FraxGovernorAlpha's TimelockController as a Module\"},\"addTransaction(address,(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256),bytes)\":{\"notice\":\"The ```addTransaction``` function creates optimistic proposals that correspond to a Gnosis Safe Transaction that was initiated by the Frax Team\"},\"batchAddTransaction(address[],(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)[],bytes[])\":{\"notice\":\"The ```batchAddTransaction``` function is a batch version of ```addTransaction()```\"},\"bulkCastVote(uint256[],uint8[])\":{\"notice\":\"The ```bulkCastVote``` function allows the caller to vote on many proposals at once\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"notice\":\"The ```cancel``` function reverts when called\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature. Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\"},\"constructor\":{\"notice\":\"The ```constructor``` function is called on deployment\"},\"propose(address[],uint256[],bytes[],string)\":{\"notice\":\"The ```propose``` function reverts when called\"},\"quorum(uint256)\":{\"notice\":\"The ```quorum``` function returns the quorum value at ```timepoint```\"},\"rejectTransaction(address,uint256)\":{\"notice\":\"The ```rejectTransaction``` function is called when an optimistic proposal is Defeated. It calls ```safe.approveHash()``` for a 0 eth transfer with the provided ```nonce```\"},\"relay(address,uint256,bytes)\":{\"notice\":\"The ```relay``` function reverts when called\"},\"removeSafesFromAllowlist(address[])\":{\"notice\":\"The ```removeSafesFromAllowlist``` function is called by governance to remove safes from the allowlist\"},\"setProposalThreshold(uint256)\":{\"notice\":\"The ```setProposalThreshold``` function is called by governance to change the amount of veFXS a proposer needs to call propose()proposalThreshold calculation includes all weight delegated to the proposer\"},\"setSafeVotingPeriod(address,uint256)\":{\"notice\":\"The ```setSafeVotingPeriod``` function is called by governance to change the short circuit numerator\"},\"setVeFxsVotingDelegation(address)\":{\"notice\":\"The ```setVeFxsVotingDelegation``` function is called by governance to change the voting weight ```IERC5805``` contract\"},\"setVotingDelay(uint256)\":{\"notice\":\"The ```setVotingDelay``` function is called by governance to change the amount of time before the voting snapshot\"},\"setVotingDelayBlocks(uint256)\":{\"notice\":\"The ```setVotingDelayBlocks``` function is called by governance to change the amount of blocks before the voting snapshot\"},\"setVotingPeriod(uint256)\":{\"notice\":\"The ```setVotingPeriod``` function is called by governance to change the amount of time a proposal can be voted on\"},\"shortCircuitNumerator()\":{\"notice\":\"The ```shortCircuitNumerator``` function returns the latest short circuit numerator\"},\"shortCircuitNumerator(uint256)\":{\"notice\":\"The ```shortCircuitNumerator``` function returns the short circuit numerator at ```timepoint```\"},\"shortCircuitThreshold(uint256)\":{\"notice\":\"The ```shortCircuitThreshold``` function returns the latest short circuit numerator\"},\"state(uint256)\":{\"notice\":\"The ```state``` function is similar to OpenZeppelin's propose() with minor changes\"},\"updateQuorumNumerator(uint256)\":{\"notice\":\"The ```updateQuorumNumerator``` function is called by governance to change the numerator / 100 needed for quorum\"},\"updateShortCircuitNumerator(uint256)\":{\"notice\":\"The ```updateShortCircuitNumerator``` function is called by governance to change the short circuit numerator\"}},\"notice\":\"A Governance contract with intended use as a Gnosis Safe signer. The only Safe interaction this contract does is calling GnosisSafe::approveHash().Supports optimistic proposals for Gnosis Safe transactions, that default to ```ProposalState.Succeeded```, through ```addTransaction()```.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FraxGovernorOmega.sol\":\"FraxGovernorOmega\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":5000},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/\",\":@openzeppelin/=node_modules/openzeppelin-solidity/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":frax-std/=node_modules/frax-standard-solidity/src/\",\":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/\",\":safe-tools/=node_modules/safe-tools/src/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"node_modules/openzeppelin-solidity/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"node_modules/openzeppelin-solidity/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"node_modules/openzeppelin-solidity/contracts/governance/compatibility/GovernorCompatibilityBravo.sol\":{\"keccak256\":\"0xdc82b444b0fb34dbd4840ed80f969260e7eb85e24d2a2a5770c8283e19d21f82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d981c733f7e04e9babca0036fafd5b403d22fa69d6b40ef08c679e29d6df5b8\",\"dweb:/ipfs/QmZQmnTpBUHGPykQaRN7qZQpRmeditNqTXTDfzXzLUYcXE\"]},\"node_modules/openzeppelin-solidity/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol\":{\"keccak256\":\"0xcbe38816645439e8ad731447e9fbe786effc3f870f51e7f025b7ca7c1a703e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9bffb0e9305450a614f0425a0783fa986c9d15d42f9f898a37be09922ded8da\",\"dweb:/ipfs/QmRjZ8wp7RDW7dXGuXtFE5kg4oHq8KRoM4eqBMRN6rieUi\"]},\"node_modules/openzeppelin-solidity/contracts/governance/extensions/IGovernorTimelock.sol\":{\"keccak256\":\"0xe6234ac4ba0508a3371a46543cdf4bf3a1a404d2d3c3470006741a0da294f974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f65e0806425afa3946ba400879444d73b0b9320534eaecb2c64dc3689cff0614\",\"dweb:/ipfs/QmbpjBrErEMrx9qbS529XXbfooHfkihCj9iBz2QWiw4Xe4\"]},\"node_modules/openzeppelin-solidity/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"node_modules/openzeppelin-solidity/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/openzeppelin-solidity/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"node_modules/openzeppelin-solidity/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"node_modules/openzeppelin-solidity/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/openzeppelin-solidity/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"node_modules/openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/openzeppelin-solidity/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"node_modules/openzeppelin-solidity/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"node_modules/openzeppelin-solidity/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"node_modules/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/openzeppelin-solidity/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/openzeppelin-solidity/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/openzeppelin-solidity/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/openzeppelin-solidity/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"src/FraxGovernorBase.sol\":{\"keccak256\":\"0x557ffa73751778843eef01da13ec45722f658aa5909c40abb1a1699473415101\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://e51fb1a6ba6e93510eb1320cfea06ff649b2bf5c4071d28d3f59bd1a16601197\",\"dweb:/ipfs/QmRcX6rp6dSVLvo6Mm34jKcqGEuFszQH7K7guLtRsbusJi\"]},\"src/FraxGovernorOmega.sol\":{\"keccak256\":\"0xac7014b0fa0a7b869faa9a23d2e799bbe9949b64c47fe10257a5be8f5a1810cf\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://004da5d6b5f6d5bc75e9112a67a672b45bd667497644689c1408e94333065845\",\"dweb:/ipfs/QmSPyPnJWEaJRanWdfLnsuKzaNBUp2pu8Fws5yWF7hVSo6\"]},\"src/governor/Governor.sol\":{\"keccak256\":\"0xf787bc66fd0b6a1c5df1be6e81978119c7e5834d791888db1c14b2d3037068f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbcb19dea6e7e544a63b191244c94095251029845fb39831843fea31a8ed2bc2\",\"dweb:/ipfs/QmedVNUYCQjuqdcTfiBogE7gFZenqkUr38XoPL4V74X3RM\"]},\"src/governor/GovernorCountingFractional.sol\":{\"keccak256\":\"0x53688e4c6c745493faa388e477d2ffb1323dc64eae6f03901b67c6a36992586e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38c3d94bd51c3c8c8b57d9b326401b1183e4ad176f9c63eea5a170c3b0bcd98b\",\"dweb:/ipfs/QmUC5JWahiJJKv2cTvVFda2dnqeBrnM7ZcaGSh5zMrdkEu\"]},\"src/governor/GovernorSettings.sol\":{\"keccak256\":\"0xaa98f160bf3855b7ee8b40ca4c7b7d60453b9128e4db4da9d415dc9b66d8bcd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://677732e61d1ba11f587a3ca5c25934b2798bf2af86200fdabcf2c6b836142f42\",\"dweb:/ipfs/QmePagPxBDJogbZW4KwbNLEbrrE1phu1sGSneDee8jUDGY\"]},\"src/governor/GovernorVotes.sol\":{\"keccak256\":\"0xa88289580496e6f08e38718dfeeab16607f555b9668083e05a27b8f7e51e0631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcf786c9a211f31e151c6551bd2b5e9847cb0173bede1cc1282df3e862c8c1f0\",\"dweb:/ipfs/QmSFfhsKC2a8V9ZFXWj9gtZaiPrVcGwezY3ii1vKxFi7NF\"]},\"src/governor/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x66658dfb59e438c95d4ac2efb0358be4855b1f70337ce63f1c93c7a052422a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01684a8c07c3e3c9aff6c02f613416f3c866097158196c40ede23bbc4c5f8e3f\",\"dweb:/ipfs/QmX5mjQnzh2dx4hrbHeWo8RS7y7VVMi3GT4HN5zCA8pWF8\"]},\"src/interfaces/IFraxGovernorOmega.sol\":{\"keccak256\":\"0x19a15edf3280b8effa01ca76591dbfe8018f2d683ebfa832307ed4b5337052bc\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://0d627574559dc6a9043fae4abb065686cf140e082fc82c333306f28ef7e9d68e\",\"dweb:/ipfs/QmVm1UmxaiiR4koNrLyVGrrr7nAZ8g7e9hUnNgGStaRz8Y\"]},\"src/interfaces/ISafe.sol\":{\"keccak256\":\"0xe35171cf2b35135e42e9f8fea0b02affd31d43bca23db963af9cdfd20917bcec\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://2d28cfe056fb43df2aebe2b16d7abd60281a8faefc2231bae5264d54952ded18\",\"dweb:/ipfs/QmSKSM2apePPPyx8oKvQhGRTXznKjftAJwCp2EU8gN5MAR\"]},\"src/interfaces/IVeFxs.sol\":{\"keccak256\":\"0x68fcdf6cdab834adfe2ab632f061648a52efa5a33551d58b5dfbf33ec3af1bf8\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://b66553c5eb07c9e65d07db8348ba6f0be3d09c15e1adf6fd06ec6eda410ffc3c\",\"dweb:/ipfs/QmbBuiC94kZngBhgQK69eFHZ2zApufe39KbqC15Z2Yo4ZF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct ConstructorParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "veFxs",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "veFxsVotingDelegation",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "safeAllowlist",
                  "type": "address[]"
                },
                {
                  "internalType": "address payable",
                  "name": "timelockController",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialVotingDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialVotingPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialProposalThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quorumNumeratorValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialVotingDelayBlocks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialShortCircuitNumerator",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadBatchArgs"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotCancelOptimisticTransaction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotPropose"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotRelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DisallowedTarget"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTimepoint"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonceReserved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotTimelockController"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ParamLengthsNotEqual"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalAlreadyCanceled"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeAlreadyOnAllowlist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeNotOnAllowlist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameSafeVotingPeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SenderVotingWeightBelowProposalThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ShortCircuitNumeratorGreaterThanQuorumDenominator"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "TransactionAlreadyApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongProposalState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongSafeSignatureType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddSafeToAllowlist",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "signatures",
              "type": "string[]",
              "indexed": false
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "voteStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "voteEnd",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldProposalThreshold",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newProposalThreshold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalThresholdSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldQuorumNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newQuorumNumerator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuorumNumeratorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoveSafeFromAllowlist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldSafeVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newSafeVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeVotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldShortCircuitNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newShortCircuitNumerator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ShortCircuitNumeratorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransactionProposed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldVotingDelegation",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newVotingDelegation",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VeFxsVotingDelegationSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCastWithParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelayBlocks",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelayBlocks",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "safeNonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "$gnosisSafeToNonceToTxHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "$safeAllowlist",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "status",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "$safeVotingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "snapshot",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "$snapshotTimestampToSnapshotBlockNumber",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "$votingDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLOCK_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EXTENDED_BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TIMELOCK_CONTROLLER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VE_FXS",
          "outputs": [
            {
              "internalType": "contract IVeFxs",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "teamSafe",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "abortTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "safes",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSafesToAllowlist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "teamSafe",
              "type": "address"
            },
            {
              "internalType": "struct IFraxGovernorOmega.TxHashArgs",
              "name": "args",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "enum Enum.Operation",
                  "name": "operation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "safeTxGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "gasToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "refundReceiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_nonce",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addTransaction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "optimisticProposalId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "teamSafes",
              "type": "address[]"
            },
            {
              "internalType": "struct IFraxGovernorOmega.TxHashArgs[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "enum Enum.Operation",
                  "name": "operation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "safeTxGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "gasToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "refundReceiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_nonce",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "signatures",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAddTransaction",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "optimisticProposalIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalId",
              "type": "uint256[]"
            },
            {
              "internalType": "uint8[]",
              "name": "support",
              "type": "uint8[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bulkCastVote"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "cancel",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteBySig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithReason",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithReasonAndParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithReasonAndParamsBySig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clock",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            },
            {
              "internalType": "bytes32",
              "name": "descriptionHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "fractionalVoteNonce",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotesWithParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasVoted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            },
            {
              "internalType": "bytes32",
              "name": "descriptionHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalProposer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalSnapshot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "voteStart",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "voteEnd",
              "type": "uint40"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canceled",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "quorumAtTimepoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumDenominator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumNumerator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumNumerator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "teamSafe",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "relay"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "safes",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSafesFromAllowlist"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newProposalThreshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProposalThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newSafeVotingPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSafeVotingPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "veFxsVotingDelegation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVeFxsVotingDelegation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVotingDelay"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newVotingDelayBlocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVotingDelayBlocks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVotingPeriod"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCircuitNumerator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "latestShortCircuitNumerator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCircuitNumerator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shortCircuitNumeratorAtTimepoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCircuitThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shortCircuitThresholdAtTimepoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ProposalState",
              "name": "proposalState",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC5805",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newQuorumNumerator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuorumNumerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newShortCircuitNumerator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateShortCircuitNumerator"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "voteWeightCast",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CLOCK_MODE()": {
            "details": "Machine-readable description of the clock as specified in EIP-6372."
          },
          "abortTransaction(address,bytes)": {
            "details": "Only works when the transaction to abort is the first in the Gnosis Safe queue (current nonce)Only way to cancel an optimistic proposal",
            "params": {
              "signatures": "EOA signatures for a 0 ether transfer Gnosis Safe transaction with the current nonce",
              "teamSafe": "Address of allowlisted Gnosis Safe"
            }
          },
          "addSafesToAllowlist(address[])": {
            "params": {
              "safes": "Array of safe addresses to allowlist"
            }
          },
          "addTransaction(address,(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256),bytes)": {
            "params": {
              "args": "TxHashArgs of the Gnosis Safe transaction",
              "signatures": "EOA signatures for the Gnosis Safe transaction",
              "teamSafe": "Address of allowlisted Gnosis Safe"
            },
            "returns": {
              "optimisticProposalId": "Proposal ID of optimistic proposal created"
            }
          },
          "batchAddTransaction(address[],(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)[],bytes[])": {
            "params": {
              "args": "TxHashArgs of each Gnosis Safe transaction",
              "signatures": "EOA signatures for each Gnosis Safe transaction",
              "teamSafes": "Address of each allowlisted Gnosis Safe"
            },
            "returns": {
              "optimisticProposalIds": "Array of optimistic Proposal IDs"
            }
          },
          "bulkCastVote(uint256[],uint8[])": {
            "params": {
              "proposalId": "An array of proposalId",
              "support": "An array of support"
            }
          },
          "cancel(address[],uint256[],bytes[],bytes32)": {
            "details": "Optimistic proposals can be cancelled by Frax Team using ```abortTransaction()```"
          },
          "castVote(uint256,uint8)": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
            "details": "See {IGovernor-castVoteBySig}."
          },
          "castVoteWithReason(uint256,uint8,string)": {
            "details": "See {IGovernor-castVoteWithReason}."
          },
          "castVoteWithReasonAndParams(uint256,uint8,string,bytes)": {
            "details": "See {IGovernor-castVoteWithReasonAndParams}."
          },
          "castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)": {
            "details": "If casting a fractional vote via `params`, the voter's current nonce must be appended to the `params` as the last 16 bytes and included in the signature. I.e., the params used when constructing the signature would be:   abi.encodePacked(againstVotes, forVotes, abstainVotes, nonce) See {fractionalVoteNonce} and {_castVote} for more information."
          },
          "clock()": {
            "details": "Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token does not implement EIP-6372."
          },
          "constructor": {
            "params": {
              "params": "ConstructorParams struct"
            }
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "execute(address[],uint256[],bytes[],bytes32)": {
            "details": "See {IGovernor-execute}."
          },
          "getVotes(address,uint256)": {
            "details": "See {IGovernor-getVotes}."
          },
          "getVotesWithParams(address,uint256,bytes)": {
            "details": "See {IGovernor-getVotesWithParams}."
          },
          "hasVoted(uint256,address)": {
            "details": "See {IGovernor-hasVoted}."
          },
          "hashProposal(address[],uint256[],bytes[],bytes32)": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155Receiver-onERC1155BatchReceived}."
          },
          "onERC1155Received(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155Receiver-onERC1155Received}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}."
          },
          "proposalDeadline(uint256)": {
            "details": "See {IGovernor-proposalDeadline}."
          },
          "proposalProposer(uint256)": {
            "details": "Returns the account that created a given proposal."
          },
          "proposalSnapshot(uint256)": {
            "details": "See {IGovernor-proposalSnapshot}."
          },
          "proposalThreshold()": {
            "details": "See {Governor-proposalThreshold}."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts."
          },
          "propose(address[],uint256[],bytes[],string)": {
            "details": "Gnosis Safe owners should sign a Gnosis Transaction and then it can be proposed using ```addTransaction()```Cannot recover assets accidentally sent to this contract"
          },
          "quorum(uint256)": {
            "details": "Only supports historical quorum values for proposals that actually exist at ```timepoint```",
            "params": {
              "timepoint": "A block.timestamp corresponding to a proposal snapshot"
            },
            "returns": {
              "quorumAtTimepoint": "Quorum value at ```timepoint```"
            }
          },
          "quorumDenominator()": {
            "details": "Returns the quorum denominator. Defaults to 100, but may be overridden."
          },
          "quorumNumerator()": {
            "details": "Returns the current quorum numerator. See {quorumDenominator}."
          },
          "quorumNumerator(uint256)": {
            "details": "Returns the quorum numerator at a specific timepoint. See {quorumDenominator}."
          },
          "rejectTransaction(address,uint256)": {
            "params": {
              "nonce": "Gnosis Safe nonce corresponding to an optimistic proposal",
              "teamSafe": "Address of allowlisted Gnosis Safe"
            }
          },
          "relay(address,uint256,bytes)": {
            "details": "This function has no use in Omega"
          },
          "removeSafesFromAllowlist(address[])": {
            "details": "See TestFraxGovernorUpgrade.t.sol for upgrade path",
            "params": {
              "safes": "Array of safe addresses to remove from allowlist"
            }
          },
          "setProposalThreshold(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newProposalThreshold": "New voting period in amount of veFXS"
            }
          },
          "setSafeVotingPeriod(address,uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newSafeVotingPeriod": "The voting period specific to safe, set to 0 to go back to Omega's default voting period",
              "safe": "The Gnosis safe to configure"
            }
          },
          "setVeFxsVotingDelegation(address)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "veFxsVotingDelegation": "New ```IERC5805``` veFxsVotingDelegation contract address"
            }
          },
          "setVotingDelay(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newVotingDelay": "New voting delay in seconds"
            }
          },
          "setVotingDelayBlocks(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newVotingDelayBlocks": "New voting delay in blocks"
            }
          },
          "setVotingPeriod(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newVotingPeriod": "New voting period in seconds"
            }
          },
          "shortCircuitNumerator()": {
            "details": "Mirrors ```GovernorVotesQuorumFraction::quorumNumerator()```",
            "returns": {
              "latestShortCircuitNumerator": "The short circuit numerator"
            }
          },
          "shortCircuitNumerator(uint256)": {
            "details": "Mirrors ```GovernorVotesQuorumFraction::quorumNumerator(uint256 timepoint)```",
            "params": {
              "timepoint": "A block.timestamp"
            },
            "returns": {
              "shortCircuitNumeratorAtTimepoint": "Short circuit numerator"
            }
          },
          "shortCircuitThreshold(uint256)": {
            "details": "Only supports historical quorum values for proposals that actually exist at ```timepoint```",
            "params": {
              "timepoint": "A block.timestamp corresponding to a proposal snapshot"
            },
            "returns": {
              "shortCircuitThresholdAtTimepoint": "Total voting weight needed for short circuit to succeed"
            }
          },
          "state(uint256)": {
            "details": "Changes include: support for early success or failure using short circuit and optimistic proposals",
            "params": {
              "proposalId": "Proposal ID"
            },
            "returns": {
              "proposalState": "ProposalState enum"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateQuorumNumerator(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newQuorumNumerator": "Number expressed as x/100 (percentage)"
            }
          },
          "updateShortCircuitNumerator(uint256)": {
            "details": "Only callable by FraxGovernorAlpha governance",
            "params": {
              "newShortCircuitNumerator": "Number expressed as x/100 (percentage)"
            }
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteWeightCast(uint256,address)": {
            "details": "Get the number of votes cast thus far on proposal `proposalId` by account `account`. Useful for integrations that allow delegates to cast rolling, partial votes."
          },
          "votingDelay()": {
            "details": "See {IGovernor-votingDelay}."
          },
          "votingPeriod()": {
            "details": "See {IGovernor-votingPeriod}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "$gnosisSafeToNonceToTxHash(address,uint256)": {
            "notice": "Lookup from Gnosis Safe to nonce to corresponding transaction hash"
          },
          "$safeAllowlist(address)": {
            "notice": "Configuration and allowlist for Gnosis Safes approved for use with FraxGovernorOmega"
          },
          "$safeVotingPeriod(address)": {
            "notice": "Configuration for voting periods configured per safe. If 0, uses Omega default votingPeriod()."
          },
          "$snapshotTimestampToSnapshotBlockNumber(uint256)": {
            "notice": "Lookup from snapshot timestamp to corresponding snapshot block number, used for quorum"
          },
          "$votingDelayBlocks()": {
            "notice": "Voting delay in number of blocks"
          },
          "TIMELOCK_CONTROLLER()": {
            "notice": "The address of the TimelockController contract"
          },
          "VE_FXS()": {
            "notice": "Address of the veFXS contract"
          },
          "abortTransaction(address,bytes)": {
            "notice": "The ```abortTransaction``` function is called when the Frax Team no longer wants to execute a transaction they created in the Gnosis Safe UIThis can be before or after the transaction is added using ```addTransaction()```. It signs a 0 eth transfer for the current nonceas long as the 0 eth transfer has the configured required amount of EOA signatures."
          },
          "addSafesToAllowlist(address[])": {
            "notice": "The ```addSafesToAllowlist``` function is called by governance to allowlist safes for addTransaction()Safes are expected to be properly configured before calling this functionProper configuration entails having: the FraxGuard set, FraxGovernorOmega set as a signer and FraxGovernorAlpha's TimelockController as a Module"
          },
          "addTransaction(address,(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256),bytes)": {
            "notice": "The ```addTransaction``` function creates optimistic proposals that correspond to a Gnosis Safe Transaction that was initiated by the Frax Team"
          },
          "batchAddTransaction(address[],(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)[],bytes[])": {
            "notice": "The ```batchAddTransaction``` function is a batch version of ```addTransaction()```"
          },
          "bulkCastVote(uint256[],uint8[])": {
            "notice": "The ```bulkCastVote``` function allows the caller to vote on many proposals at once"
          },
          "cancel(address[],uint256[],bytes[],bytes32)": {
            "notice": "The ```cancel``` function reverts when called"
          },
          "castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)": {
            "notice": "Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature. Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params."
          },
          "constructor": {
            "notice": "The ```constructor``` function is called on deployment"
          },
          "propose(address[],uint256[],bytes[],string)": {
            "notice": "The ```propose``` function reverts when called"
          },
          "quorum(uint256)": {
            "notice": "The ```quorum``` function returns the quorum value at ```timepoint```"
          },
          "rejectTransaction(address,uint256)": {
            "notice": "The ```rejectTransaction``` function is called when an optimistic proposal is Defeated. It calls ```safe.approveHash()``` for a 0 eth transfer with the provided ```nonce```"
          },
          "relay(address,uint256,bytes)": {
            "notice": "The ```relay``` function reverts when called"
          },
          "removeSafesFromAllowlist(address[])": {
            "notice": "The ```removeSafesFromAllowlist``` function is called by governance to remove safes from the allowlist"
          },
          "setProposalThreshold(uint256)": {
            "notice": "The ```setProposalThreshold``` function is called by governance to change the amount of veFXS a proposer needs to call propose()proposalThreshold calculation includes all weight delegated to the proposer"
          },
          "setSafeVotingPeriod(address,uint256)": {
            "notice": "The ```setSafeVotingPeriod``` function is called by governance to change the short circuit numerator"
          },
          "setVeFxsVotingDelegation(address)": {
            "notice": "The ```setVeFxsVotingDelegation``` function is called by governance to change the voting weight ```IERC5805``` contract"
          },
          "setVotingDelay(uint256)": {
            "notice": "The ```setVotingDelay``` function is called by governance to change the amount of time before the voting snapshot"
          },
          "setVotingDelayBlocks(uint256)": {
            "notice": "The ```setVotingDelayBlocks``` function is called by governance to change the amount of blocks before the voting snapshot"
          },
          "setVotingPeriod(uint256)": {
            "notice": "The ```setVotingPeriod``` function is called by governance to change the amount of time a proposal can be voted on"
          },
          "shortCircuitNumerator()": {
            "notice": "The ```shortCircuitNumerator``` function returns the latest short circuit numerator"
          },
          "shortCircuitNumerator(uint256)": {
            "notice": "The ```shortCircuitNumerator``` function returns the short circuit numerator at ```timepoint```"
          },
          "shortCircuitThreshold(uint256)": {
            "notice": "The ```shortCircuitThreshold``` function returns the latest short circuit numerator"
          },
          "state(uint256)": {
            "notice": "The ```state``` function is similar to OpenZeppelin's propose() with minor changes"
          },
          "updateQuorumNumerator(uint256)": {
            "notice": "The ```updateQuorumNumerator``` function is called by governance to change the numerator / 100 needed for quorum"
          },
          "updateShortCircuitNumerator(uint256)": {
            "notice": "The ```updateShortCircuitNumerator``` function is called by governance to change the short circuit numerator"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/",
        ":@openzeppelin/=node_modules/openzeppelin-solidity/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":frax-std/=node_modules/frax-standard-solidity/src/",
        ":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/",
        ":safe-tools/=node_modules/safe-tools/src/",
        ":solady/=node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/FraxGovernorOmega.sol": "FraxGovernorOmega"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/Governor.sol": {
        "keccak256": "0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489",
        "urls": [
          "bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a",
          "dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/IGovernor.sol": {
        "keccak256": "0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7",
        "urls": [
          "bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d",
          "dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/compatibility/GovernorCompatibilityBravo.sol": {
        "keccak256": "0xdc82b444b0fb34dbd4840ed80f969260e7eb85e24d2a2a5770c8283e19d21f82",
        "urls": [
          "bzz-raw://5d981c733f7e04e9babca0036fafd5b403d22fa69d6b40ef08c679e29d6df5b8",
          "dweb:/ipfs/QmZQmnTpBUHGPykQaRN7qZQpRmeditNqTXTDfzXzLUYcXE"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol": {
        "keccak256": "0xcbe38816645439e8ad731447e9fbe786effc3f870f51e7f025b7ca7c1a703e95",
        "urls": [
          "bzz-raw://a9bffb0e9305450a614f0425a0783fa986c9d15d42f9f898a37be09922ded8da",
          "dweb:/ipfs/QmRjZ8wp7RDW7dXGuXtFE5kg4oHq8KRoM4eqBMRN6rieUi"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/extensions/IGovernorTimelock.sol": {
        "keccak256": "0xe6234ac4ba0508a3371a46543cdf4bf3a1a404d2d3c3470006741a0da294f974",
        "urls": [
          "bzz-raw://f65e0806425afa3946ba400879444d73b0b9320534eaecb2c64dc3689cff0614",
          "dweb:/ipfs/QmbpjBrErEMrx9qbS529XXbfooHfkihCj9iBz2QWiw4Xe4"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb",
        "urls": [
          "bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96",
          "dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/interfaces/IERC5805.sol": {
        "keccak256": "0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80",
        "urls": [
          "bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e",
          "dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9",
        "urls": [
          "bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6",
          "dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/Checkpoints.sol": {
        "keccak256": "0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79",
        "urls": [
          "bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7",
          "dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/openzeppelin-solidity/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "src/FraxGovernorBase.sol": {
        "keccak256": "0x557ffa73751778843eef01da13ec45722f658aa5909c40abb1a1699473415101",
        "urls": [
          "bzz-raw://e51fb1a6ba6e93510eb1320cfea06ff649b2bf5c4071d28d3f59bd1a16601197",
          "dweb:/ipfs/QmRcX6rp6dSVLvo6Mm34jKcqGEuFszQH7K7guLtRsbusJi"
        ],
        "license": "ISC"
      },
      "src/FraxGovernorOmega.sol": {
        "keccak256": "0xac7014b0fa0a7b869faa9a23d2e799bbe9949b64c47fe10257a5be8f5a1810cf",
        "urls": [
          "bzz-raw://004da5d6b5f6d5bc75e9112a67a672b45bd667497644689c1408e94333065845",
          "dweb:/ipfs/QmSPyPnJWEaJRanWdfLnsuKzaNBUp2pu8Fws5yWF7hVSo6"
        ],
        "license": "ISC"
      },
      "src/governor/Governor.sol": {
        "keccak256": "0xf787bc66fd0b6a1c5df1be6e81978119c7e5834d791888db1c14b2d3037068f0",
        "urls": [
          "bzz-raw://cbcb19dea6e7e544a63b191244c94095251029845fb39831843fea31a8ed2bc2",
          "dweb:/ipfs/QmedVNUYCQjuqdcTfiBogE7gFZenqkUr38XoPL4V74X3RM"
        ],
        "license": "MIT"
      },
      "src/governor/GovernorCountingFractional.sol": {
        "keccak256": "0x53688e4c6c745493faa388e477d2ffb1323dc64eae6f03901b67c6a36992586e",
        "urls": [
          "bzz-raw://38c3d94bd51c3c8c8b57d9b326401b1183e4ad176f9c63eea5a170c3b0bcd98b",
          "dweb:/ipfs/QmUC5JWahiJJKv2cTvVFda2dnqeBrnM7ZcaGSh5zMrdkEu"
        ],
        "license": "MIT"
      },
      "src/governor/GovernorSettings.sol": {
        "keccak256": "0xaa98f160bf3855b7ee8b40ca4c7b7d60453b9128e4db4da9d415dc9b66d8bcd0",
        "urls": [
          "bzz-raw://677732e61d1ba11f587a3ca5c25934b2798bf2af86200fdabcf2c6b836142f42",
          "dweb:/ipfs/QmePagPxBDJogbZW4KwbNLEbrrE1phu1sGSneDee8jUDGY"
        ],
        "license": "MIT"
      },
      "src/governor/GovernorVotes.sol": {
        "keccak256": "0xa88289580496e6f08e38718dfeeab16607f555b9668083e05a27b8f7e51e0631",
        "urls": [
          "bzz-raw://bcf786c9a211f31e151c6551bd2b5e9847cb0173bede1cc1282df3e862c8c1f0",
          "dweb:/ipfs/QmSFfhsKC2a8V9ZFXWj9gtZaiPrVcGwezY3ii1vKxFi7NF"
        ],
        "license": "MIT"
      },
      "src/governor/GovernorVotesQuorumFraction.sol": {
        "keccak256": "0x66658dfb59e438c95d4ac2efb0358be4855b1f70337ce63f1c93c7a052422a09",
        "urls": [
          "bzz-raw://01684a8c07c3e3c9aff6c02f613416f3c866097158196c40ede23bbc4c5f8e3f",
          "dweb:/ipfs/QmX5mjQnzh2dx4hrbHeWo8RS7y7VVMi3GT4HN5zCA8pWF8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFraxGovernorOmega.sol": {
        "keccak256": "0x19a15edf3280b8effa01ca76591dbfe8018f2d683ebfa832307ed4b5337052bc",
        "urls": [
          "bzz-raw://0d627574559dc6a9043fae4abb065686cf140e082fc82c333306f28ef7e9d68e",
          "dweb:/ipfs/QmVm1UmxaiiR4koNrLyVGrrr7nAZ8g7e9hUnNgGStaRz8Y"
        ],
        "license": "ISC"
      },
      "src/interfaces/ISafe.sol": {
        "keccak256": "0xe35171cf2b35135e42e9f8fea0b02affd31d43bca23db963af9cdfd20917bcec",
        "urls": [
          "bzz-raw://2d28cfe056fb43df2aebe2b16d7abd60281a8faefc2231bae5264d54952ded18",
          "dweb:/ipfs/QmSKSM2apePPPyx8oKvQhGRTXznKjftAJwCp2EU8gN5MAR"
        ],
        "license": "ISC"
      },
      "src/interfaces/IVeFxs.sol": {
        "keccak256": "0x68fcdf6cdab834adfe2ab632f061648a52efa5a33551d58b5dfbf33ec3af1bf8",
        "urls": [
          "bzz-raw://b66553c5eb07c9e65d07db8348ba6f0be3d09c15e1adf6fd06ec6eda410ffc3c",
          "dweb:/ipfs/QmbBuiC94kZngBhgQK69eFHZ2zApufe39KbqC15Z2Yo4ZF"
        ],
        "license": "ISC"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FraxGovernorOmega.sol",
    "id": 49424,
    "exportedSymbols": {
      "ConstructorParams": [
        48048
      ],
      "Enum": [
        1998
      ],
      "FraxGovernorBase": [
        48014
      ],
      "FraxGovernorBaseParams": [
        47429
      ],
      "FraxGovernorOmega": [
        49423
      ],
      "IFraxGovernorOmega": [
        55258
      ],
      "ISafe": [
        55334
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:28326:86",
    "nodes": [
      {
        "id": 48016,
        "nodeType": "PragmaDirective",
        "src": "32:24:86",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 48019,
        "nodeType": "ImportDirective",
        "src": "1171:103:86",
        "nodes": [],
        "absolutePath": "src/FraxGovernorBase.sol",
        "file": "./FraxGovernorBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49424,
        "sourceUnit": 48015,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48017,
              "name": "FraxGovernorBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48014,
              "src": "1180:16:86",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48018,
              "name": "ConstructorParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47429,
              "src": "1198:17:86",
              "typeDescriptions": {}
            },
            "local": "FraxGovernorBaseParams",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48021,
        "nodeType": "ImportDirective",
        "src": "1275:73:86",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxGovernorOmega.sol",
        "file": "./interfaces/IFraxGovernorOmega.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49424,
        "sourceUnit": 55259,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48020,
              "name": "IFraxGovernorOmega",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55258,
              "src": "1284:18:86",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48024,
        "nodeType": "ImportDirective",
        "src": "1349:53:86",
        "nodes": [],
        "absolutePath": "src/interfaces/ISafe.sol",
        "file": "./interfaces/ISafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49424,
        "sourceUnit": 55335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48022,
              "name": "Enum",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1998,
              "src": "1358:4:86",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48023,
              "name": "ISafe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55334,
              "src": "1364:5:86",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48048,
        "nodeType": "StructDefinition",
        "src": "1404:385:86",
        "nodes": [],
        "canonicalName": "ConstructorParams",
        "members": [
          {
            "constant": false,
            "id": 48026,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1442:4:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1435:11:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 48025,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1435:6:86",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48028,
            "mutability": "mutable",
            "name": "veFxs",
            "nameLocation": "1460:5:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1452:13:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48027,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1452:7:86",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48030,
            "mutability": "mutable",
            "name": "veFxsVotingDelegation",
            "nameLocation": "1479:21:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1471:29:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1471:7:86",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48033,
            "mutability": "mutable",
            "name": "safeAllowlist",
            "nameLocation": "1516:13:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1506:23:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48031,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1506:7:86",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48032,
              "nodeType": "ArrayTypeName",
              "src": "1506:9:86",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48035,
            "mutability": "mutable",
            "name": "timelockController",
            "nameLocation": "1551:18:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1535:34:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 48034,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1535:15:86",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48037,
            "mutability": "mutable",
            "name": "initialVotingDelay",
            "nameLocation": "1583:18:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1575:26:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48036,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1575:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48039,
            "mutability": "mutable",
            "name": "initialVotingPeriod",
            "nameLocation": "1615:19:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1607:27:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48038,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1607:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48041,
            "mutability": "mutable",
            "name": "initialProposalThreshold",
            "nameLocation": "1648:24:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1640:32:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48040,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1640:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48043,
            "mutability": "mutable",
            "name": "quorumNumeratorValue",
            "nameLocation": "1686:20:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1678:28:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48042,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1678:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48045,
            "mutability": "mutable",
            "name": "initialVotingDelayBlocks",
            "nameLocation": "1720:24:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1712:32:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1712:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48047,
            "mutability": "mutable",
            "name": "initialShortCircuitNumerator",
            "nameLocation": "1758:28:86",
            "nodeType": "VariableDeclaration",
            "scope": 48048,
            "src": "1750:36:86",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48046,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1750:7:86",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ConstructorParams",
        "nameLocation": "1411:17:86",
        "scope": 49424,
        "visibility": "public"
      },
      {
        "id": 49423,
        "nodeType": "ContractDefinition",
        "src": "2196:26161:86",
        "nodes": [
          {
            "id": 48054,
            "nodeType": "VariableDeclaration",
            "src": "2312:44:86",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48052,
              "nodeType": "StructuredDocumentation",
              "src": "2249:58:86",
              "text": "@notice The address of the TimelockController contract"
            },
            "functionSelector": "5d049c0a",
            "mutability": "immutable",
            "name": "TIMELOCK_CONTROLLER",
            "nameLocation": "2337:19:86",
            "scope": 49423,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48053,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2312:7:86",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48059,
            "nodeType": "VariableDeclaration",
            "src": "2464:61:86",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48055,
              "nodeType": "StructuredDocumentation",
              "src": "2363:96:86",
              "text": "@notice Configuration and allowlist for Gnosis Safes approved for use with FraxGovernorOmega"
            },
            "functionSelector": "4571969b",
            "mutability": "mutable",
            "name": "$safeAllowlist",
            "nameLocation": "2511:14:86",
            "scope": 49423,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 48058,
              "keyName": "safe",
              "keyNameLocation": "2480:4:86",
              "keyType": {
                "id": 48056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2472:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2464:39:86",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "status",
              "valueNameLocation": "2496:6:86",
              "valueType": {
                "id": 48057,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2488:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 48064,
            "nodeType": "VariableDeclaration",
            "src": "2643:70:86",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48060,
              "nodeType": "StructuredDocumentation",
              "src": "2532:106:86",
              "text": "@notice Configuration for voting periods configured per safe. If 0, uses Omega default votingPeriod()."
            },
            "functionSelector": "2214a33f",
            "mutability": "mutable",
            "name": "$safeVotingPeriod",
            "nameLocation": "2696:17:86",
            "scope": 49423,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 48063,
              "keyName": "safe",
              "keyNameLocation": "2659:4:86",
              "keyType": {
                "id": 48061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2651:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2643:45:86",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "votingPeriod",
              "valueNameLocation": "2675:12:86",
              "valueType": {
                "id": 48062,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2667:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 48071,
            "nodeType": "VariableDeclaration",
            "src": "2803:103:86",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48065,
              "nodeType": "StructuredDocumentation",
              "src": "2720:78:86",
              "text": "@notice Lookup from Gnosis Safe to nonce to corresponding transaction hash"
            },
            "functionSelector": "c1de4eed",
            "mutability": "mutable",
            "name": "$gnosisSafeToNonceToTxHash",
            "nameLocation": "2880:26:86",
            "scope": 49423,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
              "typeString": "mapping(address => mapping(uint256 => bytes32))"
            },
            "typeName": {
              "id": 48070,
              "keyName": "safe",
              "keyNameLocation": "2819:4:86",
              "keyType": {
                "id": 48066,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2811:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2803:69:86",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                "typeString": "mapping(address => mapping(uint256 => bytes32))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 48069,
                "keyName": "safeNonce",
                "keyNameLocation": "2843:9:86",
                "keyType": {
                  "id": 48067,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2835:7:86",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2827:44:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                  "typeString": "mapping(uint256 => bytes32)"
                },
                "valueName": "txHash",
                "valueNameLocation": "2864:6:86",
                "valueType": {
                  "id": 48068,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2856:7:86",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 48076,
            "nodeType": "EventDefinition",
            "src": "3077:47:86",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 48072,
              "nodeType": "StructuredDocumentation",
              "src": "2913:159:86",
              "text": "@notice The ```AddSafeToAllowlist``` event is emitted when governance adds a safe to the allowlist\n @param safe The address of the Gnosis Safe added"
            },
            "eventSelector": "a04753a74f890631c71d35beb4ccc5e7e63932069a6c6ca83a48ffde668dfa06",
            "name": "AddSafeToAllowlist",
            "nameLocation": "3083:18:86",
            "parameters": {
              "id": 48075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48074,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "3118:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48076,
                  "src": "3102:20:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3101:22:86"
            }
          },
          {
            "id": 48081,
            "nodeType": "EventDefinition",
            "src": "3306:52:86",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 48077,
              "nodeType": "StructuredDocumentation",
              "src": "3130:171:86",
              "text": "@notice The ```RemoveSafeFromAllowlist``` event is emitted when governance removes a safe from the allowlist\n @param safe The address of the Gnosis Safe removed"
            },
            "eventSelector": "56e8b093d97199cb709117a5c978849a7718ef5ac8c75f9260f1a787c97c17e5",
            "name": "RemoveSafeFromAllowlist",
            "nameLocation": "3312:23:86",
            "parameters": {
              "id": 48080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48079,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "3352:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48081,
                  "src": "3336:20:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3335:22:86"
            }
          },
          {
            "id": 48090,
            "nodeType": "EventDefinition",
            "src": "3704:98:86",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 48082,
              "nodeType": "StructuredDocumentation",
              "src": "3364:335:86",
              "text": "@notice The ```SafeVotingPeriodSet``` event is emitted when governance changes the voting period for a specific safe\n @param safe The address of the Gnosis Safe removed\n @param oldSafeVotingPeriod The old value for the safe's voting period\n @param newSafeVotingPeriod The new value for the safe's voting period"
            },
            "eventSelector": "ad48c7f5802308fb2675c0f699237e1a6d39e5170f647470b1d8ed2803262e59",
            "name": "SafeVotingPeriodSet",
            "nameLocation": "3710:19:86",
            "parameters": {
              "id": 48089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "3738:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48090,
                  "src": "3730:12:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3730:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldSafeVotingPeriod",
                  "nameLocation": "3752:19:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48090,
                  "src": "3744:27:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48088,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newSafeVotingPeriod",
                  "nameLocation": "3781:19:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48090,
                  "src": "3773:27:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3729:72:86"
            }
          },
          {
            "id": 48101,
            "nodeType": "EventDefinition",
            "src": "4180:115:86",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 48091,
              "nodeType": "StructuredDocumentation",
              "src": "3808:367:86",
              "text": "@notice The ```TransactionProposed``` event is emitted when a Frax Team optimistic proposal is put up for voting\n @param safe The address of the Gnosis Safe\n @param nonce The nonce corresponding to the safe for this proposal\n @param txHash The hash of the Gnosis Safe transaction\n @param proposalId The proposal id in FraxGovernorOmega"
            },
            "eventSelector": "5ed3fb2763971f1f5e3d1e6f215e92ebe28160b512c2da07f4b12a46021adb0b",
            "name": "TransactionProposed",
            "nameLocation": "4186:19:86",
            "parameters": {
              "id": 48100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48093,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "4222:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48101,
                  "src": "4206:20:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4206:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48095,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "4236:5:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48101,
                  "src": "4228:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4228:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48097,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "txHash",
                  "nameLocation": "4259:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48101,
                  "src": "4243:22:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48096,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48099,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "4283:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48101,
                  "src": "4267:26:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4205:89:86"
            }
          },
          {
            "id": 48141,
            "nodeType": "FunctionDefinition",
            "src": "4419:911:86",
            "nodes": [],
            "body": {
              "id": 48140,
              "nodeType": "Block",
              "src": "5139:191:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48130,
                      "name": "TIMELOCK_CONTROLLER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48054,
                      "src": "5149:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 48131,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48105,
                        "src": "5171:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                          "typeString": "struct ConstructorParams memory"
                        }
                      },
                      "id": 48132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5178:18:86",
                      "memberName": "timelockController",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48035,
                      "src": "5171:25:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5149:47:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48134,
                  "nodeType": "ExpressionStatement",
                  "src": "5149:47:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48136,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "5302:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5309:13:86",
                        "memberName": "safeAllowlist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48033,
                        "src": "5302:20:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 48135,
                      "name": "_addSafesToAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49016,
                      "src": "5281:20:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 48138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:42:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48139,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:42:86"
                }
              ]
            },
            "documentation": {
              "id": 48102,
              "nodeType": "StructuredDocumentation",
              "src": "4301:113:86",
              "text": "@notice The ```constructor``` function is called on deployment\n @param params ConstructorParams struct"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48109,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4564:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48110,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4571:5:86",
                        "memberName": "veFxs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48028,
                        "src": "4564:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48111,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4617:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4624:21:86",
                        "memberName": "veFxsVotingDelegation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48030,
                        "src": "4617:28:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48113,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4670:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4677:4:86",
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48026,
                        "src": "4670:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 48115,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4719:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4726:18:86",
                        "memberName": "initialVotingDelay",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48037,
                        "src": "4719:25:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48117,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4783:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4790:19:86",
                        "memberName": "initialVotingPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48039,
                        "src": "4783:26:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48119,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4853:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48120,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4860:24:86",
                        "memberName": "initialProposalThreshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48041,
                        "src": "4853:31:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48121,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4924:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48122,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4931:20:86",
                        "memberName": "quorumNumeratorValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48043,
                        "src": "4924:27:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48123,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "4995:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5002:24:86",
                        "memberName": "initialVotingDelayBlocks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48045,
                        "src": "4995:31:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48125,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48105,
                          "src": "5074:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                            "typeString": "struct ConstructorParams memory"
                          }
                        },
                        "id": 48126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5081:28:86",
                        "memberName": "initialShortCircuitNumerator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48047,
                        "src": "5074:35:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48108,
                      "name": "FraxGovernorBaseParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47429,
                      "src": "4516:22:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConstructorParams_$47429_storage_ptr_$",
                        "typeString": "type(struct ConstructorParams storage pointer)"
                      }
                    },
                    "id": 48127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "4557:5:86",
                      "4594:21:86",
                      "4663:5:86",
                      "4699:18:86",
                      "4762:19:86",
                      "4827:24:86",
                      "4902:20:86",
                      "4969:24:86",
                      "5044:28:86"
                    ],
                    "names": [
                      "veFxs",
                      "veFxsVotingDelegation",
                      "_name",
                      "initialVotingDelay",
                      "initialVotingPeriod",
                      "initialProposalThreshold",
                      "quorumNumeratorValue",
                      "initialVotingDelayBlocks",
                      "initialShortCircuitNumerator"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4516:608:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$47429_memory_ptr",
                      "typeString": "struct ConstructorParams memory"
                    }
                  }
                ],
                "id": 48128,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48107,
                  "name": "FraxGovernorBase",
                  "nameLocations": [
                    "4486:16:86"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48014,
                  "src": "4486:16:86"
                },
                "nodeType": "ModifierInvocation",
                "src": "4486:648:86"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48105,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4465:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48141,
                  "src": "4440:31:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$48048_memory_ptr",
                    "typeString": "struct ConstructorParams"
                  },
                  "typeName": {
                    "id": 48104,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48103,
                      "name": "ConstructorParams",
                      "nameLocations": [
                        "4440:17:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48048,
                      "src": "4440:17:86"
                    },
                    "referencedDeclaration": 48048,
                    "src": "4440:17:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$48048_storage_ptr",
                      "typeString": "struct ConstructorParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4430:47:86"
            },
            "returnParameters": {
              "id": 48129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5139:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48156,
            "nodeType": "FunctionDefinition",
            "src": "5439:161:86",
            "nodes": [],
            "body": {
              "id": 48155,
              "nodeType": "Block",
              "src": "5495:105:86",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 48148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 48145,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5509:3:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5513:6:86",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5509:10:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 48147,
                      "name": "TIMELOCK_CONTROLLER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48054,
                      "src": "5523:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5509:33:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48154,
                  "nodeType": "IfStatement",
                  "src": "5505:88:86",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48149,
                          "name": "IFraxGovernorOmega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55258,
                          "src": "5551:18:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                            "typeString": "type(contract IFraxGovernorOmega)"
                          }
                        },
                        "id": 48151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5570:21:86",
                        "memberName": "NotTimelockController",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55235,
                        "src": "5551:40:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5551:42:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 48153,
                    "nodeType": "RevertStatement",
                    "src": "5544:49:86"
                  }
                }
              ]
            },
            "documentation": {
              "id": 48142,
              "nodeType": "StructuredDocumentation",
              "src": "5336:98:86",
              "text": "@notice The ```_requireOnlyGovernorAlpha``` function checks if the caller is FraxGovernorAlpha"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireOnlyTimelockController",
            "nameLocation": "5448:30:86",
            "parameters": {
              "id": 48143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:2:86"
            },
            "returnParameters": {
              "id": 48144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5495:0:86"
            },
            "scope": 49423,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48172,
            "nodeType": "FunctionDefinition",
            "src": "5749:124:86",
            "nodes": [],
            "body": {
              "id": 48171,
              "nodeType": "Block",
              "src": "5804:69:86",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 48162,
                        "name": "$safeAllowlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48059,
                        "src": "5818:14:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 48164,
                      "indexExpression": {
                        "id": 48163,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48159,
                        "src": "5833:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5818:20:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5842:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5818:25:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48170,
                  "nodeType": "IfStatement",
                  "src": "5814:52:86",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48167,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48013,
                        "src": "5852:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5852:14:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 48169,
                    "nodeType": "RevertStatement",
                    "src": "5845:21:86"
                  }
                }
              ]
            },
            "documentation": {
              "id": 48157,
              "nodeType": "StructuredDocumentation",
              "src": "5606:138:86",
              "text": "@notice The ```_requireAllowlist``` function checks if the safe is on the allowlist\n @param safe The address of the Gnosis Safe"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAllowlist",
            "nameLocation": "5758:17:86",
            "parameters": {
              "id": 48160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48159,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "5784:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48172,
                  "src": "5776:12:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5776:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:14:86"
            },
            "returnParameters": {
              "id": 48161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5804:0:86"
            },
            "scope": 49423,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48210,
            "nodeType": "FunctionDefinition",
            "src": "6414:578:86",
            "nodes": [],
            "body": {
              "id": 48209,
              "nodeType": "Block",
              "src": "6512:480:86",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48181,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "6528:1:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48209,
                      "src": "6522:7:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 48180,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6522:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48182,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6522:7:86"
                },
                {
                  "assignments": [
                    48184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48184,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6547:1:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48209,
                      "src": "6539:9:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6539:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48185,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6539:9:86"
                },
                {
                  "body": {
                    "id": 48207,
                    "nodeType": "Block",
                    "src": "6600:386:86",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6725:144:86",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6743:32:86",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6767:4:86",
                                    "type": "",
                                    "value": "0x41"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6773:1:86"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6763:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6763:12:86"
                              },
                              "variables": [
                                {
                                  "name": "signaturePos",
                                  "nodeType": "YulTypedName",
                                  "src": "6747:12:86",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6792:63:86",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "signatures",
                                            "nodeType": "YulIdentifier",
                                            "src": "6811:10:86"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "signaturePos",
                                                "nodeType": "YulIdentifier",
                                                "src": "6827:12:86"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6841:4:86",
                                                "type": "",
                                                "value": "0x41"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "6823:3:86"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6823:23:86"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6807:3:86"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6807:40:86"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6801:5:86"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6801:47:86"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6850:4:86",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6797:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6797:58:86"
                              },
                              "variableNames": [
                                {
                                  "name": "v",
                                  "nodeType": "YulIdentifier",
                                  "src": "6792:1:86"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 48184,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6773:1:86",
                            "valueSize": 1
                          },
                          {
                            "declaration": 48175,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6811:10:86",
                            "valueSize": 1
                          },
                          {
                            "declaration": 48181,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6792:1:86",
                            "valueSize": 1
                          }
                        ],
                        "id": 48196,
                        "nodeType": "InlineAssembly",
                        "src": "6716:153:86"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 48199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48197,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48181,
                            "src": "6886:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 48198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6890:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "6886:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48206,
                        "nodeType": "IfStatement",
                        "src": "6882:94:86",
                        "trueBody": {
                          "id": 48205,
                          "nodeType": "Block",
                          "src": "6893:83:86",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 48200,
                                    "name": "IFraxGovernorOmega",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55258,
                                    "src": "6918:18:86",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                      "typeString": "type(contract IFraxGovernorOmega)"
                                    }
                                  },
                                  "id": 48202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6937:22:86",
                                  "memberName": "WrongSafeSignatureType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55257,
                                  "src": "6918:41:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 48203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6918:43:86",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 48204,
                              "nodeType": "RevertStatement",
                              "src": "6911:50:86"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48190,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48184,
                      "src": "6571:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 48191,
                      "name": "requiredSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48177,
                      "src": "6575:18:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6571:22:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48208,
                  "initializationExpression": {
                    "expression": {
                      "id": 48188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 48186,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48184,
                        "src": "6564:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 48187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6568:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6564:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48189,
                    "nodeType": "ExpressionStatement",
                    "src": "6564:5:86"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6595:3:86",
                      "subExpression": {
                        "id": 48193,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48184,
                        "src": "6597:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48195,
                    "nodeType": "ExpressionStatement",
                    "src": "6595:3:86"
                  },
                  "nodeType": "ForStatement",
                  "src": "6559:427:86"
                }
              ]
            },
            "documentation": {
              "id": 48173,
              "nodeType": "StructuredDocumentation",
              "src": "5879:530:86",
              "text": "@notice The ```_requireEoaSignatures``` function checks if the provided signatures are EOA signatures\n @dev Disallow the ```v == 0```` and ```v == 1``` cases of ```safe.checkNSignatures()```. This ensures that the signatures passed\n @dev in are from EOAs and disallows the implicit signing from Omega with the ```msg.sender == currentOwner``` case.\n @param signatures 1 or more packed signature data ({bytes32 r}{bytes32 s}{uint8 v})\n @param requiredSignatures The expected amount of EOA signatures"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireEoaSignatures",
            "nameLocation": "6423:21:86",
            "parameters": {
              "id": 48178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48175,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "6458:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48210,
                  "src": "6445:23:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48174,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6445:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48177,
                  "mutability": "mutable",
                  "name": "requiredSignatures",
                  "nameLocation": "6478:18:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48210,
                  "src": "6470:26:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6444:53:86"
            },
            "returnParameters": {
              "id": 48179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:86"
            },
            "scope": 49423,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48276,
            "nodeType": "FunctionDefinition",
            "src": "7061:433:86",
            "nodes": [],
            "body": {
              "id": 48275,
              "nodeType": "Block",
              "src": "7246:248:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48227,
                      "name": "targets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48219,
                      "src": "7256:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 48231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7280:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 48230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7266:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 48228,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7270:7:86",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 48229,
                          "nodeType": "ArrayTypeName",
                          "src": "7270:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 48232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7266:16:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7256:26:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 48234,
                  "nodeType": "ExpressionStatement",
                  "src": "7256:26:86"
                },
                {
                  "expression": {
                    "id": 48241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48235,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48222,
                      "src": "7292:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 48239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7315:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 48238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7301:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 48236,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7305:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 48237,
                          "nodeType": "ArrayTypeName",
                          "src": "7305:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 48240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7301:16:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "7292:25:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 48242,
                  "nodeType": "ExpressionStatement",
                  "src": "7292:25:86"
                },
                {
                  "expression": {
                    "id": 48249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48243,
                      "name": "calldatas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48225,
                      "src": "7327:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 48247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7351:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 48246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7339:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 48244,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7343:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 48245,
                          "nodeType": "ArrayTypeName",
                          "src": "7343:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 48248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7339:14:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "7327:26:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 48250,
                  "nodeType": "ExpressionStatement",
                  "src": "7327:26:86"
                },
                {
                  "expression": {
                    "id": 48255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48251,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48219,
                        "src": "7364:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 48253,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7372:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7364:10:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48254,
                      "name": "safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48213,
                      "src": "7377:4:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7364:17:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48256,
                  "nodeType": "ExpressionStatement",
                  "src": "7364:17:86"
                },
                {
                  "expression": {
                    "id": 48261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48257,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48222,
                        "src": "7391:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 48259,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7398:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7391:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 48260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7403:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7391:13:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48262,
                  "nodeType": "ExpressionStatement",
                  "src": "7391:13:86"
                },
                {
                  "expression": {
                    "id": 48273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48263,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48225,
                        "src": "7414:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 48265,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7424:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7414:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 48268,
                              "name": "ISafe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55334,
                              "src": "7452:5:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISafe_$55334_$",
                                "typeString": "type(contract ISafe)"
                              }
                            },
                            "id": 48269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7458:11:86",
                            "memberName": "approveHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55282,
                            "src": "7452:17:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function ISafe.approveHash(bytes32)"
                            }
                          },
                          "id": 48270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7470:8:86",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "7452:26:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "id": 48271,
                          "name": "txHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48215,
                          "src": "7480:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 48266,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "7429:3:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 48267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7433:18:86",
                        "memberName": "encodeWithSelector",
                        "nodeType": "MemberAccess",
                        "src": "7429:22:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes4) pure returns (bytes memory)"
                        }
                      },
                      "id": 48272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7429:58:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "7414:73:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 48274,
                  "nodeType": "ExpressionStatement",
                  "src": "7414:73:86"
                }
              ]
            },
            "documentation": {
              "id": 48211,
              "nodeType": "StructuredDocumentation",
              "src": "6998:58:86",
              "text": "@dev Internal helper function for optimistic proposals"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_optimisticProposalArgs",
            "nameLocation": "7070:23:86",
            "parameters": {
              "id": 48216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48213,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "7111:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48276,
                  "src": "7103:12:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48215,
                  "mutability": "mutable",
                  "name": "txHash",
                  "nameLocation": "7133:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48276,
                  "src": "7125:14:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48214,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7125:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7093:52:86"
            },
            "returnParameters": {
              "id": 48226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48219,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "7186:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48276,
                  "src": "7169:24:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48217,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7169:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48218,
                    "nodeType": "ArrayTypeName",
                    "src": "7169:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48222,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "7212:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48276,
                  "src": "7195:23:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48220,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7195:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48221,
                    "nodeType": "ArrayTypeName",
                    "src": "7195:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48225,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "7235:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48276,
                  "src": "7220:24:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48223,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "7220:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 48224,
                    "nodeType": "ArrayTypeName",
                    "src": "7220:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7168:77:86"
            },
            "scope": 49423,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48315,
            "nodeType": "FunctionDefinition",
            "src": "7636:564:86",
            "nodes": [],
            "body": {
              "id": 48314,
              "nodeType": "Block",
              "src": "7785:415:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48288,
                      "name": "txHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48286,
                      "src": "7795:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48291,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "7846:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7851:2:86",
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54640,
                          "src": "7846:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48293,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "7874:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48294,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7879:5:86",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54642,
                          "src": "7874:10:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48295,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "7904:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48296,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7909:4:86",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54644,
                          "src": "7904:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 48297,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "7938:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48298,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7943:9:86",
                          "memberName": "operation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54647,
                          "src": "7938:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Operation_$1997",
                            "typeString": "enum Enum.Operation"
                          }
                        },
                        {
                          "expression": {
                            "id": 48299,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "7977:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7982:9:86",
                          "memberName": "safeTxGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54649,
                          "src": "7977:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48301,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "8014:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48302,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8019:7:86",
                          "memberName": "baseGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54651,
                          "src": "8014:12:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48303,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "8050:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48304,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8055:8:86",
                          "memberName": "gasPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54653,
                          "src": "8050:13:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48305,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "8087:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8092:8:86",
                          "memberName": "gasToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54655,
                          "src": "8087:13:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48307,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "8130:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48308,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8135:14:86",
                          "memberName": "refundReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54657,
                          "src": "8130:19:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48309,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48283,
                            "src": "8171:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                              "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                            }
                          },
                          "id": 48310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8176:6:86",
                          "memberName": "_nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54659,
                          "src": "8171:11:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_enum$_Operation_$1997",
                            "typeString": "enum Enum.Operation"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 48289,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48280,
                          "src": "7804:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$55334",
                            "typeString": "contract ISafe"
                          }
                        },
                        "id": 48290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7809:18:86",
                        "memberName": "getTransactionHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55321,
                        "src": "7804:23:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$1997_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,uint256,bytes memory,enum Enum.Operation,uint256,uint256,uint256,address,address,uint256) view external returns (bytes32)"
                        }
                      },
                      "id": 48311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7842:2:86",
                        "7867:5:86",
                        "7898:4:86",
                        "7927:9:86",
                        "7966:9:86",
                        "8005:7:86",
                        "8040:8:86",
                        "8077:8:86",
                        "8114:14:86",
                        "8163:6:86"
                      ],
                      "names": [
                        "to",
                        "value",
                        "data",
                        "operation",
                        "safeTxGas",
                        "baseGas",
                        "gasPrice",
                        "gasToken",
                        "refundReceiver",
                        "_nonce"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7804:389:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7795:398:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 48313,
                  "nodeType": "ExpressionStatement",
                  "src": "7795:398:86"
                }
              ]
            },
            "documentation": {
              "id": 48277,
              "nodeType": "StructuredDocumentation",
              "src": "7500:131:86",
              "text": "@dev Exists solely to avoid stack too deep errors in ```addTransaction()```\n @return txHash Gnosis Safe transaction hash"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeGetTransactionHash",
            "nameLocation": "7645:23:86",
            "parameters": {
              "id": 48284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48280,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "7684:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48315,
                  "src": "7678:10:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISafe_$55334",
                    "typeString": "contract ISafe"
                  },
                  "typeName": {
                    "id": 48279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48278,
                      "name": "ISafe",
                      "nameLocations": [
                        "7678:5:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55334,
                      "src": "7678:5:86"
                    },
                    "referencedDeclaration": 55334,
                    "src": "7678:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafe_$55334",
                      "typeString": "contract ISafe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48283,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "7735:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48315,
                  "src": "7698:41:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                    "typeString": "struct IFraxGovernorOmega.TxHashArgs"
                  },
                  "typeName": {
                    "id": 48282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48281,
                      "name": "IFraxGovernorOmega.TxHashArgs",
                      "nameLocations": [
                        "7698:18:86",
                        "7717:10:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54660,
                      "src": "7698:29:86"
                    },
                    "referencedDeclaration": 54660,
                    "src": "7698:29:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TxHashArgs_$54660_storage_ptr",
                      "typeString": "struct IFraxGovernorOmega.TxHashArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7668:77:86"
            },
            "returnParameters": {
              "id": 48287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48286,
                  "mutability": "mutable",
                  "name": "txHash",
                  "nameLocation": "7777:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48315,
                  "src": "7769:14:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7769:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7768:16:86"
            },
            "scope": 49423,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48339,
            "nodeType": "FunctionDefinition",
            "src": "8461:268:86",
            "nodes": [],
            "body": {
              "id": 48338,
              "nodeType": "Block",
              "src": "8671:58:86",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48333,
                        "name": "IFraxGovernorOmega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55258,
                        "src": "8688:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                          "typeString": "type(contract IFraxGovernorOmega)"
                        }
                      },
                      "id": 48335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8707:13:86",
                      "memberName": "CannotPropose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55223,
                      "src": "8688:32:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 48336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8688:34:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48337,
                  "nodeType": "RevertStatement",
                  "src": "8681:41:86"
                }
              ]
            },
            "baseFunctions": [
              51767
            ],
            "documentation": {
              "id": 48316,
              "nodeType": "StructuredDocumentation",
              "src": "8206:250:86",
              "text": "@notice The ```propose``` function reverts when called\n @dev Gnosis Safe owners should sign a Gnosis Transaction and then it can be proposed using ```addTransaction()```\n @dev Cannot recover assets accidentally sent to this contract"
            },
            "functionSelector": "7d5e81e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "propose",
            "nameLocation": "8470:7:86",
            "overrides": {
              "id": 48329,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8644:8:86"
            },
            "parameters": {
              "id": 48328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48339,
                  "src": "8487:16:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48317,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8487:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48318,
                    "nodeType": "ArrayTypeName",
                    "src": "8487:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48339,
                  "src": "8524:16:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48320,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8524:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48321,
                    "nodeType": "ArrayTypeName",
                    "src": "8524:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48339,
                  "src": "8560:14:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48323,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8560:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 48324,
                    "nodeType": "ArrayTypeName",
                    "src": "8560:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48339,
                  "src": "8597:13:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48326,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8597:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8477:154:86"
            },
            "returnParameters": {
              "id": 48332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48339,
                  "src": "8662:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8662:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8661:9:86"
            },
            "scope": 49423,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48363,
            "nodeType": "FunctionDefinition",
            "src": "8892:285:86",
            "nodes": [],
            "body": {
              "id": 48362,
              "nodeType": "Block",
              "src": "9099:78:86",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48357,
                        "name": "IFraxGovernorOmega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55258,
                        "src": "9116:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                          "typeString": "type(contract IFraxGovernorOmega)"
                        }
                      },
                      "id": 48359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9135:33:86",
                      "memberName": "CannotCancelOptimisticTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55221,
                      "src": "9116:52:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 48360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:54:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48361,
                  "nodeType": "RevertStatement",
                  "src": "9109:61:86"
                }
              ]
            },
            "baseFunctions": [
              51908
            ],
            "documentation": {
              "id": 48340,
              "nodeType": "StructuredDocumentation",
              "src": "8735:152:86",
              "text": "@notice The ```cancel``` function reverts when called\n @dev Optimistic proposals can be cancelled by Frax Team using ```abortTransaction()```"
            },
            "functionSelector": "452115d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "8901:6:86",
            "overrides": {
              "id": 48353,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9072:8:86"
            },
            "parameters": {
              "id": 48352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48363,
                  "src": "8917:16:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48341,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8917:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48342,
                    "nodeType": "ArrayTypeName",
                    "src": "8917:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48363,
                  "src": "8954:16:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48344,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8954:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48345,
                    "nodeType": "ArrayTypeName",
                    "src": "8954:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48363,
                  "src": "8990:14:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48347,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8990:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 48348,
                    "nodeType": "ArrayTypeName",
                    "src": "8990:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48363,
                  "src": "9027:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9027:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8907:152:86"
            },
            "returnParameters": {
              "id": 48356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48363,
                  "src": "9090:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9089:9:86"
            },
            "scope": 49423,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48380,
            "nodeType": "FunctionDefinition",
            "src": "9291:188:86",
            "nodes": [],
            "body": {
              "id": 48379,
              "nodeType": "Block",
              "src": "9423:56:86",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48374,
                        "name": "IFraxGovernorOmega",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55258,
                        "src": "9440:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                          "typeString": "type(contract IFraxGovernorOmega)"
                        }
                      },
                      "id": 48376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9459:11:86",
                      "memberName": "CannotRelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55225,
                      "src": "9440:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 48377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9440:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48378,
                  "nodeType": "RevertStatement",
                  "src": "9433:39:86"
                }
              ]
            },
            "baseFunctions": [
              52484
            ],
            "documentation": {
              "id": 48364,
              "nodeType": "StructuredDocumentation",
              "src": "9183:103:86",
              "text": "@notice The ```relay``` function reverts when called\n @dev This function has no use in Omega"
            },
            "functionSelector": "c28bc2fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relay",
            "nameLocation": "9300:5:86",
            "overrides": {
              "id": 48372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9414:8:86"
            },
            "parameters": {
              "id": 48371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48380,
                  "src": "9315:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9315:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48380,
                  "src": "9342:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9342:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48380,
                  "src": "9368:14:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48369,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9368:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9305:91:86"
            },
            "returnParameters": {
              "id": 48373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9423:0:86"
            },
            "scope": 49423,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48517,
            "nodeType": "FunctionDefinition",
            "src": "9919:2102:86",
            "nodes": [],
            "body": {
              "id": 48516,
              "nodeType": "Block",
              "src": "10109:1912:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48394,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48383,
                        "src": "10137:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48393,
                      "name": "_requireAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48172,
                      "src": "10119:17:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 48395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10119:27:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48396,
                  "nodeType": "ExpressionStatement",
                  "src": "10119:27:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 48400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 48397,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48386,
                        "src": "10433:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                        }
                      },
                      "id": 48398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10438:2:86",
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54640,
                      "src": "10433:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 48399,
                      "name": "teamSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48383,
                      "src": "10444:8:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10433:19:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48409,
                  "nodeType": "IfStatement",
                  "src": "10429:101:86",
                  "trueBody": {
                    "id": 48408,
                    "nodeType": "Block",
                    "src": "10454:76:86",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 48404,
                                "name": "args",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48386,
                                "src": "10511:4:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                                  "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                                }
                              },
                              "id": 48405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10516:2:86",
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54640,
                              "src": "10511:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 48401,
                              "name": "IFraxGovernorOmega",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55258,
                              "src": "10475:18:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                "typeString": "type(contract IFraxGovernorOmega)"
                              }
                            },
                            "id": 48403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10494:16:86",
                            "memberName": "DisallowedTarget",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55231,
                            "src": "10475:35:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 48406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10475:44:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48407,
                        "nodeType": "RevertStatement",
                        "src": "10468:51:86"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    48412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48412,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "10546:4:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "10540:10:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafe_$55334",
                        "typeString": "contract ISafe"
                      },
                      "typeName": {
                        "id": 48411,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48410,
                          "name": "ISafe",
                          "nameLocations": [
                            "10540:5:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55334,
                          "src": "10540:5:86"
                        },
                        "referencedDeclaration": 55334,
                        "src": "10540:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48416,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48414,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48383,
                        "src": "10559:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48413,
                      "name": "ISafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55334,
                      "src": "10553:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISafe_$55334_$",
                        "typeString": "type(contract ISafe)"
                      }
                    },
                    "id": 48415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10553:15:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafe_$55334",
                      "typeString": "contract ISafe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10540:28:86"
                },
                {
                  "assignments": [
                    48418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48418,
                      "mutability": "mutable",
                      "name": "requiredSignatures",
                      "nameLocation": "10769:18:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "10761:26:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10761:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48424,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48419,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48412,
                          "src": "10790:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$55334",
                            "typeString": "contract ISafe"
                          }
                        },
                        "id": 48420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10795:12:86",
                        "memberName": "getThreshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55294,
                        "src": "10790:17:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 48421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10790:19:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 48422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10812:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10790:23:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10761:52:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48426,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48388,
                        "src": "10860:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 48427,
                        "name": "requiredSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48418,
                        "src": "10892:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48425,
                      "name": "_requireEoaSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48210,
                      "src": "10824:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,uint256) pure"
                      }
                    },
                    "id": 48428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10848:10:86",
                      "10872:18:86"
                    ],
                    "names": [
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10824:89:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48429,
                  "nodeType": "ExpressionStatement",
                  "src": "10824:89:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 48437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 48430,
                          "name": "$gnosisSafeToNonceToTxHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48071,
                          "src": "10928:26:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bytes32))"
                          }
                        },
                        "id": 48432,
                        "indexExpression": {
                          "id": 48431,
                          "name": "teamSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48383,
                          "src": "10955:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10928:36:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 48435,
                      "indexExpression": {
                        "expression": {
                          "id": 48433,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48386,
                          "src": "10965:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                            "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                          }
                        },
                        "id": 48434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10970:6:86",
                        "memberName": "_nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54659,
                        "src": "10965:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10928:49:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10981:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10928:54:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48443,
                  "nodeType": "IfStatement",
                  "src": "10924:101:86",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48438,
                          "name": "IFraxGovernorOmega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55258,
                          "src": "10991:18:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                            "typeString": "type(contract IFraxGovernorOmega)"
                          }
                        },
                        "id": 48440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11010:13:86",
                        "memberName": "NonceReserved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55233,
                        "src": "10991:32:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10991:34:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 48442,
                    "nodeType": "RevertStatement",
                    "src": "10984:41:86"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 48444,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48386,
                        "src": "11039:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                        }
                      },
                      "id": 48445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11044:6:86",
                      "memberName": "_nonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54659,
                      "src": "11039:11:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48446,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48412,
                          "src": "11053:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$55334",
                            "typeString": "contract ISafe"
                          }
                        },
                        "id": 48447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11058:5:86",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55276,
                        "src": "11053:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 48448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11053:12:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11039:26:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48455,
                  "nodeType": "IfStatement",
                  "src": "11035:70:86",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48450,
                          "name": "IFraxGovernorOmega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55258,
                          "src": "11074:18:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                            "typeString": "type(contract IFraxGovernorOmega)"
                          }
                        },
                        "id": 48452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11093:10:86",
                        "memberName": "WrongNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55253,
                        "src": "11074:29:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11074:31:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 48454,
                    "nodeType": "RevertStatement",
                    "src": "11067:38:86"
                  }
                },
                {
                  "assignments": [
                    48457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48457,
                      "mutability": "mutable",
                      "name": "txHash",
                      "nameLocation": "11124:6:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "11116:14:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48456,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11116:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48459,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48412,
                        "src": "11165:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      {
                        "id": 48460,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48386,
                        "src": "11177:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        },
                        {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                        }
                      ],
                      "id": 48458,
                      "name": "_safeGetTransactionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48315,
                      "src": "11133:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ISafe_$55334_$_t_struct$_TxHashArgs_$54660_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (contract ISafe,struct IFraxGovernorOmega.TxHashArgs memory) view returns (bytes32)"
                      }
                    },
                    "id": 48461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11159:4:86",
                      "11171:4:86"
                    ],
                    "names": [
                      "safe",
                      "args"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11133:51:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11116:68:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48466,
                        "name": "txHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48457,
                        "src": "11241:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 48467,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48386,
                          "src": "11267:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                            "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                          }
                        },
                        "id": 48468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11272:4:86",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54644,
                        "src": "11267:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 48469,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48388,
                        "src": "11302:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 48470,
                        "name": "requiredSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48418,
                        "src": "11346:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48463,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48412,
                        "src": "11195:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11200:16:86",
                      "memberName": "checkNSignatures",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55333,
                      "src": "11195:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,bytes memory,uint256) view external"
                      }
                    },
                    "id": 48471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11231:8:86",
                      "11261:4:86",
                      "11290:10:86",
                      "11326:18:86"
                    ],
                    "names": [
                      "dataHash",
                      "data",
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11195:180:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48472,
                  "nodeType": "ExpressionStatement",
                  "src": "11195:180:86"
                },
                {
                  "assignments": [
                    48477,
                    48480,
                    48483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48477,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "11404:7:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "11387:24:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11387:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48476,
                        "nodeType": "ArrayTypeName",
                        "src": "11387:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48480,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "11430:6:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "11413:23:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11413:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48479,
                        "nodeType": "ArrayTypeName",
                        "src": "11413:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48483,
                      "mutability": "mutable",
                      "name": "calldatas",
                      "nameLocation": "11453:9:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48516,
                      "src": "11438:24:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48481,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "11438:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 48482,
                        "nodeType": "ArrayTypeName",
                        "src": "11438:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48488,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48485,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48383,
                        "src": "11510:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48486,
                        "name": "txHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48457,
                        "src": "11540:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48484,
                      "name": "_optimisticProposalArgs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48276,
                      "src": "11466:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32) pure returns (address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "id": 48487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11504:4:86",
                      "11532:6:86"
                    ],
                    "names": [
                      "safe",
                      "txHash"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11466:91:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11386:171:86"
                },
                {
                  "expression": {
                    "id": 48497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48489,
                      "name": "optimisticProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48391,
                      "src": "11568:20:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48491,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48477,
                          "src": "11623:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 48492,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48480,
                          "src": "11652:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 48493,
                          "name": "calldatas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48483,
                          "src": "11683:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "hexValue": "",
                          "id": 48494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11719:2:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "id": 48495,
                          "name": "teamSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48383,
                          "src": "11745:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48490,
                        "name": "_propose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49309,
                        "src": "11591:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,string memory,address) returns (uint256)"
                        }
                      },
                      "id": 48496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "11614:7:86",
                        "11644:6:86",
                        "11672:9:86",
                        "11706:11:86",
                        "11735:8:86"
                      ],
                      "names": [
                        "targets",
                        "values",
                        "calldatas",
                        "description",
                        "teamSafe"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "11591:173:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11568:196:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48498,
                  "nodeType": "ExpressionStatement",
                  "src": "11568:196:86"
                },
                {
                  "expression": {
                    "id": 48506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 48499,
                          "name": "$gnosisSafeToNonceToTxHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48071,
                          "src": "11775:26:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bytes32))"
                          }
                        },
                        "id": 48503,
                        "indexExpression": {
                          "id": 48500,
                          "name": "teamSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48383,
                          "src": "11802:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11775:36:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 48504,
                      "indexExpression": {
                        "expression": {
                          "id": 48501,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48386,
                          "src": "11812:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                            "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                          }
                        },
                        "id": 48502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11817:6:86",
                        "memberName": "_nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54659,
                        "src": "11812:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11775:49:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48505,
                      "name": "txHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48457,
                      "src": "11827:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11775:58:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 48507,
                  "nodeType": "ExpressionStatement",
                  "src": "11775:58:86"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48509,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48383,
                        "src": "11889:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48510,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48386,
                          "src": "11918:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                            "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                          }
                        },
                        "id": 48511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11923:6:86",
                        "memberName": "_nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54659,
                        "src": "11918:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48512,
                        "name": "txHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48457,
                        "src": "11951:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48513,
                        "name": "optimisticProposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48391,
                        "src": "11983:20:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48508,
                      "name": "TransactionProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48101,
                      "src": "11849:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256)"
                      }
                    },
                    "id": 48514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11883:4:86",
                      "11911:5:86",
                      "11943:6:86",
                      "11971:10:86"
                    ],
                    "names": [
                      "safe",
                      "nonce",
                      "txHash",
                      "proposalId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11849:165:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48515,
                  "nodeType": "EmitStatement",
                  "src": "11844:170:86"
                }
              ]
            },
            "documentation": {
              "id": 48381,
              "nodeType": "StructuredDocumentation",
              "src": "9485:429:86",
              "text": "@notice The ```addTransaction``` function creates optimistic proposals that correspond to a Gnosis Safe Transaction that was initiated by the Frax Team\n @param teamSafe Address of allowlisted Gnosis Safe\n @param args TxHashArgs of the Gnosis Safe transaction\n @param signatures EOA signatures for the Gnosis Safe transaction\n @return optimisticProposalId Proposal ID of optimistic proposal created"
            },
            "functionSelector": "b021d2c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTransaction",
            "nameLocation": "9928:14:86",
            "parameters": {
              "id": 48389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48383,
                  "mutability": "mutable",
                  "name": "teamSafe",
                  "nameLocation": "9960:8:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48517,
                  "src": "9952:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9952:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48386,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "10017:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48517,
                  "src": "9978:43:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                    "typeString": "struct IFraxGovernorOmega.TxHashArgs"
                  },
                  "typeName": {
                    "id": 48385,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48384,
                      "name": "IFraxGovernorOmega.TxHashArgs",
                      "nameLocations": [
                        "9978:18:86",
                        "9997:10:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54660,
                      "src": "9978:29:86"
                    },
                    "referencedDeclaration": 54660,
                    "src": "9978:29:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TxHashArgs_$54660_storage_ptr",
                      "typeString": "struct IFraxGovernorOmega.TxHashArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48388,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "10046:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48517,
                  "src": "10031:25:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10031:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9942:120:86"
            },
            "returnParameters": {
              "id": 48392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48391,
                  "mutability": "mutable",
                  "name": "optimisticProposalId",
                  "nameLocation": "10087:20:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48517,
                  "src": "10079:28:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10079:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10078:30:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48591,
            "nodeType": "FunctionDefinition",
            "src": "12400:701:86",
            "nodes": [],
            "body": {
              "id": 48590,
              "nodeType": "Block",
              "src": "12623:478:86",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 48544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 48538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 48534,
                          "name": "teamSafes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48521,
                          "src": "12637:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 48535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12647:6:86",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12637:16:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 48536,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48525,
                          "src": "12657:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TxHashArgs_$54660_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata[] calldata"
                          }
                        },
                        "id": 48537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12662:6:86",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12657:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12637:31:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 48543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 48539,
                          "name": "teamSafes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48521,
                          "src": "12672:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 48540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12682:6:86",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12672:16:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 48541,
                          "name": "signatures",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48528,
                          "src": "12692:10:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "bytes calldata[] calldata"
                          }
                        },
                        "id": 48542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12703:6:86",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12692:17:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12672:37:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12637:72:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48551,
                  "nodeType": "IfStatement",
                  "src": "12633:143:86",
                  "trueBody": {
                    "id": 48550,
                    "nodeType": "Block",
                    "src": "12711:65:86",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48545,
                              "name": "IFraxGovernorOmega",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55258,
                              "src": "12732:18:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                "typeString": "type(contract IFraxGovernorOmega)"
                              }
                            },
                            "id": 48547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12751:12:86",
                            "memberName": "BadBatchArgs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55219,
                            "src": "12732:31:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12732:33:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48549,
                        "nodeType": "RevertStatement",
                        "src": "12725:40:86"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 48559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48552,
                      "name": "optimisticProposalIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48532,
                      "src": "12786:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48556,
                            "name": "teamSafes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48521,
                            "src": "12824:9:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 48557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12834:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12824:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 48555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12810:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 48553,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12814:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 48554,
                          "nodeType": "ArrayTypeName",
                          "src": "12814:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 48558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12810:31:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "12786:55:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 48560,
                  "nodeType": "ExpressionStatement",
                  "src": "12786:55:86"
                },
                {
                  "body": {
                    "id": 48588,
                    "nodeType": "Block",
                    "src": "12899:196:86",
                    "statements": [
                      {
                        "expression": {
                          "id": 48586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 48572,
                              "name": "optimisticProposalIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48532,
                              "src": "12913:21:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 48574,
                            "indexExpression": {
                              "id": 48573,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48562,
                              "src": "12935:1:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12913:24:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 48576,
                                  "name": "teamSafes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48521,
                                  "src": "12983:9:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 48578,
                                "indexExpression": {
                                  "id": 48577,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48562,
                                  "src": "12993:1:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12983:12:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 48579,
                                  "name": "args",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48525,
                                  "src": "13019:4:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TxHashArgs_$54660_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata[] calldata"
                                  }
                                },
                                "id": 48581,
                                "indexExpression": {
                                  "id": 48580,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48562,
                                  "src": "13024:1:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13019:7:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                                  "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 48582,
                                  "name": "signatures",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48528,
                                  "src": "13056:10:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "bytes calldata[] calldata"
                                  }
                                },
                                "id": 48584,
                                "indexExpression": {
                                  "id": 48583,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48562,
                                  "src": "13067:1:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13056:13:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_TxHashArgs_$54660_calldata_ptr",
                                  "typeString": "struct IFraxGovernorOmega.TxHashArgs calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 48575,
                              "name": "addTransaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48517,
                              "src": "12940:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TxHashArgs_$54660_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                "typeString": "function (address,struct IFraxGovernorOmega.TxHashArgs calldata,bytes calldata) returns (uint256)"
                              }
                            },
                            "id": 48585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "12973:8:86",
                              "13013:4:86",
                              "13044:10:86"
                            ],
                            "names": [
                              "teamSafe",
                              "args",
                              "signatures"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "12940:144:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12913:171:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48587,
                        "nodeType": "ExpressionStatement",
                        "src": "12913:171:86"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48565,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48562,
                      "src": "12872:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48566,
                        "name": "teamSafes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48521,
                        "src": "12876:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 48567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12886:6:86",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12876:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12872:20:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48589,
                  "initializationExpression": {
                    "assignments": [
                      48562
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48562,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12865:1:86",
                        "nodeType": "VariableDeclaration",
                        "scope": 48589,
                        "src": "12857:9:86",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48561,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12857:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48564,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12869:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12857:13:86"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "12894:3:86",
                      "subExpression": {
                        "id": 48569,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48562,
                        "src": "12896:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48571,
                    "nodeType": "ExpressionStatement",
                    "src": "12894:3:86"
                  },
                  "nodeType": "ForStatement",
                  "src": "12852:243:86"
                }
              ]
            },
            "documentation": {
              "id": 48518,
              "nodeType": "StructuredDocumentation",
              "src": "12027:368:86",
              "text": "@notice The ```batchAddTransaction``` function is a batch version of ```addTransaction()```\n @param teamSafes Address of each allowlisted Gnosis Safe\n @param args TxHashArgs of each Gnosis Safe transaction\n @param signatures EOA signatures for each Gnosis Safe transaction\n @return optimisticProposalIds Array of optimistic Proposal IDs"
            },
            "functionSelector": "072c8e0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchAddTransaction",
            "nameLocation": "12409:19:86",
            "parameters": {
              "id": 48529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48521,
                  "mutability": "mutable",
                  "name": "teamSafes",
                  "nameLocation": "12457:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48591,
                  "src": "12438:28:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48519,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12438:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48520,
                    "nodeType": "ArrayTypeName",
                    "src": "12438:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48525,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "12517:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48591,
                  "src": "12476:45:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TxHashArgs_$54660_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IFraxGovernorOmega.TxHashArgs[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48523,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 48522,
                        "name": "IFraxGovernorOmega.TxHashArgs",
                        "nameLocations": [
                          "12476:18:86",
                          "12495:10:86"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54660,
                        "src": "12476:29:86"
                      },
                      "referencedDeclaration": 54660,
                      "src": "12476:29:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TxHashArgs_$54660_storage_ptr",
                        "typeString": "struct IFraxGovernorOmega.TxHashArgs"
                      }
                    },
                    "id": 48524,
                    "nodeType": "ArrayTypeName",
                    "src": "12476:31:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TxHashArgs_$54660_storage_$dyn_storage_ptr",
                      "typeString": "struct IFraxGovernorOmega.TxHashArgs[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48528,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "12548:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48591,
                  "src": "12531:27:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48526,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "12531:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 48527,
                    "nodeType": "ArrayTypeName",
                    "src": "12531:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12428:136:86"
            },
            "returnParameters": {
              "id": 48533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48532,
                  "mutability": "mutable",
                  "name": "optimisticProposalIds",
                  "nameLocation": "12600:21:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48591,
                  "src": "12583:38:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48530,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12583:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48531,
                    "nodeType": "ArrayTypeName",
                    "src": "12583:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12582:40:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48708,
            "nodeType": "FunctionDefinition",
            "src": "13434:1519:86",
            "nodes": [],
            "body": {
              "id": 48707,
              "nodeType": "Block",
              "src": "13503:1450:86",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48600,
                      "mutability": "mutable",
                      "name": "originalTxHash",
                      "nameLocation": "13521:14:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "13513:22:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48599,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13513:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48606,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 48601,
                        "name": "$gnosisSafeToNonceToTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48071,
                        "src": "13538:26:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                          "typeString": "mapping(address => mapping(uint256 => bytes32))"
                        }
                      },
                      "id": 48603,
                      "indexExpression": {
                        "id": 48602,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48594,
                        "src": "13565:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13538:36:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 48605,
                    "indexExpression": {
                      "id": 48604,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48596,
                      "src": "13575:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13538:43:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13513:68:86"
                },
                {
                  "assignments": [
                    48611,
                    48614,
                    48617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48611,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "13610:7:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "13593:24:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13593:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48610,
                        "nodeType": "ArrayTypeName",
                        "src": "13593:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48614,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "13636:6:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "13619:23:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48612,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13619:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48613,
                        "nodeType": "ArrayTypeName",
                        "src": "13619:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48617,
                      "mutability": "mutable",
                      "name": "calldatas",
                      "nameLocation": "13659:9:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "13644:24:86",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48615,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13644:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 48616,
                        "nodeType": "ArrayTypeName",
                        "src": "13644:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48619,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48594,
                        "src": "13716:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48620,
                        "name": "originalTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48600,
                        "src": "13746:14:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48618,
                      "name": "_optimisticProposalArgs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48276,
                      "src": "13672:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32) pure returns (address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "id": 48621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "13710:4:86",
                      "13738:6:86"
                    ],
                    "names": [
                      "safe",
                      "txHash"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13672:99:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13592:179:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProposalState_$34212",
                      "typeString": "enum IGovernor.ProposalState"
                    },
                    "id": 48638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48625,
                              "name": "targets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48611,
                              "src": "13865:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 48626,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48614,
                              "src": "13902:6:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 48627,
                              "name": "calldatas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48617,
                              "src": "13941:9:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 48631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14005:2:86",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "id": 48630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13999:5:86",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 48629,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13999:5:86",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 48632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13999:9:86",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 48628,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "13989:9:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 48633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13989:20:86",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 48624,
                            "name": "hashProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              51429
                            ],
                            "referencedDeclaration": 51429,
                            "src": "13821:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                              "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"
                            }
                          },
                          "id": 48634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "13856:7:86",
                            "13894:6:86",
                            "13930:9:86",
                            "13972:15:86"
                          ],
                          "names": [
                            "targets",
                            "values",
                            "calldatas",
                            "descriptionHash"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "13821:207:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 48623,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          49422
                        ],
                        "referencedDeclaration": 49422,
                        "src": "13798:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$34212_$",
                          "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                        }
                      },
                      "id": 48635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13798:244:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$34212",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 48636,
                        "name": "ProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34212,
                        "src": "14046:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                          "typeString": "type(enum IGovernor.ProposalState)"
                        }
                      },
                      "id": 48637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14060:8:86",
                      "memberName": "Defeated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34207,
                      "src": "14046:22:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$34212",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "src": "13798:270:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48645,
                  "nodeType": "IfStatement",
                  "src": "13781:369:86",
                  "trueBody": {
                    "id": 48644,
                    "nodeType": "Block",
                    "src": "14079:71:86",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48639,
                              "name": "IFraxGovernorOmega",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55258,
                              "src": "14100:18:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                "typeString": "type(contract IFraxGovernorOmega)"
                              }
                            },
                            "id": 48641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14119:18:86",
                            "memberName": "WrongProposalState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55255,
                            "src": "14100:37:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14100:39:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48643,
                        "nodeType": "RevertStatement",
                        "src": "14093:46:86"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    48648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48648,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "14166:4:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "14160:10:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafe_$55334",
                        "typeString": "contract ISafe"
                      },
                      "typeName": {
                        "id": 48647,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48646,
                          "name": "ISafe",
                          "nameLocations": [
                            "14160:5:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55334,
                          "src": "14160:5:86"
                        },
                        "referencedDeclaration": 55334,
                        "src": "14160:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48652,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48650,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48594,
                        "src": "14179:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48649,
                      "name": "ISafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55334,
                      "src": "14173:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISafe_$55334_$",
                        "typeString": "type(contract ISafe)"
                      }
                    },
                    "id": 48651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14173:15:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafe_$55334",
                      "typeString": "contract ISafe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14160:28:86"
                },
                {
                  "assignments": [
                    48654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48654,
                      "mutability": "mutable",
                      "name": "rejectTxHash",
                      "nameLocation": "14206:12:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48707,
                      "src": "14198:20:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48653,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14198:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48682,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48656,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48648,
                        "src": "14265:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48659,
                            "name": "teamSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48594,
                            "src": "14341:8:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 48660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14374:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "",
                            "id": 48661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14399:2:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 48662,
                                "name": "Enum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1998,
                                "src": "14430:4:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enum_$1998_$",
                                  "typeString": "type(contract Enum)"
                                }
                              },
                              "id": 48663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14435:9:86",
                              "memberName": "Operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "14430:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Operation_$1997_$",
                                "typeString": "type(enum Enum.Operation)"
                              }
                            },
                            "id": 48664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14445:4:86",
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1995,
                            "src": "14430:19:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$1997",
                              "typeString": "enum Enum.Operation"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 48665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14478:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 48666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14506:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 48667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14535:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14572:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14564:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14564:7:86",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14564:10:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 48676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14624:1:86",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 48675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14616:7:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 48674,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14616:7:86",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 48677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14616:10:86",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14608:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 48672,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14608:8:86",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14608:19:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 48679,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48596,
                            "src": "14653:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$1997",
                              "typeString": "enum Enum.Operation"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 48657,
                            "name": "IFraxGovernorOmega",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55258,
                            "src": "14289:18:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                              "typeString": "type(contract IFraxGovernorOmega)"
                            }
                          },
                          "id": 48658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14308:10:86",
                          "memberName": "TxHashArgs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54660,
                          "src": "14289:29:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TxHashArgs_$54660_storage_ptr_$",
                            "typeString": "type(struct IFraxGovernorOmega.TxHashArgs storage pointer)"
                          }
                        },
                        "id": 48680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "14337:2:86",
                          "14367:5:86",
                          "14393:4:86",
                          "14419:9:86",
                          "14467:9:86",
                          "14497:7:86",
                          "14525:8:86",
                          "14554:8:86",
                          "14592:14:86",
                          "14645:6:86"
                        ],
                        "names": [
                          "to",
                          "value",
                          "data",
                          "operation",
                          "safeTxGas",
                          "baseGas",
                          "gasPrice",
                          "gasToken",
                          "refundReceiver",
                          "_nonce"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "14289:384:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        },
                        {
                          "typeIdentifier": "t_struct$_TxHashArgs_$54660_memory_ptr",
                          "typeString": "struct IFraxGovernorOmega.TxHashArgs memory"
                        }
                      ],
                      "id": 48655,
                      "name": "_safeGetTransactionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48315,
                      "src": "14221:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ISafe_$55334_$_t_struct$_TxHashArgs_$54660_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (contract ISafe,struct IFraxGovernorOmega.TxHashArgs memory) view returns (bytes32)"
                      }
                    },
                    "id": 48681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "14259:4:86",
                      "14283:4:86"
                    ],
                    "names": [
                      "safe",
                      "args"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14221:463:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14198:486:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48687,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14737:4:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxGovernorOmega_$49423",
                                "typeString": "contract FraxGovernorOmega"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxGovernorOmega_$49423",
                                "typeString": "contract FraxGovernorOmega"
                              }
                            ],
                            "id": 48686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14729:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48685,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14729:7:86",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14729:13:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 48689,
                          "name": "rejectTxHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48654,
                          "src": "14752:12:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 48683,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48648,
                          "src": "14699:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$55334",
                            "typeString": "contract ISafe"
                          }
                        },
                        "id": 48684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14704:14:86",
                        "memberName": "approvedHashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55271,
                        "src": "14699:19:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (address,bytes32) external returns (uint256)"
                        }
                      },
                      "id": 48690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "14721:6:86",
                        "14744:6:86"
                      ],
                      "names": [
                        "signer",
                        "txHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "14699:68:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 48691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14771:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14699:73:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48700,
                  "nodeType": "IfStatement",
                  "src": "14695:170:86",
                  "trueBody": {
                    "id": 48699,
                    "nodeType": "Block",
                    "src": "14774:91:86",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 48696,
                              "name": "rejectTxHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48654,
                              "src": "14841:12:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 48693,
                              "name": "IFraxGovernorOmega",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55258,
                              "src": "14795:18:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                "typeString": "type(contract IFraxGovernorOmega)"
                              }
                            },
                            "id": 48695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14814:26:86",
                            "memberName": "TransactionAlreadyApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55251,
                            "src": "14795:45:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 48697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14795:59:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48698,
                        "nodeType": "RevertStatement",
                        "src": "14788:66:86"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48704,
                        "name": "rejectTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48654,
                        "src": "14933:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 48701,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48648,
                        "src": "14916:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14921:11:86",
                      "memberName": "approveHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55282,
                      "src": "14916:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 48705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14916:30:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48706,
                  "nodeType": "ExpressionStatement",
                  "src": "14916:30:86"
                }
              ]
            },
            "documentation": {
              "id": 48592,
              "nodeType": "StructuredDocumentation",
              "src": "13107:322:86",
              "text": "@notice The ```rejectTransaction``` function is called when an optimistic proposal is Defeated. It calls ```safe.approveHash()``` for a 0 eth transfer with the provided ```nonce```\n @param teamSafe Address of allowlisted Gnosis Safe\n @param nonce Gnosis Safe nonce corresponding to an optimistic proposal"
            },
            "functionSelector": "5c085589",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectTransaction",
            "nameLocation": "13443:17:86",
            "parameters": {
              "id": 48597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48594,
                  "mutability": "mutable",
                  "name": "teamSafe",
                  "nameLocation": "13469:8:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48708,
                  "src": "13461:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13461:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48596,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "13487:5:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48708,
                  "src": "13479:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13479:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13460:33:86"
            },
            "returnParameters": {
              "id": 48598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13503:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48864,
            "nodeType": "FunctionDefinition",
            "src": "15696:2243:86",
            "nodes": [],
            "body": {
              "id": 48863,
              "nodeType": "Block",
              "src": "15776:2163:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48717,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48711,
                        "src": "15804:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48716,
                      "name": "_requireAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48172,
                      "src": "15786:17:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 48718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15786:27:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48719,
                  "nodeType": "ExpressionStatement",
                  "src": "15786:27:86"
                },
                {
                  "assignments": [
                    48722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48722,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "15829:4:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "15823:10:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafe_$55334",
                        "typeString": "contract ISafe"
                      },
                      "typeName": {
                        "id": 48721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48720,
                          "name": "ISafe",
                          "nameLocations": [
                            "15823:5:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55334,
                          "src": "15823:5:86"
                        },
                        "referencedDeclaration": 55334,
                        "src": "15823:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48726,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48724,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48711,
                        "src": "15842:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48723,
                      "name": "ISafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55334,
                      "src": "15836:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISafe_$55334_$",
                        "typeString": "type(contract ISafe)"
                      }
                    },
                    "id": 48725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15836:15:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafe_$55334",
                      "typeString": "contract ISafe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15823:28:86"
                },
                {
                  "assignments": [
                    48728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48728,
                      "mutability": "mutable",
                      "name": "requiredSignatures",
                      "nameLocation": "16052:18:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "16044:26:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16044:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48734,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48729,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48722,
                          "src": "16073:4:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$55334",
                            "typeString": "contract ISafe"
                          }
                        },
                        "id": 48730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16078:12:86",
                        "memberName": "getThreshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55294,
                        "src": "16073:17:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 48731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16073:19:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 48732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16095:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "16073:23:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16044:52:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48736,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48713,
                        "src": "16143:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 48737,
                        "name": "requiredSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48728,
                        "src": "16175:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48735,
                      "name": "_requireEoaSignatures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48210,
                      "src": "16107:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,uint256) pure"
                      }
                    },
                    "id": 48738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "16131:10:86",
                      "16155:18:86"
                    ],
                    "names": [
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16107:89:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48739,
                  "nodeType": "ExpressionStatement",
                  "src": "16107:89:86"
                },
                {
                  "assignments": [
                    48741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48741,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "16215:5:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "16207:13:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16207:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48745,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48742,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48722,
                        "src": "16223:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16228:5:86",
                      "memberName": "nonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55276,
                      "src": "16223:10:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 48744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16223:12:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16207:28:86"
                },
                {
                  "assignments": [
                    48747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48747,
                      "mutability": "mutable",
                      "name": "rejectTxHash",
                      "nameLocation": "16254:12:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "16246:20:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48746,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16246:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48750,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48711,
                        "src": "16311:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16340:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 48752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16361:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 48753,
                            "name": "Enum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "16388:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Enum_$1998_$",
                              "typeString": "type(contract Enum)"
                            }
                          },
                          "id": 48754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16393:9:86",
                          "memberName": "Operation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1997,
                          "src": "16388:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Operation_$1997_$",
                            "typeString": "type(enum Enum.Operation)"
                          }
                        },
                        "id": 48755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "16403:4:86",
                        "memberName": "Call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1995,
                        "src": "16388:19:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$1997",
                          "typeString": "enum Enum.Operation"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16432:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 48757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16456:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 48758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16481:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16514:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16506:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16506:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16506:10:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16562:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16554:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48765,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16554:7:86",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16554:10:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16546:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 48763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16546:8:86",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16546:19:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 48770,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48741,
                        "src": "16587:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_enum$_Operation_$1997",
                          "typeString": "enum Enum.Operation"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48748,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48722,
                        "src": "16269:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16274:18:86",
                      "memberName": "getTransactionHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55321,
                      "src": "16269:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$1997_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,bytes memory,enum Enum.Operation,uint256,uint256,uint256,address,address,uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 48771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "16307:2:86",
                      "16333:5:86",
                      "16355:4:86",
                      "16377:9:86",
                      "16421:9:86",
                      "16447:7:86",
                      "16471:8:86",
                      "16496:8:86",
                      "16530:14:86",
                      "16579:6:86"
                    ],
                    "names": [
                      "to",
                      "value",
                      "data",
                      "operation",
                      "safeTxGas",
                      "baseGas",
                      "gasPrice",
                      "gasToken",
                      "refundReceiver",
                      "_nonce"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16269:334:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16246:357:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48776,
                        "name": "rejectTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48747,
                        "src": "16732:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16764:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 48778,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48713,
                        "src": "16792:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 48779,
                        "name": "requiredSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48728,
                        "src": "16836:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48773,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48722,
                        "src": "16686:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16691:16:86",
                      "memberName": "checkNSignatures",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55333,
                      "src": "16686:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,bytes memory,uint256) view external"
                      }
                    },
                    "id": 48780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "16722:8:86",
                      "16758:4:86",
                      "16780:10:86",
                      "16816:18:86"
                    ],
                    "names": [
                      "dataHash",
                      "data",
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16686:179:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48781,
                  "nodeType": "ExpressionStatement",
                  "src": "16686:179:86"
                },
                {
                  "assignments": [
                    48783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48783,
                      "mutability": "mutable",
                      "name": "originalTxHash",
                      "nameLocation": "16884:14:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "16876:22:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48782,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16876:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48789,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 48784,
                        "name": "$gnosisSafeToNonceToTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48071,
                        "src": "16901:26:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                          "typeString": "mapping(address => mapping(uint256 => bytes32))"
                        }
                      },
                      "id": 48786,
                      "indexExpression": {
                        "id": 48785,
                        "name": "teamSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48711,
                        "src": "16928:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16901:36:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 48788,
                    "indexExpression": {
                      "id": 48787,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48741,
                      "src": "16938:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16901:43:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16876:68:86"
                },
                {
                  "assignments": [
                    48791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48791,
                      "mutability": "mutable",
                      "name": "abortedProposalId",
                      "nameLocation": "16962:17:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 48863,
                      "src": "16954:25:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48790,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16954:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48792,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16954:25:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 48795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48793,
                      "name": "originalTxHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48783,
                      "src": "17068:14:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17086:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17068:19:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48856,
                  "nodeType": "IfStatement",
                  "src": "17064:787:86",
                  "trueBody": {
                    "id": 48855,
                    "nodeType": "Block",
                    "src": "17089:762:86",
                    "statements": [
                      {
                        "assignments": [
                          48800,
                          48803,
                          48806
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 48800,
                            "mutability": "mutable",
                            "name": "targets",
                            "nameLocation": "17121:7:86",
                            "nodeType": "VariableDeclaration",
                            "scope": 48855,
                            "src": "17104:24:86",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 48798,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17104:7:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 48799,
                              "nodeType": "ArrayTypeName",
                              "src": "17104:9:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 48803,
                            "mutability": "mutable",
                            "name": "values",
                            "nameLocation": "17147:6:86",
                            "nodeType": "VariableDeclaration",
                            "scope": 48855,
                            "src": "17130:23:86",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 48801,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17130:7:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 48802,
                              "nodeType": "ArrayTypeName",
                              "src": "17130:9:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 48806,
                            "mutability": "mutable",
                            "name": "calldatas",
                            "nameLocation": "17170:9:86",
                            "nodeType": "VariableDeclaration",
                            "scope": 48855,
                            "src": "17155:24:86",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 48804,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "17155:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "id": 48805,
                              "nodeType": "ArrayTypeName",
                              "src": "17155:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                                "typeString": "bytes[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 48811,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 48808,
                              "name": "teamSafe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48711,
                              "src": "17231:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 48809,
                              "name": "originalTxHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48783,
                              "src": "17265:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 48807,
                            "name": "_optimisticProposalArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48276,
                            "src": "17183:23:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (address,bytes32) pure returns (address[] memory,uint256[] memory,bytes memory[] memory)"
                            }
                          },
                          "id": 48810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "17225:4:86",
                            "17257:6:86"
                          ],
                          "names": [
                            "safe",
                            "txHash"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "17183:111:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17103:191:86"
                      },
                      {
                        "expression": {
                          "id": 48824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 48812,
                            "name": "abortedProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48791,
                            "src": "17309:17:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 48814,
                                "name": "targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48800,
                                "src": "17369:7:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              {
                                "id": 48815,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48803,
                                "src": "17402:6:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 48816,
                                "name": "calldatas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48806,
                                "src": "17437:9:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "",
                                        "id": 48820,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17497:2:86",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "id": 48819,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17491:5:86",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 48818,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17491:5:86",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 48821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17491:9:86",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 48817,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "17481:9:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 48822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17481:20:86",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 48813,
                              "name": "hashProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                51429
                              ],
                              "referencedDeclaration": 51429,
                              "src": "17329:12:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                                "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"
                              }
                            },
                            "id": 48823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "17360:7:86",
                              "17394:6:86",
                              "17426:9:86",
                              "17464:15:86"
                            ],
                            "names": [
                              "targets",
                              "values",
                              "calldatas",
                              "descriptionHash"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "17329:187:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17309:207:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48825,
                        "nodeType": "ExpressionStatement",
                        "src": "17309:207:86"
                      },
                      {
                        "assignments": [
                          48828
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 48828,
                            "mutability": "mutable",
                            "name": "proposalState",
                            "nameLocation": "17544:13:86",
                            "nodeType": "VariableDeclaration",
                            "scope": 48855,
                            "src": "17530:27:86",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$34212",
                              "typeString": "enum IGovernor.ProposalState"
                            },
                            "typeName": {
                              "id": 48827,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 48826,
                                "name": "ProposalState",
                                "nameLocations": [
                                  "17530:13:86"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 34212,
                                "src": "17530:13:86"
                              },
                              "referencedDeclaration": 34212,
                              "src": "17530:13:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$34212",
                                "typeString": "enum IGovernor.ProposalState"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 48832,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 48830,
                              "name": "abortedProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48791,
                              "src": "17566:17:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 48829,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              49422
                            ],
                            "referencedDeclaration": 49422,
                            "src": "17560:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$34212_$",
                              "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 48831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17560:24:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17530:54:86"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          },
                          "id": 48836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48833,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48828,
                            "src": "17603:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$34212",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 48834,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34212,
                              "src": "17620:13:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                                "typeString": "type(enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 48835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17634:8:86",
                            "memberName": "Canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34206,
                            "src": "17620:22:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$34212",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          },
                          "src": "17603:39:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48843,
                        "nodeType": "IfStatement",
                        "src": "17599:129:86",
                        "trueBody": {
                          "id": 48842,
                          "nodeType": "Block",
                          "src": "17644:84:86",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 48837,
                                    "name": "IFraxGovernorOmega",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55258,
                                    "src": "17669:18:86",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                      "typeString": "type(contract IFraxGovernorOmega)"
                                    }
                                  },
                                  "id": 48839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17688:23:86",
                                  "memberName": "ProposalAlreadyCanceled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55237,
                                  "src": "17669:42:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 48840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17669:44:86",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 48841,
                              "nodeType": "RevertStatement",
                              "src": "17662:51:86"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 48849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 48844,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51215,
                                "src": "17742:9:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalCore_$51207_storage_$",
                                  "typeString": "mapping(uint256 => struct Governor.ProposalCore storage ref)"
                                }
                              },
                              "id": 48846,
                              "indexExpression": {
                                "id": 48845,
                                "name": "abortedProposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48791,
                                "src": "17752:17:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17742:28:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalCore_$51207_storage",
                                "typeString": "struct Governor.ProposalCore storage ref"
                              }
                            },
                            "id": 48847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17771:8:86",
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51206,
                            "src": "17742:37:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 48848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17782:4:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "17742:44:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48850,
                        "nodeType": "ExpressionStatement",
                        "src": "17742:44:86"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 48852,
                              "name": "abortedProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48791,
                              "src": "17822:17:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 48851,
                            "name": "ProposalCanceled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34242,
                            "src": "17805:16:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 48853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17805:35:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48854,
                        "nodeType": "EmitStatement",
                        "src": "17800:40:86"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48860,
                        "name": "rejectTxHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48747,
                        "src": "17919:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 48857,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48722,
                        "src": "17902:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 48859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17907:11:86",
                      "memberName": "approveHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55282,
                      "src": "17902:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 48861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17902:30:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48862,
                  "nodeType": "ExpressionStatement",
                  "src": "17902:30:86"
                }
              ]
            },
            "documentation": {
              "id": 48709,
              "nodeType": "StructuredDocumentation",
              "src": "14959:732:86",
              "text": "@notice The ```abortTransaction``` function is called when the Frax Team no longer wants to execute a transaction they created in the Gnosis Safe UI\n @notice This can be before or after the transaction is added using ```addTransaction()```. It signs a 0 eth transfer for the current nonce\n @notice as long as the 0 eth transfer has the configured required amount of EOA signatures.\n @dev Only works when the transaction to abort is the first in the Gnosis Safe queue (current nonce)\n @dev Only way to cancel an optimistic proposal\n @param teamSafe Address of allowlisted Gnosis Safe\n @param signatures EOA signatures for a 0 ether transfer Gnosis Safe transaction with the current nonce"
            },
            "functionSelector": "b12c3277",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abortTransaction",
            "nameLocation": "15705:16:86",
            "parameters": {
              "id": 48714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48711,
                  "mutability": "mutable",
                  "name": "teamSafe",
                  "nameLocation": "15730:8:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48864,
                  "src": "15722:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15722:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48713,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "15755:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48864,
                  "src": "15740:25:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48712,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15740:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15721:45:86"
            },
            "returnParameters": {
              "id": 48715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15776:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48879,
            "nodeType": "FunctionDefinition",
            "src": "18192:154:86",
            "nodes": [],
            "body": {
              "id": 48878,
              "nodeType": "Block",
              "src": "18256:90:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48871,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "18266:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18266:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48873,
                  "nodeType": "ExpressionStatement",
                  "src": "18266:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48875,
                        "name": "newVotingDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48867,
                        "src": "18324:14:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48874,
                      "name": "_setVotingDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53402,
                      "src": "18308:15:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18308:31:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48877,
                  "nodeType": "ExpressionStatement",
                  "src": "18308:31:86"
                }
              ]
            },
            "baseFunctions": [
              53360
            ],
            "documentation": {
              "id": 48865,
              "nodeType": "StructuredDocumentation",
              "src": "17945:242:86",
              "text": "@notice The ```setVotingDelay``` function is called by governance to change the amount of time before the voting snapshot\n @dev Only callable by FraxGovernorAlpha governance\n @param newVotingDelay New voting delay in seconds"
            },
            "functionSelector": "70b0f660",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVotingDelay",
            "nameLocation": "18201:14:86",
            "overrides": {
              "id": 48869,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18247:8:86"
            },
            "parameters": {
              "id": 48868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48867,
                  "mutability": "mutable",
                  "name": "newVotingDelay",
                  "nameLocation": "18224:14:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48879,
                  "src": "18216:22:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18216:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18215:24:86"
            },
            "returnParameters": {
              "id": 48870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18256:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48893,
            "nodeType": "FunctionDefinition",
            "src": "18612:171:86",
            "nodes": [],
            "body": {
              "id": 48892,
              "nodeType": "Block",
              "src": "18681:102:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48885,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "18691:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18691:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48887,
                  "nodeType": "ExpressionStatement",
                  "src": "18691:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48889,
                        "name": "newVotingDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48882,
                        "src": "18755:20:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48888,
                      "name": "_setVotingDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47577,
                      "src": "18733:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18733:43:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48891,
                  "nodeType": "ExpressionStatement",
                  "src": "18733:43:86"
                }
              ]
            },
            "documentation": {
              "id": 48880,
              "nodeType": "StructuredDocumentation",
              "src": "18352:255:86",
              "text": "@notice The ```setVotingDelayBlocks``` function is called by governance to change the amount of blocks before the voting snapshot\n @dev Only callable by FraxGovernorAlpha governance\n @param newVotingDelayBlocks New voting delay in blocks"
            },
            "functionSelector": "64cda3d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVotingDelayBlocks",
            "nameLocation": "18621:20:86",
            "parameters": {
              "id": 48883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48882,
                  "mutability": "mutable",
                  "name": "newVotingDelayBlocks",
                  "nameLocation": "18650:20:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48893,
                  "src": "18642:28:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18642:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18641:30:86"
            },
            "returnParameters": {
              "id": 48884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18681:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48908,
            "nodeType": "FunctionDefinition",
            "src": "19039:158:86",
            "nodes": [],
            "body": {
              "id": 48907,
              "nodeType": "Block",
              "src": "19105:92:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48900,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "19115:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19115:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48902,
                  "nodeType": "ExpressionStatement",
                  "src": "19115:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48904,
                        "name": "newVotingPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48896,
                        "src": "19174:15:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48903,
                      "name": "_setVotingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53425,
                      "src": "19157:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19157:33:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48906,
                  "nodeType": "ExpressionStatement",
                  "src": "19157:33:86"
                }
              ]
            },
            "baseFunctions": [
              53373
            ],
            "documentation": {
              "id": 48894,
              "nodeType": "StructuredDocumentation",
              "src": "18789:245:86",
              "text": "@notice The ```setVotingPeriod``` function is called by governance to change the amount of time a proposal can be voted on\n @dev Only callable by FraxGovernorAlpha governance\n @param newVotingPeriod New voting period in seconds"
            },
            "functionSelector": "ea0217cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVotingPeriod",
            "nameLocation": "19048:15:86",
            "overrides": {
              "id": 48898,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19096:8:86"
            },
            "parameters": {
              "id": 48897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48896,
                  "mutability": "mutable",
                  "name": "newVotingPeriod",
                  "nameLocation": "19072:15:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48908,
                  "src": "19064:23:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19064:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19063:25:86"
            },
            "returnParameters": {
              "id": 48899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19105:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48923,
            "nodeType": "FunctionDefinition",
            "src": "19572:178:86",
            "nodes": [],
            "body": {
              "id": 48922,
              "nodeType": "Block",
              "src": "19648:102:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48915,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "19658:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19658:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48917,
                  "nodeType": "ExpressionStatement",
                  "src": "19658:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48919,
                        "name": "newProposalThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48911,
                        "src": "19722:20:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48918,
                      "name": "_setProposalThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53441,
                      "src": "19700:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19700:43:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48921,
                  "nodeType": "ExpressionStatement",
                  "src": "19700:43:86"
                }
              ]
            },
            "baseFunctions": [
              53386
            ],
            "documentation": {
              "id": 48909,
              "nodeType": "StructuredDocumentation",
              "src": "19203:364:86",
              "text": "@notice The ```setProposalThreshold``` function is called by governance to change the amount of veFXS a proposer needs to call propose()\n @notice proposalThreshold calculation includes all weight delegated to the proposer\n @dev Only callable by FraxGovernorAlpha governance\n @param newProposalThreshold New voting period in amount of veFXS"
            },
            "functionSelector": "ece40cc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProposalThreshold",
            "nameLocation": "19581:20:86",
            "overrides": {
              "id": 48913,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19639:8:86"
            },
            "parameters": {
              "id": 48912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48911,
                  "mutability": "mutable",
                  "name": "newProposalThreshold",
                  "nameLocation": "19610:20:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48923,
                  "src": "19602:28:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19602:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19601:30:86"
            },
            "returnParameters": {
              "id": 48914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19648:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48938,
            "nodeType": "FunctionDefinition",
            "src": "20017:178:86",
            "nodes": [],
            "body": {
              "id": 48937,
              "nodeType": "Block",
              "src": "20094:101:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48930,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "20104:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20104:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48932,
                  "nodeType": "ExpressionStatement",
                  "src": "20104:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48934,
                        "name": "newQuorumNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48926,
                        "src": "20169:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48933,
                      "name": "_updateQuorumNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54095,
                      "src": "20146:22:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20146:42:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48936,
                  "nodeType": "ExpressionStatement",
                  "src": "20146:42:86"
                }
              ]
            },
            "baseFunctions": [
              54056
            ],
            "documentation": {
              "id": 48924,
              "nodeType": "StructuredDocumentation",
              "src": "19756:256:86",
              "text": "@notice The ```updateQuorumNumerator``` function is called by governance to change the numerator / 100 needed for quorum\n @dev Only callable by FraxGovernorAlpha governance\n @param newQuorumNumerator Number expressed as x/100 (percentage)"
            },
            "functionSelector": "06f3f9e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateQuorumNumerator",
            "nameLocation": "20026:21:86",
            "overrides": {
              "id": 48928,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20085:8:86"
            },
            "parameters": {
              "id": 48927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48926,
                  "mutability": "mutable",
                  "name": "newQuorumNumerator",
                  "nameLocation": "20056:18:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48938,
                  "src": "20048:26:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20048:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20047:28:86"
            },
            "returnParameters": {
              "id": 48929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20094:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48952,
            "nodeType": "FunctionDefinition",
            "src": "20491:181:86",
            "nodes": [],
            "body": {
              "id": 48951,
              "nodeType": "Block",
              "src": "20565:107:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48944,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "20575:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20575:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48946,
                  "nodeType": "ExpressionStatement",
                  "src": "20575:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48948,
                        "name": "veFxsVotingDelegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48941,
                        "src": "20643:21:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48947,
                      "name": "_setVeFxsVotingDelegation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47602,
                      "src": "20617:25:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20617:48:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48950,
                  "nodeType": "ExpressionStatement",
                  "src": "20617:48:86"
                }
              ]
            },
            "documentation": {
              "id": 48939,
              "nodeType": "StructuredDocumentation",
              "src": "20201:285:86",
              "text": "@notice The ```setVeFxsVotingDelegation``` function is called by governance to change the voting weight ```IERC5805``` contract\n @dev Only callable by FraxGovernorAlpha governance\n @param veFxsVotingDelegation New ```IERC5805``` veFxsVotingDelegation contract address"
            },
            "functionSelector": "aa75a3c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVeFxsVotingDelegation",
            "nameLocation": "20500:24:86",
            "parameters": {
              "id": 48942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48941,
                  "mutability": "mutable",
                  "name": "veFxsVotingDelegation",
                  "nameLocation": "20533:21:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48952,
                  "src": "20525:29:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20525:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20524:31:86"
            },
            "returnParameters": {
              "id": 48943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20565:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48966,
            "nodeType": "FunctionDefinition",
            "src": "20941:193:86",
            "nodes": [],
            "body": {
              "id": 48965,
              "nodeType": "Block",
              "src": "21021:113:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48958,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "21031:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 48959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21031:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48960,
                  "nodeType": "ExpressionStatement",
                  "src": "21031:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48962,
                        "name": "newShortCircuitNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48955,
                        "src": "21102:24:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48961,
                      "name": "_updateShortCircuitNumerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47747,
                      "src": "21073:28:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21073:54:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48964,
                  "nodeType": "ExpressionStatement",
                  "src": "21073:54:86"
                }
              ]
            },
            "documentation": {
              "id": 48953,
              "nodeType": "StructuredDocumentation",
              "src": "20678:258:86",
              "text": "@notice The ```updateShortCircuitNumerator``` function is called by governance to change the short circuit numerator\n @dev Only callable by FraxGovernorAlpha governance\n @param newShortCircuitNumerator Number expressed as x/100 (percentage)"
            },
            "functionSelector": "43ec3e09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateShortCircuitNumerator",
            "nameLocation": "20950:27:86",
            "parameters": {
              "id": 48956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48955,
                  "mutability": "mutable",
                  "name": "newShortCircuitNumerator",
                  "nameLocation": "20986:24:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 48966,
                  "src": "20978:32:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20978:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20977:34:86"
            },
            "returnParameters": {
              "id": 48957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21021:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49016,
            "nodeType": "FunctionDefinition",
            "src": "21140:329:86",
            "nodes": [],
            "body": {
              "id": 49015,
              "nodeType": "Block",
              "src": "21203:266:86",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 49013,
                    "nodeType": "Block",
                    "src": "21256:207:86",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 48983,
                              "name": "$safeAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48059,
                              "src": "21274:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 48987,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 48984,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48969,
                                "src": "21289:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 48986,
                              "indexExpression": {
                                "id": 48985,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48973,
                                "src": "21295:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21289:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21274:24:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 48988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21302:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21274:29:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48998,
                        "nodeType": "IfStatement",
                        "src": "21270:93:86",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 48993,
                                  "name": "safes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48969,
                                  "src": "21354:5:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 48995,
                                "indexExpression": {
                                  "id": 48994,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48973,
                                  "src": "21360:1:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21354:8:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 48990,
                                "name": "IFraxGovernorOmega",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55258,
                                "src": "21312:18:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                  "typeString": "type(contract IFraxGovernorOmega)"
                                }
                              },
                              "id": 48992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21331:22:86",
                              "memberName": "SafeAlreadyOnAllowlist",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55241,
                              "src": "21312:41:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 48996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21312:51:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 48997,
                          "nodeType": "RevertStatement",
                          "src": "21305:58:86"
                        }
                      },
                      {
                        "expression": {
                          "id": 49005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 48999,
                              "name": "$safeAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48059,
                              "src": "21377:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 49003,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 49000,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48969,
                                "src": "21392:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 49002,
                              "indexExpression": {
                                "id": 49001,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48973,
                                "src": "21398:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21392:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21377:24:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 49004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21404:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21377:28:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49006,
                        "nodeType": "ExpressionStatement",
                        "src": "21377:28:86"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 49008,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48969,
                                "src": "21443:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 49010,
                              "indexExpression": {
                                "id": 49009,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48973,
                                "src": "21449:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21443:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49007,
                            "name": "AddSafeToAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48076,
                            "src": "21424:18:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 49011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21424:28:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49012,
                        "nodeType": "EmitStatement",
                        "src": "21419:33:86"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48976,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48973,
                      "src": "21233:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48977,
                        "name": "safes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48969,
                        "src": "21237:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 48978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21243:6:86",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "21237:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21233:16:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49014,
                  "initializationExpression": {
                    "assignments": [
                      48973
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48973,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "21226:1:86",
                        "nodeType": "VariableDeclaration",
                        "scope": 49014,
                        "src": "21218:9:86",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21218:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48975,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21230:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21218:13:86"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "21251:3:86",
                      "subExpression": {
                        "id": 48980,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48973,
                        "src": "21253:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48982,
                    "nodeType": "ExpressionStatement",
                    "src": "21251:3:86"
                  },
                  "nodeType": "ForStatement",
                  "src": "21213:250:86"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addSafesToAllowlist",
            "nameLocation": "21149:20:86",
            "parameters": {
              "id": 48970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48969,
                  "mutability": "mutable",
                  "name": "safes",
                  "nameLocation": "21187:5:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49016,
                  "src": "21170:22:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48967,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21170:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48968,
                    "nodeType": "ArrayTypeName",
                    "src": "21170:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21169:24:86"
            },
            "returnParameters": {
              "id": 48971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21203:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49031,
            "nodeType": "FunctionDefinition",
            "src": "21903:150:86",
            "nodes": [],
            "body": {
              "id": 49030,
              "nodeType": "Block",
              "src": "21967:86:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49023,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "21977:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 49024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21977:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49025,
                  "nodeType": "ExpressionStatement",
                  "src": "21977:32:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49027,
                        "name": "safes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49020,
                        "src": "22040:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "id": 49026,
                      "name": "_addSafesToAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49016,
                      "src": "22019:20:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 49028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22019:27:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49029,
                  "nodeType": "ExpressionStatement",
                  "src": "22019:27:86"
                }
              ]
            },
            "documentation": {
              "id": 49017,
              "nodeType": "StructuredDocumentation",
              "src": "21475:423:86",
              "text": "@notice The ```addSafesToAllowlist``` function is called by governance to allowlist safes for addTransaction()\n @notice Safes are expected to be properly configured before calling this function\n @notice Proper configuration entails having: the FraxGuard set, FraxGovernorOmega set as a signer and FraxGovernorAlpha's TimelockController as a Module\n @param safes Array of safe addresses to allowlist"
            },
            "functionSelector": "82d304ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSafesToAllowlist",
            "nameLocation": "21912:19:86",
            "parameters": {
              "id": 49021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49020,
                  "mutability": "mutable",
                  "name": "safes",
                  "nameLocation": "21951:5:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49031,
                  "src": "21932:24:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49018,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21932:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49019,
                    "nodeType": "ArrayTypeName",
                    "src": "21932:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21931:26:86"
            },
            "returnParameters": {
              "id": 49022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21967:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49084,
            "nodeType": "FunctionDefinition",
            "src": "22312:382:86",
            "nodes": [],
            "body": {
              "id": 49083,
              "nodeType": "Block",
              "src": "22381:313:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49038,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "22391:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 49039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22391:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49040,
                  "nodeType": "ExpressionStatement",
                  "src": "22391:32:86"
                },
                {
                  "body": {
                    "id": 49081,
                    "nodeType": "Block",
                    "src": "22477:211:86",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 49052,
                              "name": "$safeAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48059,
                              "src": "22495:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 49056,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 49053,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49035,
                                "src": "22510:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 49055,
                              "indexExpression": {
                                "id": 49054,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49042,
                                "src": "22516:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22510:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22495:24:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22523:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22495:29:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49067,
                        "nodeType": "IfStatement",
                        "src": "22491:89:86",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 49062,
                                  "name": "safes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49035,
                                  "src": "22571:5:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 49064,
                                "indexExpression": {
                                  "id": 49063,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49042,
                                  "src": "22577:1:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22571:8:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 49059,
                                "name": "IFraxGovernorOmega",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55258,
                                "src": "22533:18:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                                  "typeString": "type(contract IFraxGovernorOmega)"
                                }
                              },
                              "id": 49061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22552:18:86",
                              "memberName": "SafeNotOnAllowlist",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55245,
                              "src": "22533:37:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 49065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22533:47:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 49066,
                          "nodeType": "RevertStatement",
                          "src": "22526:54:86"
                        }
                      },
                      {
                        "expression": {
                          "id": 49073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "22594:31:86",
                          "subExpression": {
                            "baseExpression": {
                              "id": 49068,
                              "name": "$safeAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48059,
                              "src": "22601:14:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 49072,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 49069,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49035,
                                "src": "22616:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 49071,
                              "indexExpression": {
                                "id": 49070,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49042,
                                "src": "22622:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22616:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "22601:24:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49074,
                        "nodeType": "ExpressionStatement",
                        "src": "22594:31:86"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 49076,
                                "name": "safes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49035,
                                "src": "22668:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 49078,
                              "indexExpression": {
                                "id": 49077,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49042,
                                "src": "22674:1:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22668:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49075,
                            "name": "RemoveSafeFromAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48081,
                            "src": "22644:23:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 49079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22644:33:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49080,
                        "nodeType": "EmitStatement",
                        "src": "22639:38:86"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49045,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49042,
                      "src": "22454:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 49046,
                        "name": "safes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49035,
                        "src": "22458:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 49047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22464:6:86",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "22458:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22454:16:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49082,
                  "initializationExpression": {
                    "assignments": [
                      49042
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 49042,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "22447:1:86",
                        "nodeType": "VariableDeclaration",
                        "scope": 49082,
                        "src": "22439:9:86",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22439:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 49044,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 49043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22451:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22439:13:86"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 49050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "22472:3:86",
                      "subExpression": {
                        "id": 49049,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49042,
                        "src": "22474:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 49051,
                    "nodeType": "ExpressionStatement",
                    "src": "22472:3:86"
                  },
                  "nodeType": "ForStatement",
                  "src": "22434:254:86"
                }
              ]
            },
            "documentation": {
              "id": 49032,
              "nodeType": "StructuredDocumentation",
              "src": "22059:248:86",
              "text": "@notice The ```removeSafesFromAllowlist``` function is called by governance to remove safes from the allowlist\n @dev See TestFraxGovernorUpgrade.t.sol for upgrade path\n @param safes Array of safe addresses to remove from allowlist"
            },
            "functionSelector": "8d124e47",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeSafesFromAllowlist",
            "nameLocation": "22321:24:86",
            "parameters": {
              "id": 49036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49035,
                  "mutability": "mutable",
                  "name": "safes",
                  "nameLocation": "22365:5:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49084,
                  "src": "22346:24:86",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49033,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "22346:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49034,
                    "nodeType": "ArrayTypeName",
                    "src": "22346:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22345:26:86"
            },
            "returnParameters": {
              "id": 49037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22381:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49123,
            "nodeType": "FunctionDefinition",
            "src": "23049:524:86",
            "nodes": [],
            "body": {
              "id": 49122,
              "nodeType": "Block",
              "src": "23130:443:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49092,
                      "name": "_requireOnlyTimelockController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48156,
                      "src": "23140:30:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 49093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23140:32:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49094,
                  "nodeType": "ExpressionStatement",
                  "src": "23140:32:86"
                },
                {
                  "assignments": [
                    49096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49096,
                      "mutability": "mutable",
                      "name": "safeVotingPeriod",
                      "nameLocation": "23191:16:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49122,
                      "src": "23183:24:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23183:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49100,
                  "initialValue": {
                    "baseExpression": {
                      "id": 49097,
                      "name": "$safeVotingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48064,
                      "src": "23210:17:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 49099,
                    "indexExpression": {
                      "id": 49098,
                      "name": "safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49087,
                      "src": "23228:4:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23210:23:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23183:50:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49101,
                      "name": "safeVotingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49096,
                      "src": "23247:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 49102,
                      "name": "newSafeVotingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49089,
                      "src": "23267:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23247:39:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49109,
                  "nodeType": "IfStatement",
                  "src": "23243:93:86",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 49104,
                          "name": "IFraxGovernorOmega",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55258,
                          "src": "23295:18:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFraxGovernorOmega_$55258_$",
                            "typeString": "type(contract IFraxGovernorOmega)"
                          }
                        },
                        "id": 49106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23314:20:86",
                        "memberName": "SameSafeVotingPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55247,
                        "src": "23295:39:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 49107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23295:41:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 49108,
                    "nodeType": "RevertStatement",
                    "src": "23288:48:86"
                  }
                },
                {
                  "expression": {
                    "id": 49114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49110,
                        "name": "$safeVotingPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48064,
                        "src": "23346:17:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 49112,
                      "indexExpression": {
                        "id": 49111,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49087,
                        "src": "23364:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23346:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49113,
                      "name": "newSafeVotingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49089,
                      "src": "23372:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23346:45:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49115,
                  "nodeType": "ExpressionStatement",
                  "src": "23346:45:86"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49117,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49087,
                        "src": "23446:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49118,
                        "name": "safeVotingPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49096,
                        "src": "23485:16:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49119,
                        "name": "newSafeVotingPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49089,
                        "src": "23536:19:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49116,
                      "name": "SafeVotingPeriodSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48090,
                      "src": "23406:19:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 49120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "23440:4:86",
                      "23464:19:86",
                      "23515:19:86"
                    ],
                    "names": [
                      "safe",
                      "oldSafeVotingPeriod",
                      "newSafeVotingPeriod"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "23406:160:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49121,
                  "nodeType": "EmitStatement",
                  "src": "23401:165:86"
                }
              ]
            },
            "documentation": {
              "id": 49085,
              "nodeType": "StructuredDocumentation",
              "src": "22700:344:86",
              "text": "@notice The ```setSafeVotingPeriod``` function is called by governance to change the short circuit numerator\n @dev Only callable by FraxGovernorAlpha governance\n @param safe The Gnosis safe to configure\n @param newSafeVotingPeriod The voting period specific to safe, set to 0 to go back to Omega's default voting period"
            },
            "functionSelector": "f8cc2e3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSafeVotingPeriod",
            "nameLocation": "23058:19:86",
            "parameters": {
              "id": 49090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49087,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "23086:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49123,
                  "src": "23078:12:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23078:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49089,
                  "mutability": "mutable",
                  "name": "newSafeVotingPeriod",
                  "nameLocation": "23100:19:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49123,
                  "src": "23092:27:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23092:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23077:43:86"
            },
            "returnParameters": {
              "id": 49091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23130:0:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49156,
            "nodeType": "FunctionDefinition",
            "src": "23813:347:86",
            "nodes": [],
            "body": {
              "id": 49155,
              "nodeType": "Block",
              "src": "23895:265:86",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49132,
                    49134,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49132,
                      "mutability": "mutable",
                      "name": "againstVoteWeight",
                      "nameLocation": "23914:17:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49155,
                      "src": "23906:25:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23906:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49134,
                      "mutability": "mutable",
                      "name": "forVoteWeight",
                      "nameLocation": "23941:13:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49155,
                      "src": "23933:21:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23933:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 49138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49136,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49126,
                        "src": "23974:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49135,
                      "name": "proposalVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52676,
                      "src": "23960:13:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 49137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23960:25:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23905:80:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49139,
                        "name": "againstVoteWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49132,
                        "src": "23999:17:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 49140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24020:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "23999:22:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49142,
                        "name": "forVoteWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49134,
                        "src": "24025:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 49143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24042:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "24025:18:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "23999:44:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 49153,
                    "nodeType": "Block",
                    "src": "24088:66:86",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49149,
                            "name": "forVoteWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49134,
                            "src": "24109:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 49150,
                            "name": "againstVoteWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49132,
                            "src": "24126:17:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24109:34:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 49130,
                        "id": 49152,
                        "nodeType": "Return",
                        "src": "24102:41:86"
                      }
                    ]
                  },
                  "id": 49154,
                  "nodeType": "IfStatement",
                  "src": "23995:159:86",
                  "trueBody": {
                    "id": 49148,
                    "nodeType": "Block",
                    "src": "24045:37:86",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 49146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24066:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 49130,
                        "id": 49147,
                        "nodeType": "Return",
                        "src": "24059:12:86"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 49124,
              "nodeType": "StructuredDocumentation",
              "src": "23579:229:86",
              "text": "@notice The ```_optimisticVoteDefeated``` function is called by state() to check if an optimistic proposal was defeated\n @param proposalId Proposal ID\n @return Whether the optimistic proposal was defeated or not"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_optimisticVoteDefeated",
            "nameLocation": "23822:23:86",
            "parameters": {
              "id": 49127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49126,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "23854:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49156,
                  "src": "23846:18:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23846:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23845:20:86"
            },
            "returnParameters": {
              "id": 49130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49156,
                  "src": "23889:4:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23889:4:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23888:6:86"
            },
            "scope": 49423,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49309,
            "nodeType": "FunctionDefinition",
            "src": "24482:2206:86",
            "nodes": [],
            "body": {
              "id": 49308,
              "nodeType": "Block",
              "src": "24706:1982:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49175,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49173,
                      "src": "24716:10:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49177,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49160,
                          "src": "24765:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 49178,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49163,
                          "src": "24794:6:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 49179,
                          "name": "calldatas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49166,
                          "src": "24825:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49183,
                                  "name": "description",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49168,
                                  "src": "24881:11:86",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 49182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "24875:5:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 49181,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "24875:5:86",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24875:18:86",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 49180,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "24865:9:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 49185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24865:29:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 49176,
                        "name": "hashProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          51429
                        ],
                        "referencedDeclaration": 51429,
                        "src": "24729:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"
                        }
                      },
                      "id": 49186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "24756:7:86",
                        "24786:6:86",
                        "24814:9:86",
                        "24848:15:86"
                      ],
                      "names": [
                        "targets",
                        "values",
                        "calldatas",
                        "descriptionHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "24729:176:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24716:189:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49188,
                  "nodeType": "ExpressionStatement",
                  "src": "24716:189:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49190,
                            "name": "targets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49160,
                            "src": "24924:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 49191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "24932:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "24924:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 49192,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49163,
                            "src": "24942:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 49193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "24949:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "24942:13:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24924:31:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468",
                        "id": 49195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24957:35:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d",
                          "typeString": "literal_string \"Governor: invalid proposal length\""
                        },
                        "value": "Governor: invalid proposal length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d",
                          "typeString": "literal_string \"Governor: invalid proposal length\""
                        }
                      ],
                      "id": 49189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24916:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24916:77:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49197,
                  "nodeType": "ExpressionStatement",
                  "src": "24916:77:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49199,
                            "name": "targets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49160,
                            "src": "25011:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 49200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25019:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "25011:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 49201,
                            "name": "calldatas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49166,
                            "src": "25029:9:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 49202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25039:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "25029:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25011:34:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468",
                        "id": 49204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25047:35:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d",
                          "typeString": "literal_string \"Governor: invalid proposal length\""
                        },
                        "value": "Governor: invalid proposal length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d",
                          "typeString": "literal_string \"Governor: invalid proposal length\""
                        }
                      ],
                      "id": 49198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25003:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25003:80:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49206,
                  "nodeType": "ExpressionStatement",
                  "src": "25003:80:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49208,
                            "name": "targets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49160,
                            "src": "25101:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 49209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25109:6:86",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "25101:14:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25118:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25101:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a20656d7074792070726f706f73616c",
                        "id": 49212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25121:26:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513",
                          "typeString": "literal_string \"Governor: empty proposal\""
                        },
                        "value": "Governor: empty proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513",
                          "typeString": "literal_string \"Governor: empty proposal\""
                        }
                      ],
                      "id": 49207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25093:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25093:55:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49214,
                  "nodeType": "ExpressionStatement",
                  "src": "25093:55:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        "id": 49221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 49216,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51215,
                              "src": "25166:9:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalCore_$51207_storage_$",
                                "typeString": "mapping(uint256 => struct Governor.ProposalCore storage ref)"
                              }
                            },
                            "id": 49218,
                            "indexExpression": {
                              "id": 49217,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49173,
                              "src": "25176:10:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25166:21:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalCore_$51207_storage",
                              "typeString": "struct Governor.ProposalCore storage ref"
                            }
                          },
                          "id": 49219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25188:9:86",
                          "memberName": "voteStart",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51200,
                          "src": "25166:31:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25201:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25166:36:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a2070726f706f73616c20616c726561647920657869737473",
                        "id": 49222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25204:35:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40",
                          "typeString": "literal_string \"Governor: proposal already exists\""
                        },
                        "value": "Governor: proposal already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40",
                          "typeString": "literal_string \"Governor: proposal already exists\""
                        }
                      ],
                      "id": 49215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25158:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25158:82:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49224,
                  "nodeType": "ExpressionStatement",
                  "src": "25158:82:86"
                },
                {
                  "assignments": [
                    49226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49226,
                      "mutability": "mutable",
                      "name": "proposer",
                      "nameLocation": "25259:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49308,
                      "src": "25251:16:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49225,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25251:7:86",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49229,
                  "initialValue": {
                    "expression": {
                      "id": 49227,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "25270:3:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25274:6:86",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "25270:10:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25251:29:86"
                },
                {
                  "assignments": [
                    49231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49231,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "25298:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49308,
                      "src": "25290:16:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25290:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49237,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 49232,
                        "name": "clock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          53878
                        ],
                        "referencedDeclaration": 53878,
                        "src": "25309:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint48_$",
                          "typeString": "function () view returns (uint48)"
                        }
                      },
                      "id": 49233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25309:7:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 49234,
                        "name": "votingDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          53327
                        ],
                        "referencedDeclaration": 53327,
                        "src": "25319:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 49235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25319:13:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25309:23:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25290:42:86"
                },
                {
                  "assignments": [
                    49239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49239,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "25350:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49308,
                      "src": "25342:16:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25342:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49240,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25342:16:86"
                },
                {
                  "id": 49263,
                  "nodeType": "Block",
                  "src": "25369:312:86",
                  "statements": [
                    {
                      "assignments": [
                        49242
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 49242,
                          "mutability": "mutable",
                          "name": "safeVotingPeriod",
                          "nameLocation": "25391:16:86",
                          "nodeType": "VariableDeclaration",
                          "scope": 49263,
                          "src": "25383:24:86",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 49241,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "25383:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 49246,
                      "initialValue": {
                        "baseExpression": {
                          "id": 49243,
                          "name": "$safeVotingPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48064,
                          "src": "25410:17:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 49245,
                        "indexExpression": {
                          "id": 49244,
                          "name": "teamSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49170,
                          "src": "25428:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25410:27:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "25383:54:86"
                    },
                    {
                      "assignments": [
                        49248
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 49248,
                          "mutability": "mutable",
                          "name": "votingPeriod",
                          "nameLocation": "25550:12:86",
                          "nodeType": "VariableDeclaration",
                          "scope": 49263,
                          "src": "25542:20:86",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 49247,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "25542:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 49256,
                      "initialValue": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49249,
                            "name": "safeVotingPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49242,
                            "src": "25565:16:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25585:1:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "25565:21:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49253,
                            "name": "votingPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              53337
                            ],
                            "referencedDeclaration": 53337,
                            "src": "25608:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 49254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25608:14:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "25565:57:86",
                        "trueExpression": {
                          "id": 49252,
                          "name": "safeVotingPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49242,
                          "src": "25589:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "25542:80:86"
                    },
                    {
                      "expression": {
                        "id": 49261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 49257,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49239,
                          "src": "25636:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49258,
                            "name": "snapshot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49231,
                            "src": "25647:8:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 49259,
                            "name": "votingPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49248,
                            "src": "25658:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25647:23:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25636:34:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 49262,
                      "nodeType": "ExpressionStatement",
                      "src": "25636:34:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 49280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49264,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51215,
                        "src": "25691:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalCore_$51207_storage_$",
                          "typeString": "mapping(uint256 => struct Governor.ProposalCore storage ref)"
                        }
                      },
                      "id": 49266,
                      "indexExpression": {
                        "id": 49265,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49173,
                        "src": "25701:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25691:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalCore_$51207_storage",
                        "typeString": "struct Governor.ProposalCore storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49268,
                          "name": "proposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49226,
                          "src": "25752:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 49271,
                              "name": "snapshot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49231,
                              "src": "25792:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25785:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint40_$",
                              "typeString": "type(uint40)"
                            },
                            "typeName": {
                              "id": 49269,
                              "name": "uint40",
                              "nodeType": "ElementaryTypeName",
                              "src": "25785:6:86",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25785:16:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 49275,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49239,
                              "src": "25831:8:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25824:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint40_$",
                              "typeString": "type(uint40)"
                            },
                            "typeName": {
                              "id": 49273,
                              "name": "uint40",
                              "nodeType": "ElementaryTypeName",
                              "src": "25824:6:86",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25824:16:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 49277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25864:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 49278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25893:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          },
                          {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 49267,
                        "name": "ProposalCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51207,
                        "src": "25715:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProposalCore_$51207_storage_ptr_$",
                          "typeString": "type(struct Governor.ProposalCore storage pointer)"
                        }
                      },
                      "id": 49279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "25742:8:86",
                        "25774:9:86",
                        "25815:7:86",
                        "25854:8:86",
                        "25883:8:86"
                      ],
                      "names": [
                        "proposer",
                        "voteStart",
                        "voteEnd",
                        "executed",
                        "canceled"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "25715:194:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalCore_$51207_memory_ptr",
                        "typeString": "struct Governor.ProposalCore memory"
                      }
                    },
                    "src": "25691:218:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalCore_$51207_storage",
                      "typeString": "struct Governor.ProposalCore storage ref"
                    }
                  },
                  "id": 49281,
                  "nodeType": "ExpressionStatement",
                  "src": "25691:218:86"
                },
                {
                  "expression": {
                    "id": 49289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49282,
                        "name": "$snapshotTimestampToSnapshotBlockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47458,
                        "src": "26334:39:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 49284,
                      "indexExpression": {
                        "id": 49283,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49231,
                        "src": "26374:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26334:49:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 49285,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "26386:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 49286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26392:6:86",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "26386:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 49287,
                        "name": "$votingDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47445,
                        "src": "26401:18:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "26386:33:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26334:85:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49290,
                  "nodeType": "ExpressionStatement",
                  "src": "26334:85:86"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49292,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49173,
                        "src": "26464:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49293,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49226,
                        "src": "26488:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49294,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49160,
                        "src": "26510:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 49295,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49163,
                        "src": "26531:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 49299,
                              "name": "targets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49160,
                              "src": "26564:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 49300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "26572:6:86",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "26564:14:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 49298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "26551:12:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 49296,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "26555:6:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "id": 49297,
                            "nodeType": "ArrayTypeName",
                            "src": "26555:8:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                              "typeString": "string[]"
                            }
                          }
                        },
                        "id": 49301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26551:28:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 49302,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49166,
                        "src": "26593:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 49303,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49231,
                        "src": "26616:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49304,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49239,
                        "src": "26638:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49305,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49168,
                        "src": "26660:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 49291,
                      "name": "ProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34237,
                      "src": "26435:15:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,address[] memory,uint256[] memory,string memory[] memory,bytes memory[] memory,uint256,uint256,string memory)"
                      }
                    },
                    "id": 49306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26435:246:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49307,
                  "nodeType": "EmitStatement",
                  "src": "26430:251:86"
                }
              ]
            },
            "documentation": {
              "id": 49157,
              "nodeType": "StructuredDocumentation",
              "src": "24166:311:86",
              "text": "@notice The ```_propose``` function is similar to OpenZeppelin's propose() with minor changes.\n @dev Changes include: Removal of proposal threshold check, ProposalCore struct packing, setting $snapshotToTotalVeFxsSupply, and configurable voting periods per safe\n @return proposalId Proposal ID"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_propose",
            "nameLocation": "24491:8:86",
            "parameters": {
              "id": 49171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49160,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "24526:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24509:24:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49158,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "24509:7:86",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49159,
                    "nodeType": "ArrayTypeName",
                    "src": "24509:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49163,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "24560:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24543:23:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49161,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "24543:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 49162,
                    "nodeType": "ArrayTypeName",
                    "src": "24543:9:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49166,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "24591:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24576:24:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49164,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "24576:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 49165,
                    "nodeType": "ArrayTypeName",
                    "src": "24576:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49168,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "24624:11:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24610:25:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24610:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49170,
                  "mutability": "mutable",
                  "name": "teamSafe",
                  "nameLocation": "24653:8:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24645:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24645:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24499:168:86"
            },
            "returnParameters": {
              "id": 49174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49173,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "24694:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49309,
                  "src": "24686:18:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24686:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24685:20:86"
            },
            "scope": 49423,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 49422,
            "nodeType": "FunctionDefinition",
            "src": "26992:1363:86",
            "nodes": [],
            "body": {
              "id": 49421,
              "nodeType": "Block",
              "src": "27086:1269:86",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49321,
                      "mutability": "mutable",
                      "name": "$proposal",
                      "nameLocation": "27117:9:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49421,
                      "src": "27096:30:86",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalCore_$51207_storage_ptr",
                        "typeString": "struct Governor.ProposalCore"
                      },
                      "typeName": {
                        "id": 49320,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49319,
                          "name": "ProposalCore",
                          "nameLocations": [
                            "27096:12:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51207,
                          "src": "27096:12:86"
                        },
                        "referencedDeclaration": 51207,
                        "src": "27096:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalCore_$51207_storage_ptr",
                          "typeString": "struct Governor.ProposalCore"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49325,
                  "initialValue": {
                    "baseExpression": {
                      "id": 49322,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51215,
                      "src": "27129:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProposalCore_$51207_storage_$",
                        "typeString": "mapping(uint256 => struct Governor.ProposalCore storage ref)"
                      }
                    },
                    "id": 49324,
                    "indexExpression": {
                      "id": 49323,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49312,
                      "src": "27139:10:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27129:21:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalCore_$51207_storage",
                      "typeString": "struct Governor.ProposalCore storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27096:54:86"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 49326,
                      "name": "$proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49321,
                      "src": "27165:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalCore_$51207_storage_ptr",
                        "typeString": "struct Governor.ProposalCore storage pointer"
                      }
                    },
                    "id": 49327,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "27175:8:86",
                    "memberName": "executed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51204,
                    "src": "27165:18:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49332,
                  "nodeType": "IfStatement",
                  "src": "27161:78:86",
                  "trueBody": {
                    "id": 49331,
                    "nodeType": "Block",
                    "src": "27185:54:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49328,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "27206:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "27220:8:86",
                          "memberName": "Executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34211,
                          "src": "27206:22:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49330,
                        "nodeType": "Return",
                        "src": "27199:29:86"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "expression": {
                      "id": 49333,
                      "name": "$proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49321,
                      "src": "27253:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalCore_$51207_storage_ptr",
                        "typeString": "struct Governor.ProposalCore storage pointer"
                      }
                    },
                    "id": 49334,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "27263:8:86",
                    "memberName": "canceled",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51206,
                    "src": "27253:18:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49339,
                  "nodeType": "IfStatement",
                  "src": "27249:78:86",
                  "trueBody": {
                    "id": 49338,
                    "nodeType": "Block",
                    "src": "27273:54:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49335,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "27294:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "27308:8:86",
                          "memberName": "Canceled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34206,
                          "src": "27294:22:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49337,
                        "nodeType": "Return",
                        "src": "27287:29:86"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49341,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "27345:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49421,
                      "src": "27337:16:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27337:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49343,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49312,
                        "src": "27373:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49342,
                      "name": "proposalSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51543
                      ],
                      "referencedDeclaration": 51543,
                      "src": "27356:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 49344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27356:28:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27337:47:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49346,
                      "name": "snapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49341,
                      "src": "27399:8:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27411:1:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "27399:13:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49354,
                  "nodeType": "IfStatement",
                  "src": "27395:83:86",
                  "trueBody": {
                    "id": 49353,
                    "nodeType": "Block",
                    "src": "27414:64:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964",
                              "id": 49350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27435:31:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892",
                                "typeString": "literal_string \"Governor: unknown proposal id\""
                              },
                              "value": "Governor: unknown proposal id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892",
                                "typeString": "literal_string \"Governor: unknown proposal id\""
                              }
                            ],
                            "id": 49349,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "27428:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 49351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27428:39:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49352,
                        "nodeType": "ExpressionStatement",
                        "src": "27428:39:86"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49356,
                      "mutability": "mutable",
                      "name": "currentTimepoint",
                      "nameLocation": "27496:16:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49421,
                      "src": "27488:24:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27488:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49359,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49357,
                      "name": "clock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53878
                      ],
                      "referencedDeclaration": 53878,
                      "src": "27515:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint48_$",
                        "typeString": "function () view returns (uint48)"
                      }
                    },
                    "id": 49358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27515:7:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27488:34:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49360,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49341,
                        "src": "27537:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 49361,
                        "name": "currentTimepoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49356,
                        "src": "27549:16:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27537:28:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 49363,
                          "name": "$snapshotTimestampToSnapshotBlockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47458,
                          "src": "27569:39:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 49365,
                        "indexExpression": {
                          "id": 49364,
                          "name": "snapshot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49341,
                          "src": "27609:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27569:49:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 49366,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "27622:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 49367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "27628:6:86",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "27622:12:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27569:65:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "27537:97:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49374,
                  "nodeType": "IfStatement",
                  "src": "27533:156:86",
                  "trueBody": {
                    "id": 49373,
                    "nodeType": "Block",
                    "src": "27636:53:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49370,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "27657:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "27671:7:86",
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34204,
                          "src": "27657:21:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49372,
                        "nodeType": "Return",
                        "src": "27650:28:86"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 49376,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49312,
                        "src": "27780:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49375,
                      "name": "_shortCircuitFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47678,
                      "src": "27763:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 49377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27763:28:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 49383,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49312,
                          "src": "27879:10:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 49382,
                        "name": "_shortCircuitAgainst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47707,
                        "src": "27858:20:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 49384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27858:32:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 49389,
                    "nodeType": "IfStatement",
                    "src": "27854:92:86",
                    "trueBody": {
                      "id": 49388,
                      "nodeType": "Block",
                      "src": "27892:54:86",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 49385,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34212,
                              "src": "27913:13:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                                "typeString": "type(enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 49386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "27927:8:86",
                            "memberName": "Defeated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34207,
                            "src": "27913:22:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$34212",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          },
                          "functionReturnParameters": 49318,
                          "id": 49387,
                          "nodeType": "Return",
                          "src": "27906:29:86"
                        }
                      ]
                    }
                  },
                  "id": 49390,
                  "nodeType": "IfStatement",
                  "src": "27759:187:86",
                  "trueBody": {
                    "id": 49381,
                    "nodeType": "Block",
                    "src": "27793:55:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49378,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "27814:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "27828:9:86",
                          "memberName": "Succeeded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34208,
                          "src": "27814:23:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49380,
                        "nodeType": "Return",
                        "src": "27807:30:86"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49392,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "27964:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 49421,
                      "src": "27956:16:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49391,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27956:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49396,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49394,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49312,
                        "src": "27992:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49393,
                      "name": "proposalDeadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51558
                      ],
                      "referencedDeclaration": 51558,
                      "src": "27975:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 49395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27975:28:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27956:47:86"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49397,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49392,
                      "src": "28018:8:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 49398,
                      "name": "currentTimepoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49356,
                      "src": "28030:16:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28018:28:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49404,
                  "nodeType": "IfStatement",
                  "src": "28014:86:86",
                  "trueBody": {
                    "id": 49403,
                    "nodeType": "Block",
                    "src": "28048:52:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49400,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "28069:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "28083:6:86",
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34205,
                          "src": "28069:20:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49402,
                        "nodeType": "Return",
                        "src": "28062:27:86"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 49406,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49312,
                          "src": "28182:10:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 49405,
                        "name": "_quorumReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          47649
                        ],
                        "referencedDeclaration": 47649,
                        "src": "28167:14:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 49407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28167:26:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 49409,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49312,
                          "src": "28221:10:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 49408,
                        "name": "_optimisticVoteDefeated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49156,
                        "src": "28197:23:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 49410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28197:35:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28167:65:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 49419,
                    "nodeType": "Block",
                    "src": "28294:55:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49416,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "28315:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "28329:9:86",
                          "memberName": "Succeeded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34208,
                          "src": "28315:23:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49418,
                        "nodeType": "Return",
                        "src": "28308:30:86"
                      }
                    ]
                  },
                  "id": 49420,
                  "nodeType": "IfStatement",
                  "src": "28163:186:86",
                  "trueBody": {
                    "id": 49415,
                    "nodeType": "Block",
                    "src": "28234:54:86",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49412,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34212,
                            "src": "28255:13:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$34212_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 49413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "28269:8:86",
                          "memberName": "Defeated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34207,
                          "src": "28255:22:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$34212",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 49318,
                        "id": 49414,
                        "nodeType": "Return",
                        "src": "28248:29:86"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              51519
            ],
            "documentation": {
              "id": 49310,
              "nodeType": "StructuredDocumentation",
              "src": "26694:293:86",
              "text": "@notice The ```state``` function is similar to OpenZeppelin's propose() with minor changes\n @dev Changes include: support for early success or failure using short circuit and optimistic proposals\n @param proposalId Proposal ID\n @return proposalState ProposalState enum"
            },
            "functionSelector": "3e4f49e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nameLocation": "27001:5:86",
            "overrides": {
              "id": 49314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27039:8:86"
            },
            "parameters": {
              "id": 49313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49312,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "27015:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49422,
                  "src": "27007:18:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27007:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27006:20:86"
            },
            "returnParameters": {
              "id": 49318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49317,
                  "mutability": "mutable",
                  "name": "proposalState",
                  "nameLocation": "27071:13:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 49422,
                  "src": "27057:27:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProposalState_$34212",
                    "typeString": "enum IGovernor.ProposalState"
                  },
                  "typeName": {
                    "id": 49316,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49315,
                      "name": "ProposalState",
                      "nameLocations": [
                        "27057:13:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34212,
                      "src": "27057:13:86"
                    },
                    "referencedDeclaration": 34212,
                    "src": "27057:13:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalState_$34212",
                      "typeString": "enum IGovernor.ProposalState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27056:29:86"
            },
            "scope": 49423,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48050,
              "name": "FraxGovernorBase",
              "nameLocations": [
                "2226:16:86"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48014,
              "src": "2226:16:86"
            },
            "id": 48051,
            "nodeType": "InheritanceSpecifier",
            "src": "2226:16:86"
          }
        ],
        "canonicalName": "FraxGovernorOmega",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48049,
          "nodeType": "StructuredDocumentation",
          "src": "1791:405:86",
          "text": "@title FraxGovernorOmega\n @author Jon Walch (Frax Finance) https://github.com/jonwalch\n @notice A Governance contract with intended use as a Gnosis Safe signer. The only Safe interaction this contract does is calling GnosisSafe::approveHash().\n @notice Supports optimistic proposals for Gnosis Safe transactions, that default to ```ProposalState.Succeeded```, through ```addTransaction()```."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49423,
          48014,
          53094,
          54096,
          53922,
          53442,
          52563,
          36713,
          37421,
          34533,
          36672,
          40439,
          36648,
          40463,
          40475,
          39314
        ],
        "name": "FraxGovernorOmega",
        "nameLocation": "2205:17:86",
        "scope": 49424,
        "usedErrors": [
          39327,
          39329,
          48005,
          48007,
          48009,
          48011,
          48013,
          55219,
          55221,
          55223,
          55225,
          55231,
          55233,
          55235,
          55237,
          55241,
          55245,
          55247,
          55251,
          55253,
          55255,
          55257
        ]
      }
    ],
    "license": "ISC"
  },
  "id": 86
}