{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fraxGovernorOmega",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FRAX_GOVERNOR_OMEGA_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "checkAfterExecution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "checkTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610de5380380610de5833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051610cc761011e6000396000818161035d01526104280152610cc76000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806375f0bb52146100815780637a76fa4a1461009d57806393271368146100bb575b600080fd5b61006b600480360381019061006691906104ba565b6100d7565b6040516100789190610502565b60405180910390f35b61009b6004803603810190610096919061075a565b6101a9565b005b6100a5610426565b6040516100b29190610895565b60405180910390f35b6100d560048036038101906100d09190610912565b61044a565b005b60007fe6d7a83a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101a257507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600033905060008173ffffffffffffffffffffffffffffffffffffffff1663d8d11f788e8e8e8e8e8e8e8e8e60018d73ffffffffffffffffffffffffffffffffffffffff1663affed0e06040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102489190610967565b61025291906109c3565b6040518b63ffffffff1660e01b81526004016102779a99989796959493929190610b5b565b602060405180830381865afa158015610294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b89190610c13565b90508173ffffffffffffffffffffffffffffffffffffffff16632f54bf6e846040518263ffffffff1660e01b81526004016102f39190610895565b6020604051808303816000875af1158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610c55565b15806103e0575060018273ffffffffffffffffffffffffffffffffffffffff16637d8329747f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161039a929190610c91565b6020604051808303816000875af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd9190610967565b14155b15610417576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61049781610462565b81146104a257600080fd5b50565b6000813590506104b48161048e565b92915050565b6000602082840312156104d0576104cf610458565b5b60006104de848285016104a5565b91505092915050565b60008115159050919050565b6104fc816104e7565b82525050565b600060208201905061051760008301846104f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105488261051d565b9050919050565b6105588161053d565b811461056357600080fd5b50565b6000813590506105758161054f565b92915050565b6000819050919050565b61058e8161057b565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610604826105bb565b810181811067ffffffffffffffff82111715610623576106226105cc565b5b80604052505050565b600061063661044e565b905061064282826105fb565b919050565b600067ffffffffffffffff821115610662576106616105cc565b5b61066b826105bb565b9050602081019050919050565b82818337600083830152505050565b600061069a61069584610647565b61062c565b9050828152602081018484840111156106b6576106b56105b6565b5b6106c1848285610678565b509392505050565b600082601f8301126106de576106dd6105b1565b5b81356106ee848260208601610687565b91505092915050565b6002811061070457600080fd5b50565b600081359050610716816106f7565b92915050565b60006107278261051d565b9050919050565b6107378161071c565b811461074257600080fd5b50565b6000813590506107548161072e565b92915050565b60008060008060008060008060008060006101608c8e0312156107805761077f610458565b5b600061078e8e828f01610566565b9b5050602061079f8e828f0161059c565b9a505060408c013567ffffffffffffffff8111156107c0576107bf61045d565b5b6107cc8e828f016106c9565b99505060606107dd8e828f01610707565b98505060806107ee8e828f0161059c565b97505060a06107ff8e828f0161059c565b96505060c06108108e828f0161059c565b95505060e06108218e828f01610566565b9450506101006108338e828f01610745565b9350506101208c013567ffffffffffffffff8111156108555761085461045d565b5b6108618e828f016106c9565b9250506101406108738e828f01610566565b9150509295989b509295989b9093969950565b61088f8161053d565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6000819050919050565b6108c3816108b0565b81146108ce57600080fd5b50565b6000813590506108e0816108ba565b92915050565b6108ef816104e7565b81146108fa57600080fd5b50565b60008135905061090c816108e6565b92915050565b6000806040838503121561092957610928610458565b5b6000610937858286016108d1565b9250506020610948858286016108fd565b9150509250929050565b60008151905061096181610585565b92915050565b60006020828403121561097d5761097c610458565b5b600061098b84828501610952565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce8261057b565b91506109d98361057b565b92508282039050818111156109f1576109f0610994565b5b92915050565b610a008161057b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a40578082015181840152602081019050610a25565b60008484015250505050565b6000610a5782610a06565b610a618185610a11565b9350610a71818560208601610a22565b610a7a816105bb565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610ac557610ac4610a85565b5b50565b6000819050610ad682610ab4565b919050565b6000610ae682610ac8565b9050919050565b610af681610adb565b82525050565b6000819050919050565b6000610b21610b1c610b178461051d565b610afc565b61051d565b9050919050565b6000610b3382610b06565b9050919050565b6000610b4582610b28565b9050919050565b610b5581610b3a565b82525050565b600061014082019050610b71600083018d610886565b610b7e602083018c6109f7565b8181036040830152610b90818b610a4c565b9050610b9f606083018a610aed565b610bac60808301896109f7565b610bb960a08301886109f7565b610bc660c08301876109f7565b610bd360e0830186610886565b610be1610100830185610b4c565b610bef6101208301846109f7565b9b9a5050505050505050505050565b600081519050610c0d816108ba565b92915050565b600060208284031215610c2957610c28610458565b5b6000610c3784828501610bfe565b91505092915050565b600081519050610c4f816108e6565b92915050565b600060208284031215610c6b57610c6a610458565b5b6000610c7984828501610c40565b91505092915050565b610c8b816108b0565b82525050565b6000604082019050610ca66000830185610886565b610cb36020830184610c82565b939250505056fea164736f6c6343000813000a",
    "sourceMap": "1524:2945:87:-:0;;;1838:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1917:17;1887:47;;;;;;;;;;1838:103;1524:2945;;88:117:111;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1524:2945:87:-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806375f0bb52146100815780637a76fa4a1461009d57806393271368146100bb575b600080fd5b61006b600480360381019061006691906104ba565b6100d7565b6040516100789190610502565b60405180910390f35b61009b6004803603810190610096919061075a565b6101a9565b005b6100a5610426565b6040516100b29190610895565b60405180910390f35b6100d560048036038101906100d09190610912565b61044a565b005b60007fe6d7a83a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101a257507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600033905060008173ffffffffffffffffffffffffffffffffffffffff1663d8d11f788e8e8e8e8e8e8e8e8e60018d73ffffffffffffffffffffffffffffffffffffffff1663affed0e06040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102489190610967565b61025291906109c3565b6040518b63ffffffff1660e01b81526004016102779a99989796959493929190610b5b565b602060405180830381865afa158015610294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b89190610c13565b90508173ffffffffffffffffffffffffffffffffffffffff16632f54bf6e846040518263ffffffff1660e01b81526004016102f39190610895565b6020604051808303816000875af1158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610c55565b15806103e0575060018273ffffffffffffffffffffffffffffffffffffffff16637d8329747f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161039a929190610c91565b6020604051808303816000875af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd9190610967565b14155b15610417576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61049781610462565b81146104a257600080fd5b50565b6000813590506104b48161048e565b92915050565b6000602082840312156104d0576104cf610458565b5b60006104de848285016104a5565b91505092915050565b60008115159050919050565b6104fc816104e7565b82525050565b600060208201905061051760008301846104f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105488261051d565b9050919050565b6105588161053d565b811461056357600080fd5b50565b6000813590506105758161054f565b92915050565b6000819050919050565b61058e8161057b565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610604826105bb565b810181811067ffffffffffffffff82111715610623576106226105cc565b5b80604052505050565b600061063661044e565b905061064282826105fb565b919050565b600067ffffffffffffffff821115610662576106616105cc565b5b61066b826105bb565b9050602081019050919050565b82818337600083830152505050565b600061069a61069584610647565b61062c565b9050828152602081018484840111156106b6576106b56105b6565b5b6106c1848285610678565b509392505050565b600082601f8301126106de576106dd6105b1565b5b81356106ee848260208601610687565b91505092915050565b6002811061070457600080fd5b50565b600081359050610716816106f7565b92915050565b60006107278261051d565b9050919050565b6107378161071c565b811461074257600080fd5b50565b6000813590506107548161072e565b92915050565b60008060008060008060008060008060006101608c8e0312156107805761077f610458565b5b600061078e8e828f01610566565b9b5050602061079f8e828f0161059c565b9a505060408c013567ffffffffffffffff8111156107c0576107bf61045d565b5b6107cc8e828f016106c9565b99505060606107dd8e828f01610707565b98505060806107ee8e828f0161059c565b97505060a06107ff8e828f0161059c565b96505060c06108108e828f0161059c565b95505060e06108218e828f01610566565b9450506101006108338e828f01610745565b9350506101208c013567ffffffffffffffff8111156108555761085461045d565b5b6108618e828f016106c9565b9250506101406108738e828f01610566565b9150509295989b509295989b9093969950565b61088f8161053d565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6000819050919050565b6108c3816108b0565b81146108ce57600080fd5b50565b6000813590506108e0816108ba565b92915050565b6108ef816104e7565b81146108fa57600080fd5b50565b60008135905061090c816108e6565b92915050565b6000806040838503121561092957610928610458565b5b6000610937858286016108d1565b9250506020610948858286016108fd565b9150509250929050565b60008151905061096181610585565b92915050565b60006020828403121561097d5761097c610458565b5b600061098b84828501610952565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce8261057b565b91506109d98361057b565b92508282039050818111156109f1576109f0610994565b5b92915050565b610a008161057b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a40578082015181840152602081019050610a25565b60008484015250505050565b6000610a5782610a06565b610a618185610a11565b9350610a71818560208601610a22565b610a7a816105bb565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610ac557610ac4610a85565b5b50565b6000819050610ad682610ab4565b919050565b6000610ae682610ac8565b9050919050565b610af681610adb565b82525050565b6000819050919050565b6000610b21610b1c610b178461051d565b610afc565b61051d565b9050919050565b6000610b3382610b06565b9050919050565b6000610b4582610b28565b9050919050565b610b5581610b3a565b82525050565b600061014082019050610b71600083018d610886565b610b7e602083018c6109f7565b8181036040830152610b90818b610a4c565b9050610b9f606083018a610aed565b610bac60808301896109f7565b610bb960a08301886109f7565b610bc660c08301876109f7565b610bd360e0830186610886565b610be1610100830185610b4c565b610bef6101208301846109f7565b9b9a5050505050505050505050565b600081519050610c0d816108ba565b92915050565b600060208284031215610c2957610c28610458565b5b6000610c3784828501610bfe565b91505092915050565b600081519050610c4f816108e6565b92915050565b600060208284031215610c6b57610c6a610458565b5b6000610c7984828501610c40565b91505092915050565b610c8b816108b0565b82525050565b6000604082019050610ca66000830185610886565b610cb36020830184610c82565b939250505056fea164736f6c6343000813000a",
    "sourceMap": "1524:2945:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4189:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2864:1092;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1629:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4101:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4189:251;4276:4;4326:23;4311:38;;;:11;:38;;;;:108;;;;4394:25;4379:40;;;:11;:40;;;;4311:108;4292:127;;4189:251;;;:::o;2864:1092::-;3282:10;3301;3282:30;;3322:14;3339:4;:23;;;3381:2;3404:5;3429:4;3458:9;3492;3524:7;3555:8;3587;3625:14;3676:1;3661:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;;:::i;:::-;3339:406;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3322:423;;3773:4;:12;;;3786:9;3773:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3772:24;:121;;;;3892:1;3812:4;:19;;;3842:27;3879:6;3812:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;3772:121;3755:195;;;3925:14;;;;;;;;;;;;;;3755:195;3272:684;;2864:1092;;;;;;;;;;;:::o;1629:52::-;;;:::o;4101:82::-;;;:::o;7:75:111:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:102;2668:6;2719:2;2715:7;2710:2;2703:5;2699:14;2695:28;2685:38;;2627:102;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15;2921:281;3004:27;3026:4;3004:27;:::i;:::-;2996:6;2992:40;3134:6;3122:10;3119:22;3098:18;3086:10;3083:34;3080:62;3077:88;;;3145:18;;:::i;:::-;3077:88;3185:10;3181:2;3174:22;2964:238;2921:281;;:::o;3208:129::-;3242:6;3269:20;;:::i;:::-;3259:30;;3298:33;3326:4;3318:6;3298:33;:::i;:::-;3208:129;;;:::o;3343:307::-;3404:4;3494:18;3486:6;3483:30;3480:56;;;3516:18;;:::i;:::-;3480:56;3554:29;3576:6;3554:29;:::i;:::-;3546:37;;3638:4;3632;3628:15;3620:23;;3343:307;;;:::o;3656:146::-;3753:6;3748:3;3743;3730:30;3794:1;3785:6;3780:3;3776:16;3769:27;3656:146;;;:::o;3808:423::-;3885:5;3910:65;3926:48;3967:6;3926:48;:::i;:::-;3910:65;:::i;:::-;3901:74;;3998:6;3991:5;3984:21;4036:4;4029:5;4025:16;4074:3;4065:6;4060:3;4056:16;4053:25;4050:112;;;4081:79;;:::i;:::-;4050:112;4171:54;4218:6;4213:3;4208;4171:54;:::i;:::-;3891:340;3808:423;;;;;:::o;4250:338::-;4305:5;4354:3;4347:4;4339:6;4335:17;4331:27;4321:122;;4362:79;;:::i;:::-;4321:122;4479:6;4466:20;4504:78;4578:3;4570:6;4563:4;4555:6;4551:17;4504:78;:::i;:::-;4495:87;;4311:277;4250:338;;;;:::o;4594:113::-;4681:1;4674:5;4671:12;4661:40;;4697:1;4694;4687:12;4661:40;4594:113;:::o;4713:167::-;4773:5;4811:6;4798:20;4789:29;;4827:47;4868:5;4827:47;:::i;:::-;4713:167;;;;:::o;4886:104::-;4931:7;4960:24;4978:5;4960:24;:::i;:::-;4949:35;;4886:104;;;:::o;4996:138::-;5077:32;5103:5;5077:32;:::i;:::-;5070:5;5067:43;5057:71;;5124:1;5121;5114:12;5057:71;4996:138;:::o;5140:155::-;5194:5;5232:6;5219:20;5210:29;;5248:41;5283:5;5248:41;:::i;:::-;5140:155;;;;:::o;5301:2189::-;5490:6;5498;5506;5514;5522;5530;5538;5546;5554;5562;5570:7;5620:3;5608:9;5599:7;5595:23;5591:33;5588:120;;;5627:79;;:::i;:::-;5588:120;5747:1;5772:53;5817:7;5808:6;5797:9;5793:22;5772:53;:::i;:::-;5762:63;;5718:117;5874:2;5900:53;5945:7;5936:6;5925:9;5921:22;5900:53;:::i;:::-;5890:63;;5845:118;6030:2;6019:9;6015:18;6002:32;6061:18;6053:6;6050:30;6047:117;;;6083:79;;:::i;:::-;6047:117;6188:62;6242:7;6233:6;6222:9;6218:22;6188:62;:::i;:::-;6178:72;;5973:287;6299:2;6325:67;6384:7;6375:6;6364:9;6360:22;6325:67;:::i;:::-;6315:77;;6270:132;6441:3;6468:53;6513:7;6504:6;6493:9;6489:22;6468:53;:::i;:::-;6458:63;;6412:119;6570:3;6597:53;6642:7;6633:6;6622:9;6618:22;6597:53;:::i;:::-;6587:63;;6541:119;6699:3;6726:53;6771:7;6762:6;6751:9;6747:22;6726:53;:::i;:::-;6716:63;;6670:119;6828:3;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6799:119;6957:3;6984:61;7037:7;7028:6;7017:9;7013:22;6984:61;:::i;:::-;6974:71;;6928:127;7122:3;7111:9;7107:19;7094:33;7154:18;7146:6;7143:30;7140:117;;;7176:79;;:::i;:::-;7140:117;7281:62;7335:7;7326:6;7315:9;7311:22;7281:62;:::i;:::-;7271:72;;7065:288;7392:3;7420:53;7465:7;7456:6;7445:9;7441:22;7420:53;:::i;:::-;7409:64;;7363:120;5301:2189;;;;;;;;;;;;;;:::o;7496:118::-;7583:24;7601:5;7583:24;:::i;:::-;7578:3;7571:37;7496:118;;:::o;7620:222::-;7713:4;7751:2;7740:9;7736:18;7728:26;;7764:71;7832:1;7821:9;7817:17;7808:6;7764:71;:::i;:::-;7620:222;;;;:::o;7848:77::-;7885:7;7914:5;7903:16;;7848:77;;;:::o;7931:122::-;8004:24;8022:5;8004:24;:::i;:::-;7997:5;7994:35;7984:63;;8043:1;8040;8033:12;7984:63;7931:122;:::o;8059:139::-;8105:5;8143:6;8130:20;8121:29;;8159:33;8186:5;8159:33;:::i;:::-;8059:139;;;;:::o;8204:116::-;8274:21;8289:5;8274:21;:::i;:::-;8267:5;8264:32;8254:60;;8310:1;8307;8300:12;8254:60;8204:116;:::o;8326:133::-;8369:5;8407:6;8394:20;8385:29;;8423:30;8447:5;8423:30;:::i;:::-;8326:133;;;;:::o;8465:468::-;8530:6;8538;8587:2;8575:9;8566:7;8562:23;8558:32;8555:119;;;8593:79;;:::i;:::-;8555:119;8713:1;8738:53;8783:7;8774:6;8763:9;8759:22;8738:53;:::i;:::-;8728:63;;8684:117;8840:2;8866:50;8908:7;8899:6;8888:9;8884:22;8866:50;:::i;:::-;8856:60;;8811:115;8465:468;;;;;:::o;8939:143::-;8996:5;9027:6;9021:13;9012:22;;9043:33;9070:5;9043:33;:::i;:::-;8939:143;;;;:::o;9088:351::-;9158:6;9207:2;9195:9;9186:7;9182:23;9178:32;9175:119;;;9213:79;;:::i;:::-;9175:119;9333:1;9358:64;9414:7;9405:6;9394:9;9390:22;9358:64;:::i;:::-;9348:74;;9304:128;9088:351;;;;:::o;9445:180::-;9493:77;9490:1;9483:88;9590:4;9587:1;9580:15;9614:4;9611:1;9604:15;9631:194;9671:4;9691:20;9709:1;9691:20;:::i;:::-;9686:25;;9725:20;9743:1;9725:20;:::i;:::-;9720:25;;9769:1;9766;9762:9;9754:17;;9793:1;9787:4;9784:11;9781:37;;;9798:18;;:::i;:::-;9781:37;9631:194;;;;:::o;9831:118::-;9918:24;9936:5;9918:24;:::i;:::-;9913:3;9906:37;9831:118;;:::o;9955:98::-;10006:6;10040:5;10034:12;10024:22;;9955:98;;;:::o;10059:168::-;10142:11;10176:6;10171:3;10164:19;10216:4;10211:3;10207:14;10192:29;;10059:168;;;;:::o;10233:246::-;10314:1;10324:113;10338:6;10335:1;10332:13;10324:113;;;10423:1;10418:3;10414:11;10408:18;10404:1;10399:3;10395:11;10388:39;10360:2;10357:1;10353:10;10348:15;;10324:113;;;10471:1;10462:6;10457:3;10453:16;10446:27;10295:184;10233:246;;;:::o;10485:373::-;10571:3;10599:38;10631:5;10599:38;:::i;:::-;10653:70;10716:6;10711:3;10653:70;:::i;:::-;10646:77;;10732:65;10790:6;10785:3;10778:4;10771:5;10767:16;10732:65;:::i;:::-;10822:29;10844:6;10822:29;:::i;:::-;10817:3;10813:39;10806:46;;10575:283;10485:373;;;;:::o;10864:180::-;10912:77;10909:1;10902:88;11009:4;11006:1;10999:15;11033:4;11030:1;11023:15;11050:119;11137:1;11130:5;11127:12;11117:46;;11143:18;;:::i;:::-;11117:46;11050:119;:::o;11175:139::-;11226:7;11255:5;11244:16;;11261:47;11302:5;11261:47;:::i;:::-;11175:139;;;:::o;11320:::-;11382:9;11415:38;11447:5;11415:38;:::i;:::-;11402:51;;11320:139;;;:::o;11465:155::-;11564:49;11607:5;11564:49;:::i;:::-;11559:3;11552:62;11465:155;;:::o;11626:60::-;11654:3;11675:5;11668:12;;11626:60;;;:::o;11692:142::-;11742:9;11775:53;11793:34;11802:24;11820:5;11802:24;:::i;:::-;11793:34;:::i;:::-;11775:53;:::i;:::-;11762:66;;11692:142;;;:::o;11840:126::-;11890:9;11923:37;11954:5;11923:37;:::i;:::-;11910:50;;11840:126;;;:::o;11972:134::-;12030:9;12063:37;12094:5;12063:37;:::i;:::-;12050:50;;11972:134;;;:::o;12112:147::-;12207:45;12246:5;12207:45;:::i;:::-;12202:3;12195:58;12112:147;;:::o;12265:1346::-;12648:4;12686:3;12675:9;12671:19;12663:27;;12700:71;12768:1;12757:9;12753:17;12744:6;12700:71;:::i;:::-;12781:72;12849:2;12838:9;12834:18;12825:6;12781:72;:::i;:::-;12900:9;12894:4;12890:20;12885:2;12874:9;12870:18;12863:48;12928:76;12999:4;12990:6;12928:76;:::i;:::-;12920:84;;13014;13094:2;13083:9;13079:18;13070:6;13014:84;:::i;:::-;13108:73;13176:3;13165:9;13161:19;13152:6;13108:73;:::i;:::-;13191;13259:3;13248:9;13244:19;13235:6;13191:73;:::i;:::-;13274;13342:3;13331:9;13327:19;13318:6;13274:73;:::i;:::-;13357;13425:3;13414:9;13410:19;13401:6;13357:73;:::i;:::-;13440:81;13516:3;13505:9;13501:19;13492:6;13440:81;:::i;:::-;13531:73;13599:3;13588:9;13584:19;13575:6;13531:73;:::i;:::-;12265:1346;;;;;;;;;;;;;:::o;13617:143::-;13674:5;13705:6;13699:13;13690:22;;13721:33;13748:5;13721:33;:::i;:::-;13617:143;;;;:::o;13766:351::-;13836:6;13885:2;13873:9;13864:7;13860:23;13856:32;13853:119;;;13891:79;;:::i;:::-;13853:119;14011:1;14036:64;14092:7;14083:6;14072:9;14068:22;14036:64;:::i;:::-;14026:74;;13982:128;13766:351;;;;:::o;14123:137::-;14177:5;14208:6;14202:13;14193:22;;14224:30;14248:5;14224:30;:::i;:::-;14123:137;;;;:::o;14266:345::-;14333:6;14382:2;14370:9;14361:7;14357:23;14353:32;14350:119;;;14388:79;;:::i;:::-;14350:119;14508:1;14533:61;14586:7;14577:6;14566:9;14562:22;14533:61;:::i;:::-;14523:71;;14479:125;14266:345;;;;:::o;14617:118::-;14704:24;14722:5;14704:24;:::i;:::-;14699:3;14692:37;14617:118;;:::o;14741:332::-;14862:4;14900:2;14889:9;14885:18;14877:26;;14913:71;14981:1;14970:9;14966:17;14957:6;14913:71;:::i;:::-;14994:72;15062:2;15051:9;15047:18;15038:6;14994:72;:::i;:::-;14741:332;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "49440": [
        {
          "start": 861,
          "length": 32
        },
        {
          "start": 1064,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FRAX_GOVERNOR_OMEGA_ADDRESS()": "7a76fa4a",
    "checkAfterExecution(bytes32,bool)": "93271368",
    "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": "75f0bb52",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fraxGovernorOmega\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FRAX_GOVERNOR_OMEGA_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"checkAfterExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"checkTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jon Walch (Frax Finance) https://github.com/jonwalch\",\"kind\":\"dev\",\"methods\":{\"checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)\":{\"params\":{\"baseGas\":\"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload of Safe transaction.\",\"gasPrice\":\"Gas price that should be used for the payment calculation.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"msgSender\":\"Address of caller of GnosisSafe::execTransaction()\",\"operation\":\"Operation type of Safe transaction.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the Safe transaction.\",\"to\":\"Destination address of Safe transaction.\",\"value\":\"Ether value of Safe transaction.\"}},\"constructor\":{\"params\":{\"fraxGovernorOmega\":\"The address of the FraxGovernorOmega contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"FraxGuard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FRAX_GOVERNOR_OMEGA_ADDRESS()\":{\"notice\":\"The address of the FraxGovernorOmega contract\"},\"checkAfterExecution(bytes32,bool)\":{\"notice\":\"The ```checkAfterExecution``` function is a \\\"callback\\\" from within GnosisSafe::execTransaction() that runs after execution\"},\"checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)\":{\"notice\":\"The ```checkTransaction``` function is a \\\"callback\\\" from within GnosisSafe::execTransaction() that runs before execution\"},\"constructor\":{\"notice\":\"The ```constructor``` function is called on deployment\"}},\"notice\":\"A Gnosis Safe Guard that restricts Safe transaction execution to Safe owners and requires approval from FraxGovernorOmega\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FraxGuard.sol\":\"FraxGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":5000},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/\",\":@openzeppelin/=node_modules/openzeppelin-solidity/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":frax-std/=node_modules/frax-standard-solidity/src/\",\":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/\",\":safe-tools/=node_modules/safe-tools/src/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0x53a532a31f9632d5a73ad0df56f05bd2b66a2f781f571eb48d00367d370707f9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://eebc15cb7c83cf9516514b34bd16fb19c08104c738fa172ae3c98c66b84708ed\",\"dweb:/ipfs/QmfJ4yX5WwHU58QVoxJFaejyerscTs6VCgn2TdUVrEZeTP\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29\",\"dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a\",\"dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e\"]},\"src/FraxGuard.sol\":{\"keccak256\":\"0xf2c6aca3ed8c502984a6fd0a009ee7216d383185f90a4512ca6cbfc947e07742\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://b18235b1f7a44109d9ea3022c4412fd30eca342146f1890645034cd3026753ae\",\"dweb:/ipfs/QmTkxK7LXzxM3fG1HAwCrJVGsdXJfHXtHYZEX5QiFKLNUH\"]},\"src/interfaces/ISafe.sol\":{\"keccak256\":\"0xe35171cf2b35135e42e9f8fea0b02affd31d43bca23db963af9cdfd20917bcec\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://2d28cfe056fb43df2aebe2b16d7abd60281a8faefc2231bae5264d54952ded18\",\"dweb:/ipfs/QmSKSM2apePPPyx8oKvQhGRTXznKjftAJwCp2EU8gN5MAR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fraxGovernorOmega",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FRAX_GOVERNOR_OMEGA_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAfterExecution"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "msgSender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
            "params": {
              "baseGas": "Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)",
              "data": "Data payload of Safe transaction.",
              "gasPrice": "Gas price that should be used for the payment calculation.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "msgSender": "Address of caller of GnosisSafe::execTransaction()",
              "operation": "Operation type of Safe transaction.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Gas that should be used for the Safe transaction.",
              "to": "Destination address of Safe transaction.",
              "value": "Ether value of Safe transaction."
            }
          },
          "constructor": {
            "params": {
              "fraxGovernorOmega": "The address of the FraxGovernorOmega contract"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "FRAX_GOVERNOR_OMEGA_ADDRESS()": {
            "notice": "The address of the FraxGovernorOmega contract"
          },
          "checkAfterExecution(bytes32,bool)": {
            "notice": "The ```checkAfterExecution``` function is a \"callback\" from within GnosisSafe::execTransaction() that runs after execution"
          },
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
            "notice": "The ```checkTransaction``` function is a \"callback\" from within GnosisSafe::execTransaction() that runs before execution"
          },
          "constructor": {
            "notice": "The ```constructor``` function is called on deployment"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/",
        ":@openzeppelin/=node_modules/openzeppelin-solidity/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":frax-std/=node_modules/frax-standard-solidity/src/",
        ":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/",
        ":safe-tools/=node_modules/safe-tools/src/",
        ":solady/=node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/FraxGuard.sol": "FraxGuard"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0x53a532a31f9632d5a73ad0df56f05bd2b66a2f781f571eb48d00367d370707f9",
        "urls": [
          "bzz-raw://eebc15cb7c83cf9516514b34bd16fb19c08104c738fa172ae3c98c66b84708ed",
          "dweb:/ipfs/QmfJ4yX5WwHU58QVoxJFaejyerscTs6VCgn2TdUVrEZeTP"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc",
        "urls": [
          "bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29",
          "dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178",
        "urls": [
          "bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a",
          "dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/FraxGuard.sol": {
        "keccak256": "0xf2c6aca3ed8c502984a6fd0a009ee7216d383185f90a4512ca6cbfc947e07742",
        "urls": [
          "bzz-raw://b18235b1f7a44109d9ea3022c4412fd30eca342146f1890645034cd3026753ae",
          "dweb:/ipfs/QmTkxK7LXzxM3fG1HAwCrJVGsdXJfHXtHYZEX5QiFKLNUH"
        ],
        "license": "ISC"
      },
      "src/interfaces/ISafe.sol": {
        "keccak256": "0xe35171cf2b35135e42e9f8fea0b02affd31d43bca23db963af9cdfd20917bcec",
        "urls": [
          "bzz-raw://2d28cfe056fb43df2aebe2b16d7abd60281a8faefc2231bae5264d54952ded18",
          "dweb:/ipfs/QmSKSM2apePPPyx8oKvQhGRTXznKjftAJwCp2EU8gN5MAR"
        ],
        "license": "ISC"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FraxGuard.sol",
    "id": 49561,
    "exportedSymbols": {
      "Enum": [
        1998
      ],
      "FraxGuard": [
        49560
      ],
      "Guard": [
        1073
      ],
      "IERC165": [
        2457
      ],
      "ISafe": [
        55334
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4438:87",
    "nodes": [
      {
        "id": 49425,
        "nodeType": "PragmaDirective",
        "src": "32:24:87",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 49427,
        "nodeType": "ImportDirective",
        "src": "1109:70:87",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/interfaces/IERC165.sol",
        "file": "@gnosis.pm/contracts/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49561,
        "sourceUnit": 2458,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49426,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2457,
              "src": "1118:7:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49429,
        "nodeType": "ImportDirective",
        "src": "1180:67:87",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol",
        "file": "@gnosis.pm/contracts/base/GuardManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49561,
        "sourceUnit": 1114,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49428,
              "name": "Guard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1073,
              "src": "1189:5:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49432,
        "nodeType": "ImportDirective",
        "src": "1248:53:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ISafe.sol",
        "file": "./interfaces/ISafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49561,
        "sourceUnit": 55335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49430,
              "name": "Enum",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1998,
              "src": "1257:4:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49431,
              "name": "ISafe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55334,
              "src": "1263:5:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49560,
        "nodeType": "ContractDefinition",
        "src": "1524:2945:87",
        "nodes": [
          {
            "id": 49440,
            "nodeType": "VariableDeclaration",
            "src": "1629:52:87",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 49438,
              "nodeType": "StructuredDocumentation",
              "src": "1567:57:87",
              "text": "@notice The address of the FraxGovernorOmega contract"
            },
            "functionSelector": "7a76fa4a",
            "mutability": "immutable",
            "name": "FRAX_GOVERNOR_OMEGA_ADDRESS",
            "nameLocation": "1654:27:87",
            "scope": 49560,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49439,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1629:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49451,
            "nodeType": "FunctionDefinition",
            "src": "1838:103:87",
            "nodes": [],
            "body": {
              "id": 49450,
              "nodeType": "Block",
              "src": "1877:64:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49446,
                      "name": "FRAX_GOVERNOR_OMEGA_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49440,
                      "src": "1887:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49447,
                      "name": "fraxGovernorOmega",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49443,
                      "src": "1917:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1887:47:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49449,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:47:87"
                }
              ]
            },
            "documentation": {
              "id": 49441,
              "nodeType": "StructuredDocumentation",
              "src": "1688:145:87",
              "text": "@notice The ```constructor``` function is called on deployment\n @param fraxGovernorOmega The address of the FraxGovernorOmega contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49443,
                  "mutability": "mutable",
                  "name": "fraxGovernorOmega",
                  "nameLocation": "1858:17:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49451,
                  "src": "1850:25:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:27:87"
            },
            "returnParameters": {
              "id": 49445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:87"
            },
            "scope": 49560,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49525,
            "nodeType": "FunctionDefinition",
            "src": "2864:1092:87",
            "nodes": [],
            "body": {
              "id": 49524,
              "nodeType": "Block",
              "src": "3272:684:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49480,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "3288:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 49524,
                      "src": "3282:10:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafe_$55334",
                        "typeString": "contract ISafe"
                      },
                      "typeName": {
                        "id": 49479,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49478,
                          "name": "ISafe",
                          "nameLocations": [
                            "3282:5:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55334,
                          "src": "3282:5:87"
                        },
                        "referencedDeclaration": 55334,
                        "src": "3282:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49485,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3301:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3305:6:87",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3301:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49481,
                      "name": "ISafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55334,
                      "src": "3295:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISafe_$55334_$",
                        "typeString": "type(contract ISafe)"
                      }
                    },
                    "id": 49484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:17:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafe_$55334",
                      "typeString": "contract ISafe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3282:30:87"
                },
                {
                  "assignments": [
                    49487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49487,
                      "mutability": "mutable",
                      "name": "txHash",
                      "nameLocation": "3330:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 49524,
                      "src": "3322:14:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49486,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3322:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49505,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49490,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49454,
                        "src": "3381:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49491,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49456,
                        "src": "3404:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49492,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49458,
                        "src": "3429:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 49493,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49461,
                        "src": "3458:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$1997",
                          "typeString": "enum Enum.Operation"
                        }
                      },
                      {
                        "id": 49494,
                        "name": "safeTxGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49463,
                        "src": "3492:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49495,
                        "name": "baseGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49465,
                        "src": "3524:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49496,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49467,
                        "src": "3555:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49497,
                        "name": "gasToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49469,
                        "src": "3587:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49498,
                        "name": "refundReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49471,
                        "src": "3625:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 49499,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49480,
                              "src": "3661:4:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$55334",
                                "typeString": "contract ISafe"
                              }
                            },
                            "id": 49500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3666:5:87",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55276,
                            "src": "3661:10:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 49501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3661:12:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 49502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3676:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3661:16:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Operation_$1997",
                          "typeString": "enum Enum.Operation"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49488,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49480,
                        "src": "3339:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$55334",
                          "typeString": "contract ISafe"
                        }
                      },
                      "id": 49489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3344:18:87",
                      "memberName": "getTransactionHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55321,
                      "src": "3339:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$1997_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,bytes memory,enum Enum.Operation,uint256,uint256,uint256,address,address,uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 49504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3377:2:87",
                      "3397:5:87",
                      "3423:4:87",
                      "3447:9:87",
                      "3481:9:87",
                      "3515:7:87",
                      "3545:8:87",
                      "3577:8:87",
                      "3609:14:87",
                      "3653:6:87"
                    ],
                    "names": [
                      "to",
                      "value",
                      "data",
                      "operation",
                      "safeTxGas",
                      "baseGas",
                      "gasPrice",
                      "gasToken",
                      "refundReceiver",
                      "_nonce"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3339:406:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3322:423:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3772:24:87",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 49508,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49475,
                            "src": "3786:9:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49506,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49480,
                            "src": "3773:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$55334",
                              "typeString": "contract ISafe"
                            }
                          },
                          "id": 49507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3778:7:87",
                          "memberName": "isOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55289,
                          "src": "3773:12:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) external returns (bool)"
                          }
                        },
                        "id": 49509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3773:23:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 49513,
                            "name": "FRAX_GOVERNOR_OMEGA_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49440,
                            "src": "3842:27:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 49514,
                            "name": "txHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49487,
                            "src": "3879:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 49511,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49480,
                            "src": "3812:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$55334",
                              "typeString": "contract ISafe"
                            }
                          },
                          "id": 49512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3817:14:87",
                          "memberName": "approvedHashes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55271,
                          "src": "3812:19:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes32) external returns (uint256)"
                          }
                        },
                        "id": 49515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3834:6:87",
                          "3871:6:87"
                        ],
                        "names": [
                          "signer",
                          "txHash"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3812:76:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 49516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3812:81:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3772:121:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49523,
                  "nodeType": "IfStatement",
                  "src": "3755:195:87",
                  "trueBody": {
                    "id": 49522,
                    "nodeType": "Block",
                    "src": "3904:46:87",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49519,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49559,
                            "src": "3925:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3925:14:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49521,
                        "nodeType": "RevertStatement",
                        "src": "3918:21:87"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              1065
            ],
            "documentation": {
              "id": 49452,
              "nodeType": "StructuredDocumentation",
              "src": "1947:912:87",
              "text": "@notice The ```checkTransaction``` function is a \"callback\" from within GnosisSafe::execTransaction() that runs before execution\n @param to Destination address of Safe transaction.\n @param value Ether value of Safe transaction.\n @param data Data payload of Safe transaction.\n @param operation Operation type of Safe transaction.\n @param safeTxGas Gas that should be used for the Safe transaction.\n @param baseGas Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\n @param gasPrice Gas price that should be used for the payment calculation.\n @param gasToken Token address (or 0 if ETH) that is used for the payment.\n @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\n @param msgSender Address of caller of GnosisSafe::execTransaction()"
            },
            "functionSelector": "75f0bb52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransaction",
            "nameLocation": "2873:16:87",
            "parameters": {
              "id": 49476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49454,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2907:2:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "2899:10:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49456,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2927:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "2919:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2919:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49458,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2955:4:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "2942:17:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49457,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49461,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "2984:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "2969:24:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Operation_$1997",
                    "typeString": "enum Enum.Operation"
                  },
                  "typeName": {
                    "id": 49460,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49459,
                      "name": "Enum.Operation",
                      "nameLocations": [
                        "2969:4:87",
                        "2974:9:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1997,
                      "src": "2969:14:87"
                    },
                    "referencedDeclaration": 1997,
                    "src": "2969:14:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Operation_$1997",
                      "typeString": "enum Enum.Operation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49463,
                  "mutability": "mutable",
                  "name": "safeTxGas",
                  "nameLocation": "3011:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3003:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49465,
                  "mutability": "mutable",
                  "name": "baseGas",
                  "nameLocation": "3038:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3030:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3030:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49467,
                  "mutability": "mutable",
                  "name": "gasPrice",
                  "nameLocation": "3063:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3055:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3055:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49469,
                  "mutability": "mutable",
                  "name": "gasToken",
                  "nameLocation": "3089:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3081:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49471,
                  "mutability": "mutable",
                  "name": "refundReceiver",
                  "nameLocation": "3123:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3107:30:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 49470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:15:87",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3147:12:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49472,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49475,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "3247:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49525,
                  "src": "3239:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3239:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2889:373:87"
            },
            "returnParameters": {
              "id": 49477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:0:87"
            },
            "scope": 49560,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49534,
            "nodeType": "FunctionDefinition",
            "src": "4101:82:87",
            "nodes": [],
            "body": {
              "id": 49533,
              "nodeType": "Block",
              "src": "4181:2:87",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              1072
            ],
            "documentation": {
              "id": 49526,
              "nodeType": "StructuredDocumentation",
              "src": "3962:134:87",
              "text": "@notice The ```checkAfterExecution``` function is a \"callback\" from within GnosisSafe::execTransaction() that runs after execution"
            },
            "functionSelector": "93271368",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAfterExecution",
            "nameLocation": "4110:19:87",
            "parameters": {
              "id": 49531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49534,
                  "src": "4130:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49527,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4130:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49534,
                  "src": "4152:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4152:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4129:42:87"
            },
            "returnParameters": {
              "id": 49532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4181:0:87"
            },
            "scope": 49560,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49557,
            "nodeType": "FunctionDefinition",
            "src": "4189:251:87",
            "nodes": [],
            "body": {
              "id": 49556,
              "nodeType": "Block",
              "src": "4282:158:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 49547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49542,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49536,
                        "src": "4311:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49544,
                              "name": "Guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "4331:5:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Guard_$1073_$",
                                "typeString": "type(contract Guard)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_Guard_$1073_$",
                                "typeString": "type(contract Guard)"
                              }
                            ],
                            "id": 49543,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4326:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4326:11:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_Guard_$1073",
                            "typeString": "type(contract Guard)"
                          }
                        },
                        "id": 49546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4338:11:87",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4326:23:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4311:38:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 49553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49548,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49536,
                        "src": "4379:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49550,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2457,
                              "src": "4399:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$2457_$",
                                "typeString": "type(contract IERC165)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$2457_$",
                                "typeString": "type(contract IERC165)"
                              }
                            ],
                            "id": 49549,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4394:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4394:13:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2457",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 49552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4408:11:87",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4394:25:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4379:40:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4311:108:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 49541,
                  "id": 49555,
                  "nodeType": "Return",
                  "src": "4292:127:87"
                }
              ]
            },
            "baseFunctions": [
              2456
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4198:17:87",
            "overrides": {
              "id": 49538,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4258:8:87"
            },
            "parameters": {
              "id": 49537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49536,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4223:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 49557,
                  "src": "4216:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 49535,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4215:20:87"
            },
            "returnParameters": {
              "id": 49541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49557,
                  "src": "4276:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4275:6:87"
            },
            "scope": 49560,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 49559,
            "nodeType": "ErrorDefinition",
            "src": "4446:21:87",
            "nodes": [],
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "4452:12:87",
            "parameters": {
              "id": 49558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4464:2:87"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49434,
              "name": "IERC165",
              "nameLocations": [
                "1546:7:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2457,
              "src": "1546:7:87"
            },
            "id": 49435,
            "nodeType": "InheritanceSpecifier",
            "src": "1546:7:87"
          },
          {
            "baseName": {
              "id": 49436,
              "name": "Guard",
              "nameLocations": [
                "1555:5:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1073,
              "src": "1555:5:87"
            },
            "id": 49437,
            "nodeType": "InheritanceSpecifier",
            "src": "1555:5:87"
          }
        ],
        "canonicalName": "FraxGuard",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49433,
          "nodeType": "StructuredDocumentation",
          "src": "1303:221:87",
          "text": "@title FraxGuard\n @author Jon Walch (Frax Finance) https://github.com/jonwalch\n @notice  A Gnosis Safe Guard that restricts Safe transaction execution to Safe owners and requires approval from FraxGovernorOmega"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49560,
          1073,
          2457
        ],
        "name": "FraxGuard",
        "nameLocation": "1533:9:87",
        "scope": 49561,
        "usedErrors": [
          49559
        ]
      }
    ],
    "license": "ISC"
  },
  "id": 87
}