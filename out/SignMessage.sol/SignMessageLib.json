{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "SignMsg",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506105f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a1028c41461003b57806385a5affe1461006b575b600080fd5b61005560048036038101906100509190610380565b610087565b60405161006291906103e2565b60405180910390f35b6100856004803603810190610080919061045d565b61018a565b005b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016100c79291906104aa565b604051602081830303815290604052805190602001209050601960f81b600160f81b3073ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015891906104ff565b8360405160200161016c949392919061059a565b60405160208183030381529060405280519060200120915050919050565b60006101d983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610087565b905060016007600083815260200190815260200160002081905550807fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e460405160405180910390a2505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61028d82610244565b810181811067ffffffffffffffff821117156102ac576102ab610255565b5b80604052505050565b60006102bf610226565b90506102cb8282610284565b919050565b600067ffffffffffffffff8211156102eb576102ea610255565b5b6102f482610244565b9050602081019050919050565b82818337600083830152505050565b600061032361031e846102d0565b6102b5565b90508281526020810184848401111561033f5761033e61023f565b5b61034a848285610301565b509392505050565b600082601f8301126103675761036661023a565b5b8135610377848260208601610310565b91505092915050565b60006020828403121561039657610395610230565b5b600082013567ffffffffffffffff8111156103b4576103b3610235565b5b6103c084828501610352565b91505092915050565b6000819050919050565b6103dc816103c9565b82525050565b60006020820190506103f760008301846103d3565b92915050565b600080fd5b600080fd5b60008083601f84011261041d5761041c61023a565b5b8235905067ffffffffffffffff81111561043a576104396103fd565b5b60208301915083600182028301111561045657610455610402565b5b9250929050565b6000806020838503121561047457610473610230565b5b600083013567ffffffffffffffff81111561049257610491610235565b5b61049e85828601610407565b92509250509250929050565b60006040820190506104bf60008301856103d3565b6104cc60208301846103d3565b9392505050565b6104dc816103c9565b81146104e757600080fd5b50565b6000815190506104f9816104d3565b92915050565b60006020828403121561051557610514610230565b5b6000610523848285016104ea565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61057361056e8261052c565b610558565b82525050565b6000819050919050565b61059461058f826103c9565b610579565b82525050565b60006105a68287610562565b6001820191506105b68286610562565b6001820191506105c68285610583565b6020820191506105d68284610583565b6020820191508190509594505050505056fea164736f6c6343000813000a",
    "sourceMap": "265:1185:14:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630a1028c41461003b57806385a5affe1461006b575b600080fd5b61005560048036038101906100509190610380565b610087565b60405161006291906103e2565b60405180910390f35b6100856004803603810190610080919061045d565b61018a565b005b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016100c79291906104aa565b604051602081830303815290604052805190602001209050601960f81b600160f81b3073ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015891906104ff565b8360405160200161016c949392919061059a565b60405160208183030381529060405280519060200120915050919050565b60006101d983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610087565b905060016007600083815260200190815260200160002081905550807fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e460405160405180910390a2505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61028d82610244565b810181811067ffffffffffffffff821117156102ac576102ab610255565b5b80604052505050565b60006102bf610226565b90506102cb8282610284565b919050565b600067ffffffffffffffff8211156102eb576102ea610255565b5b6102f482610244565b9050602081019050919050565b82818337600083830152505050565b600061032361031e846102d0565b6102b5565b90508281526020810184848401111561033f5761033e61023f565b5b61034a848285610301565b509392505050565b600082601f8301126103675761036661023a565b5b8135610377848260208601610310565b91505092915050565b60006020828403121561039657610395610230565b5b600082013567ffffffffffffffff8111156103b4576103b3610235565b5b6103c084828501610352565b91505092915050565b6000819050919050565b6103dc816103c9565b82525050565b60006020820190506103f760008301846103d3565b92915050565b600080fd5b600080fd5b60008083601f84011261041d5761041c61023a565b5b8235905067ffffffffffffffff81111561043a576104396103fd565b5b60208301915083600182028301111561045657610455610402565b5b9250929050565b6000806020838503121561047457610473610230565b5b600083013567ffffffffffffffff81111561049257610491610235565b5b61049e85828601610407565b92509250509250929050565b60006040820190506104bf60008301856103d3565b6104cc60208301846103d3565b9392505050565b6104dc816103c9565b81146104e757600080fd5b50565b6000815190506104f9816104d3565b92915050565b60006020828403121561051557610514610230565b5b6000610523848285016104ea565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61057361056e8261052c565b610558565b82525050565b6000819050919050565b61059461058f826103c9565b610579565b82525050565b60006105a68287610562565b6001820191506105b68286610562565b6001820191506105c68285610583565b6020820191506105d68284610583565b6020820191508190509594505050505056fea164736f6c6343000813000a",
    "sourceMap": "265:1185:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;780:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1114:334;1181:7;1200:23;426:66;1247:17;;1276:7;1266:18;;;;;;1236:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1226:60;;;;;;1200:86;;1349:4;1342:12;;1363:4;1356:12;;1397:4;1370:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:15;1325:115;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1315:126;;;;;;1296:145;;;1114:334;;;:::o;780:176::-;842:15;860:21;875:5;;860:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:21::i;:::-;842:39;;917:1;891:14;:23;906:7;891:23;;;;;;;;;;;:27;;;;941:7;933:16;;;;;;;;;;832:124;780:176;;:::o;7:75:111:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:307::-;1357:4;1447:18;1439:6;1436:30;1433:56;;;1469:18;;:::i;:::-;1433:56;1507:29;1529:6;1507:29;:::i;:::-;1499:37;;1591:4;1585;1581:15;1573:23;;1296:307;;;:::o;1609:146::-;1706:6;1701:3;1696;1683:30;1747:1;1738:6;1733:3;1729:16;1722:27;1609:146;;;:::o;1761:423::-;1838:5;1863:65;1879:48;1920:6;1879:48;:::i;:::-;1863:65;:::i;:::-;1854:74;;1951:6;1944:5;1937:21;1989:4;1982:5;1978:16;2027:3;2018:6;2013:3;2009:16;2006:25;2003:112;;;2034:79;;:::i;:::-;2003:112;2124:54;2171:6;2166:3;2161;2124:54;:::i;:::-;1844:340;1761:423;;;;;:::o;2203:338::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:78;2531:3;2523:6;2516:4;2508:6;2504:17;2457:78;:::i;:::-;2448:87;;2264:277;2203:338;;;;:::o;2547:507::-;2615:6;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2818:1;2807:9;2803:17;2790:31;2848:18;2840:6;2837:30;2834:117;;;2870:79;;:::i;:::-;2834:117;2975:62;3029:7;3020:6;3009:9;3005:22;2975:62;:::i;:::-;2965:72;;2761:286;2547:507;;;;:::o;3060:77::-;3097:7;3126:5;3115:16;;3060:77;;;:::o;3143:118::-;3230:24;3248:5;3230:24;:::i;:::-;3225:3;3218:37;3143:118;;:::o;3267:222::-;3360:4;3398:2;3387:9;3383:18;3375:26;;3411:71;3479:1;3468:9;3464:17;3455:6;3411:71;:::i;:::-;3267:222;;;;:::o;3495:117::-;3604:1;3601;3594:12;3618:117;3727:1;3724;3717:12;3754:552;3811:8;3821:6;3871:3;3864:4;3856:6;3852:17;3848:27;3838:122;;3879:79;;:::i;:::-;3838:122;3992:6;3979:20;3969:30;;4022:18;4014:6;4011:30;4008:117;;;4044:79;;:::i;:::-;4008:117;4158:4;4150:6;4146:17;4134:29;;4212:3;4204:4;4196:6;4192:17;4182:8;4178:32;4175:41;4172:128;;;4219:79;;:::i;:::-;4172:128;3754:552;;;;;:::o;4312:527::-;4382:6;4390;4439:2;4427:9;4418:7;4414:23;4410:32;4407:119;;;4445:79;;:::i;:::-;4407:119;4593:1;4582:9;4578:17;4565:31;4623:18;4615:6;4612:30;4609:117;;;4645:79;;:::i;:::-;4609:117;4758:64;4814:7;4805:6;4794:9;4790:22;4758:64;:::i;:::-;4740:82;;;;4536:296;4312:527;;;;;:::o;4845:332::-;4966:4;5004:2;4993:9;4989:18;4981:26;;5017:71;5085:1;5074:9;5070:17;5061:6;5017:71;:::i;:::-;5098:72;5166:2;5155:9;5151:18;5142:6;5098:72;:::i;:::-;4845:332;;;;;:::o;5183:122::-;5256:24;5274:5;5256:24;:::i;:::-;5249:5;5246:35;5236:63;;5295:1;5292;5285:12;5236:63;5183:122;:::o;5311:143::-;5368:5;5399:6;5393:13;5384:22;;5415:33;5442:5;5415:33;:::i;:::-;5311:143;;;;:::o;5460:351::-;5530:6;5579:2;5567:9;5558:7;5554:23;5550:32;5547:119;;;5585:79;;:::i;:::-;5547:119;5705:1;5730:64;5786:7;5777:6;5766:9;5762:22;5730:64;:::i;:::-;5720:74;;5676:128;5460:351;;;;:::o;5817:149::-;5853:7;5893:66;5886:5;5882:78;5871:89;;5817:149;;;:::o;5972:78::-;6010:7;6039:5;6028:16;;5972:78;;;:::o;6056:153::-;6159:43;6178:23;6195:5;6178:23;:::i;:::-;6159:43;:::i;:::-;6154:3;6147:56;6056:153;;:::o;6215:79::-;6254:7;6283:5;6272:16;;6215:79;;;:::o;6300:157::-;6405:45;6425:24;6443:5;6425:24;:::i;:::-;6405:45;:::i;:::-;6400:3;6393:58;6300:157;;:::o;6463:669::-;6655:3;6670:73;6739:3;6730:6;6670:73;:::i;:::-;6768:1;6763:3;6759:11;6752:18;;6780:73;6849:3;6840:6;6780:73;:::i;:::-;6878:1;6873:3;6869:11;6862:18;;6890:75;6961:3;6952:6;6890:75;:::i;:::-;6990:2;6985:3;6981:12;6974:19;;7003:75;7074:3;7065:6;7003:75;:::i;:::-;7103:2;7098:3;7094:12;7087:19;;7123:3;7116:10;;6463:669;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getMessageHash(bytes)": "0a1028c4",
    "signMessage(bytes)": "85a5affe"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"SignMsg\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"getMessageHash(bytes)\":{\"details\":\"Returns hash of a message that can be signed by owners.\",\"params\":{\"message\":\"Message that should be hashed\"},\"returns\":{\"_0\":\"Message hash.\"}},\"signMessage(bytes)\":{\"details\":\"Marks a message as signed, so that it can be used with EIP-1271\",\"params\":{\"_data\":\"Arbitrary length data that should be marked as signed on the behalf of address(this)\"}}},\"title\":\"SignMessageLib - Allows to set an entry in the signedMessages\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"signMessage(bytes)\":{\"notice\":\"Marks a message (`_data`) as signed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol\":\"SignMessageLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":5000},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/\",\":@openzeppelin/=node_modules/openzeppelin-solidity/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":frax-std/=node_modules/frax-standard-solidity/src/\",\":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/\",\":safe-tools/=node_modules/safe-tools/src/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol\":{\"keccak256\":\"0x2ca9e3e053c969b9364f62c50c2c25b92525db7fd0bad3ae1fb0c20dd575367c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ef1bceac49ae93b31aec41380862fdc267823c41e2dfefb9b7d70d0996e858e1\",\"dweb:/ipfs/QmWFU5bic2CGv8QgQ8bxJnjMfuJgNL2zZubt5hvzhcRZPc\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309\",\"dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x1be9f0f3e80a78134c2e3a026c6a14759785bd35d135e87a4a025aeb6742791f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://44130f09921e895c0b9d7797de1d64940a8c43391efcda3a0208cb9ad96475a7\",\"dweb:/ipfs/QmUur4hzvCJ68PnW6zQFpemAMH2DH5mExPqSZdpKeY1ZRN\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0x53a532a31f9632d5a73ad0df56f05bd2b66a2f781f571eb48d00367d370707f9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://eebc15cb7c83cf9516514b34bd16fb19c08104c738fa172ae3c98c66b84708ed\",\"dweb:/ipfs/QmfJ4yX5WwHU58QVoxJFaejyerscTs6VCgn2TdUVrEZeTP\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc\",\"dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b\",\"dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830\",\"dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2\",\"dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29\",\"dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2d37be182472ccfee62a33e9939f9b3d509be4c32e9fdebc2c1746c573655987\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f76d96f10640beee7d4b4ad119bd3c64aeb26929011d9c1eec738c63ebc92f63\",\"dweb:/ipfs/QmaqgDocQumKeyUMgZU7STzpTASQjDbUxbQKuZ17xhLaXz\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666\",\"dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa\",\"dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/GnosisSafeStorage.sol\":{\"keccak256\":\"0xecfd0d8a43d859ef1fb8161cb21ce5d38461603383378a5b1c4c7d5d4a3bfbf3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4248ba92a7d4b9c24344944427b7a2f092f2328d57d39317f4a9f178f503beb5\",\"dweb:/ipfs/QmUFuLoQRjZdx7fsDEprFstuDjLQ7em3syagHA8b8AD2Sa\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol\":{\"keccak256\":\"0x7f614aba3414613ddee5699b92745cdd79be6f296e796a8a917bdf9699de4602\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6d3dd0b132b1f84fe924bb852d271ce6dff741f745b1d26ac337f316262b643b\",\"dweb:/ipfs/QmbLgdGcsaST7SYPxMBoXAdoTM4rmTk4Mj4T9xHucUZboH\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol\":{\"keccak256\":\"0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156\",\"dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1\",\"dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignMsg",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "signMessage"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getMessageHash(bytes)": {
            "details": "Returns hash of a message that can be signed by owners.",
            "params": {
              "message": "Message that should be hashed"
            },
            "returns": {
              "_0": "Message hash."
            }
          },
          "signMessage(bytes)": {
            "details": "Marks a message as signed, so that it can be used with EIP-1271",
            "params": {
              "_data": "Arbitrary length data that should be marked as signed on the behalf of address(this)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "signMessage(bytes)": {
            "notice": "Marks a message (`_data`) as signed."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/safe-contracts/",
        ":@openzeppelin/=node_modules/openzeppelin-solidity/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":frax-std/=node_modules/frax-standard-solidity/src/",
        ":safe-contracts/=node_modules/@gnosis.pm/safe-contracts/contracts/",
        ":safe-tools/=node_modules/safe-tools/src/",
        ":solady/=node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol": "SignMessageLib"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol": {
        "keccak256": "0x2ca9e3e053c969b9364f62c50c2c25b92525db7fd0bad3ae1fb0c20dd575367c",
        "urls": [
          "bzz-raw://ef1bceac49ae93b31aec41380862fdc267823c41e2dfefb9b7d70d0996e858e1",
          "dweb:/ipfs/QmWFU5bic2CGv8QgQ8bxJnjMfuJgNL2zZubt5hvzhcRZPc"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08",
        "urls": [
          "bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309",
          "dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x1be9f0f3e80a78134c2e3a026c6a14759785bd35d135e87a4a025aeb6742791f",
        "urls": [
          "bzz-raw://44130f09921e895c0b9d7797de1d64940a8c43391efcda3a0208cb9ad96475a7",
          "dweb:/ipfs/QmUur4hzvCJ68PnW6zQFpemAMH2DH5mExPqSZdpKeY1ZRN"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0x53a532a31f9632d5a73ad0df56f05bd2b66a2f781f571eb48d00367d370707f9",
        "urls": [
          "bzz-raw://eebc15cb7c83cf9516514b34bd16fb19c08104c738fa172ae3c98c66b84708ed",
          "dweb:/ipfs/QmfJ4yX5WwHU58QVoxJFaejyerscTs6VCgn2TdUVrEZeTP"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5",
        "urls": [
          "bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc",
          "dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12",
        "urls": [
          "bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b",
          "dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol": {
        "keccak256": "0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72",
        "urls": [
          "bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830",
          "dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1",
        "urls": [
          "bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2",
          "dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc",
        "urls": [
          "bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29",
          "dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2d37be182472ccfee62a33e9939f9b3d509be4c32e9fdebc2c1746c573655987",
        "urls": [
          "bzz-raw://f76d96f10640beee7d4b4ad119bd3c64aeb26929011d9c1eec738c63ebc92f63",
          "dweb:/ipfs/QmaqgDocQumKeyUMgZU7STzpTASQjDbUxbQKuZ17xhLaXz"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648",
        "urls": [
          "bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666",
          "dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x36853adb266c2ab7d3c612aca799441a86bd15d9e1d24fc6c70d63f5c2df3aaf",
        "urls": [
          "bzz-raw://3f210f47e032444049040d2929b32e02089aac1d05b07dcd77ee34bb63505dfa",
          "dweb:/ipfs/QmbE8GXFAbthieTL51S2XPF5URyPaj1tDubVuhztkSoiPo"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/GnosisSafeStorage.sol": {
        "keccak256": "0xecfd0d8a43d859ef1fb8161cb21ce5d38461603383378a5b1c4c7d5d4a3bfbf3",
        "urls": [
          "bzz-raw://4248ba92a7d4b9c24344944427b7a2f092f2328d57d39317f4a9f178f503beb5",
          "dweb:/ipfs/QmUFuLoQRjZdx7fsDEprFstuDjLQ7em3syagHA8b8AD2Sa"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol": {
        "keccak256": "0x7f614aba3414613ddee5699b92745cdd79be6f296e796a8a917bdf9699de4602",
        "urls": [
          "bzz-raw://6d3dd0b132b1f84fe924bb852d271ce6dff741f745b1d26ac337f316262b643b",
          "dweb:/ipfs/QmbLgdGcsaST7SYPxMBoXAdoTM4rmTk4Mj4T9xHucUZboH"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol": {
        "keccak256": "0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98",
        "urls": [
          "bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156",
          "dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801",
        "urls": [
          "bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1",
          "dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol",
    "id": 2266,
    "exportedSymbols": {
      "Enum": [
        1998
      ],
      "EtherPaymentFallback": [
        2020
      ],
      "Executor": [
        984
      ],
      "FallbackManager": [
        1035
      ],
      "GnosisSafe": [
        952
      ],
      "GnosisSafeMath": [
        2371
      ],
      "GnosisSafeStorage": [
        2180
      ],
      "Guard": [
        1073
      ],
      "GuardManager": [
        1113
      ],
      "ISignatureValidator": [
        2476
      ],
      "ISignatureValidatorConstants": [
        2463
      ],
      "ModuleManager": [
        1480
      ],
      "OwnerManager": [
        1991
      ],
      "SecuredTokenTransfer": [
        2047
      ],
      "SelfAuthorized": [
        2073
      ],
      "SignMessageLib": [
        2265
      ],
      "SignatureDecoder": [
        2093
      ],
      "Singleton": [
        2099
      ],
      "StorageAccessible": [
        2148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1409:14",
    "nodes": [
      {
        "id": 2182,
        "nodeType": "PragmaDirective",
        "src": "42:31:14",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 2183,
        "nodeType": "ImportDirective",
        "src": "75:33:14",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/examples/libraries/GnosisSafeStorage.sol",
        "file": "./GnosisSafeStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2266,
        "sourceUnit": 2181,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2184,
        "nodeType": "ImportDirective",
        "src": "109:30:14",
        "nodes": [],
        "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol",
        "file": "../../GnosisSafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2266,
        "sourceUnit": 953,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2265,
        "nodeType": "ContractDefinition",
        "src": "265:1185:14",
        "nodes": [
          {
            "id": 2190,
            "nodeType": "VariableDeclaration",
            "src": "381:111:14",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SAFE_MSG_TYPEHASH",
            "nameLocation": "406:17:14",
            "scope": 2265,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2188,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836306233636266386234613232336436386436343162336236646466396132393865376633333731306366336433613964313134366235613631353066626361",
              "id": 2189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "426:66:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_43739706848186989041152069077571617734008543096732098246335109361212071148490_by_1",
                "typeString": "int_const 4373...(69 digits omitted)...8490"
              },
              "value": "0x60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca"
            },
            "visibility": "private"
          },
          {
            "id": 2194,
            "nodeType": "EventDefinition",
            "src": "499:39:14",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e4",
            "name": "SignMsg",
            "nameLocation": "505:7:14",
            "parameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2192,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "msgHash",
                  "nameLocation": "529:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "513:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:25:14"
            }
          },
          {
            "id": 2217,
            "nodeType": "FunctionDefinition",
            "src": "780:176:14",
            "nodes": [],
            "body": {
              "id": 2216,
              "nodeType": "Block",
              "src": "832:124:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2201,
                      "mutability": "mutable",
                      "name": "msgHash",
                      "nameLocation": "850:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2216,
                      "src": "842:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2200,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2205,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2203,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "875:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 2202,
                      "name": "getMessageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2264,
                      "src": "860:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) view returns (bytes32)"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:39:14"
                },
                {
                  "expression": {
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2206,
                        "name": "signedMessages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2173,
                        "src": "891:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 2208,
                      "indexExpression": {
                        "id": 2207,
                        "name": "msgHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "906:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "891:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "917:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "891:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "891:27:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2213,
                        "name": "msgHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "941:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2212,
                      "name": "SignMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2194,
                      "src": "933:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2215,
                  "nodeType": "EmitStatement",
                  "src": "928:21:14"
                }
              ]
            },
            "documentation": {
              "id": 2195,
              "nodeType": "StructuredDocumentation",
              "src": "544:231:14",
              "text": "@dev Marks a message as signed, so that it can be used with EIP-1271\n @notice Marks a message (`_data`) as signed.\n @param _data Arbitrary length data that should be marked as signed on the behalf of address(this)"
            },
            "functionSelector": "85a5affe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signMessage",
            "nameLocation": "789:11:14",
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "816:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "801:20:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:22:14"
            },
            "returnParameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:14"
            },
            "scope": 2265,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2264,
            "nodeType": "FunctionDefinition",
            "src": "1114:334:14",
            "nodes": [],
            "body": {
              "id": 2263,
              "nodeType": "Block",
              "src": "1190:258:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2226,
                      "mutability": "mutable",
                      "name": "safeMessageHash",
                      "nameLocation": "1208:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2263,
                      "src": "1200:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2225,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1200:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2236,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2230,
                            "name": "SAFE_MSG_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "1247:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2232,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2220,
                                "src": "1276:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2231,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1266:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1266:18:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2228,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1236:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1240:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1236:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1236:49:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2227,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1226:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1200:86:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30783139",
                                "id": 2242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1349:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                },
                                "value": "0x19"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                }
                              ],
                              "id": 2241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1342:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 2240,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "1342:6:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1342:12:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30783031",
                                "id": 2246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1363:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "0x01"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1356:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 2244,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "1356:6:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1356:12:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 2253,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "1397:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SignMessageLib_$2265",
                                              "typeString": "contract SignMessageLib"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_SignMessageLib_$2265",
                                              "typeString": "contract SignMessageLib"
                                            }
                                          ],
                                          "id": 2252,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1389:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2251,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1389:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2254,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1389:13:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1381:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 2249,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1381:8:14",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1381:22:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 2248,
                                  "name": "GnosisSafe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "1370:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$952_$",
                                    "typeString": "type(contract GnosisSafe)"
                                  }
                                },
                                "id": 2256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1370:34:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GnosisSafe_$952",
                                  "typeString": "contract GnosisSafe"
                                }
                              },
                              "id": 2257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1405:15:14",
                              "memberName": "domainSeparator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 844,
                              "src": "1370:50:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view external returns (bytes32)"
                              }
                            },
                            "id": 2258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1370:52:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2259,
                            "name": "safeMessageHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "1424:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2238,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1325:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1329:12:14",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1325:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1325:115:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2237,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1315:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:126:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2224,
                  "id": 2262,
                  "nodeType": "Return",
                  "src": "1296:145:14"
                }
              ]
            },
            "documentation": {
              "id": 2218,
              "nodeType": "StructuredDocumentation",
              "src": "962:147:14",
              "text": "@dev Returns hash of a message that can be signed by owners.\n @param message Message that should be hashed\n @return Message hash."
            },
            "functionSelector": "0a1028c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessageHash",
            "nameLocation": "1123:14:14",
            "parameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1151:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2264,
                  "src": "1138:20:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1137:22:14"
            },
            "returnParameters": {
              "id": 2224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2264,
                  "src": "1181:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:9:14"
            },
            "scope": 2265,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2186,
              "name": "GnosisSafeStorage",
              "nameLocations": [
                "292:17:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2180,
              "src": "292:17:14"
            },
            "id": 2187,
            "nodeType": "InheritanceSpecifier",
            "src": "292:17:14"
          }
        ],
        "canonicalName": "SignMessageLib",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2185,
          "nodeType": "StructuredDocumentation",
          "src": "141:124:14",
          "text": "@title SignMessageLib - Allows to set an entry in the signedMessages\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2265,
          2180
        ],
        "name": "SignMessageLib",
        "nameLocation": "274:14:14",
        "scope": 2266,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 14
}